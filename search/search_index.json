{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to InfraSonar InfraSonar a powerful infrastructure monitoring platform as a service. Features Agentless data collection where possible, minimizing our footprint in a monitored infrastructure; We excel in detailed state and performance monitoring; Effortless realtime anomaly detection; Crystal clear conditions.","title":"Home"},{"location":"#welcome-to-infrasonar","text":"InfraSonar a powerful infrastructure monitoring platform as a service. Features Agentless data collection where possible, minimizing our footprint in a monitored infrastructure; We excel in detailed state and performance monitoring; Effortless realtime anomaly detection; Crystal clear conditions.","title":"Welcome to InfraSonar"},{"location":"changelog/","text":"0.2.12 _ Wednesday 03 Aug 2022 @ 22:00 CET Minor Enodo updates. 0.2.11 _ Monday 01 Aug 2022 @ 21:00 CET Added Enodo. No more Guest probes. 0.2.10 _ Friday 15 Jul 2022 @ 13:00 CET Improved DNS probe dialog. Removed Lift, SQL SSH, VmwareGuest, WinRm and XenGuest probes. Added feedback for failed reports. Fixed adding a user with same email address but different auth provider. Fixed a few spelling mistakes. Added TcpProbe. Added WMI Check for files option using the cimDatafiles class. Added services-name to the windows services widget. 0.2.9 _ Tuesday 17 May 2022 @ 17:00 CET Fix saving the order of metrics in a grid. Changed caption column to description in application widget. 0.2.8 _ Monday 16 May 2022 @ 21:00 CET Added allowRedirects option to the http probe configuration. Added docker icon. Removed text widget. Added Azure probe. Allow agents to be added in InfraSonar. Fix display probe address. Fix filter for assigned alerts. Fix displaying the correct metrics in a widget. Fix application widget by using description field instead of caption . Fix closing a legend when moving mouse focus out the widget. No longer close a widget edit dialog when clicking outside the editor. 0.2.7 _ Tuesday 11 Apr 2022 @ 21:00 CET Upgraded packages. Fixed broken widget when switching between hosts. Enable search on host-name in alerts and closed-alerts page. Added pingProbe and removed psProbe . Added httpProbe . Added nmapProbe (v2.x.x). Fixed broken check interval select box. Fixed broken boolean probe switch. Added probe configuration checks on asset edit. Fixed broken filter component for True values in data table. Re-direct to the requested link after sign-in. Fixed typo in subscriptions. Fixed overlay bug on drop-down-arrows in \"edit widget\" dialog. Fixed bug with \"Add widget\" button when a asset has no label. Changed the no-environment page for new users and added copyright text. Changed the link to \"Contact support\" . Fixed bug with resetting the check interval. No longer allow to change dialog tabs while providing a reason for change. Remove missing network probe warning message as this is no longer a best practice. 0.2.6 _ Thursday 17 Feb 2022 @ 21:00 CET Fixed CSV download for InfraSonar Accounts (sysadmin). Add \"show more\" when more text-lines are available in logging message. Fixed missing email address at the no-environments page. Changed menu behavior at probe page (solves highlight last item) . Added icon for Pure Storage. Prevent view changes of probe page on refresh. 0.2.5 _ Tuesday 01 Feb 2022 @ 21:30 CET Fixed bug with incognito browsing. 0.2.4 _ Tuesday 01 Feb 2022 @ 20:00 CET Fixed bug in filter host specific closed alerts. Changed ordering on first click in a grid. Fixed bug in host filter on alerts page (not showing the name of the host). Switched to FireBase authentication. Added support for Microsoft Azure (work) accounts. Switched to NPM 8.x for website building. 0.2.3 _ Wednesday 12 Jan 2022 @ 22:00 CET Fixed bug with filter selection (not visible) in grid. Fixed bug with user container view when having no users. Fixed minor widget editor bugs. Changed filter and sort icon appearance to make active filter or order visible. 0.2.2 _ Friday 24 Dec 2021 @ 20:00 CET Fixed column sorting on container view. Fixed filter outline with little space to render the filter selection. Fixed missing condition options in expression builder. Added Last seen column to host overview as alternative to the Active column. 0.2.1 _ Wednesday 22 Dec 2021 @ 20:00 CET Added environment to Breadcrumbs bar when the name equals the parent container. Fixed access check for modifying Views and return with an appropriate message if not. Fixed spacing between name and body in an alert message. Removed incorrect icon in front of Agent-core in host overview. 0.2.0 _ Tuesday 21 Dec 2021 @ 20:00 CET Updated UI using the Material design language. Added Light/Dark mode. Added a dashboard which shows useful information and shortcuts. Added the Tasks overview. In this overview, Admins can see all tasks related to the current environment. The Closed alerts and the Search closed alerts pages are merged into a single page. Added the option to \"star\" Views and Environments as favorite. Added a \"Share\" button to Views . Added \"click-on-tag\" for \"copy-to-clipboard\". Merged the container and environment logging into one page. Added a \"Task\" column and a \"Parent\" column to log entries. Replaced the counter with tags in the Conditions page. Authentication provider is now implied when adding a user to a container. Improved feedback when submitting invalid forms. Added specific icons to all Hosts . Added \"No environments found\" screen, for users without container access. Added time selection to the statistics page. Added the \"Windows Services\" widget to the Insight page. 0.1.109 _ Tuesday 07 Dec 2021 @ 20:00 CET Fixed API checks. 0.1.108 _ Monday 29 Nov 2021 @ 20:00 CET Enable changed option for boolean and timestamp type. Removed CRM from InfraSonar. 0.1.107 _ Saturday 13 Nov 2021 @ 14:00 CET Critical update: aiogcd . 0.1.106 _ Friday 12 Nov 2021 @ 20:00 CET Collapsible raster on double mouse click. Added audit logging to re-discover changes on a host. Fixed bug with selecting a time range within a modal. Fixed socket message on re-connect. Added search in my alerts view. Prevent inserting invalid metric info. 0.1.105 _ Tuesday 12 Oct 2021 @ 20:00 CET Log tasks using the user who initiated the task. Return the taskId when creating a task using the API. Send an email to the user when a schedules task has failed. 0.1.104 _ Monday 13 Sep 2021 @ 20:00 CET Added Id column to environment overview page. Added /api/environments API call. Added support for custom time zone per environment. Fixed bug with assigned alerts for users without key string. 0.1.103 _ Tuesday 27 Jul 2021 @ 11:00 CET Loosely name validation for check and type in data query API call. 0.1.102 _ Wednesday 21 Jul 2021 @ 22:00 CET Added environment and lastSeen columns to api/hosts API call. Added api/labels API call to query for labels in an environment. Fixed bug in widget editor when no hosts are configured. Fixed minor widget bugs (no panel data, handle escape key correctly). 0.1.101 _ Thursday 15 Jul 2021 @ 20:00 CET Added check for valid labels in API call api/host/label/add . Added filter for empty hosts in view. Added filter item option in widgets. Added the option to exclude host with specified labels from a view. Auto convert int to float for the insert API call. Fixed bug in auto refresh on a view. Fixed bug in validate API metric names. Fixed bug when moving a root widget on a host overview page. Fixed minor bug in side menu on probe pages. Required metrics no longer accept a null value. 0.1.100 _ Tuesday 22 Jun 2021 @ 20:00 CET Added link to new InfraSonar documentation. Added query data API call and added /api/data to replace api/data/insert . Added support for withLabel and withProbe keys to hosts query API. Replaced accept / reject lists with item (not) in list . Check for int64 when using the API to insert data. Improved error messages when using incorrect API calls. Fixed double boolean naming when choosing a display function. 0.1.99 _ Tuesday 18 Apr 2021 @ 9:00 CET Fix alerts overview. 0.1.98 _ Monday 17 May 2021 @ 20:00 CET Added tool for generating encryption keys. Fix ConnectWise member API call. Fix My-Alert view (too many alerts). Fix time range selection on aggregation grid. Sort series on environment in time-series chart. Update: ThingsDB client (fix re-connect Emitter bug). Update: Python packages. Update: Npm packages. 0.1.97 _ Tuesday 20 Apr 2021 @ 12:00 CET Fix alerts. 0.1.96 _ Monday 19 Apr 2021 @ 19:45 CET Fix charts. 0.1.95 _ Monday 19 Apr 2021 @ 19:00 CET Improved item-list in expression editor. Fixed number of rows in grid after using a filter (search). Update browser title when opening a view. Fixed CTRL-F when viewing a data-table with search disabled. Added column suppressed label count on conditions page. Fixed bug with auto-refresh. Update: Python packages. Update: Npm packages. 0.1.94 _ Wednesday 7 Apr 2021 @ 15:30 CET Fixed ConnectWise manage bug, maximum summary length. 0.1.93 _ Tuesday 6 Apr 2021 @ 20:00 CET Added API route for posting InfraSonar (host) data. Added API routes for controlling metadata. Added derived metric option. 0.1.92 _ Monday 15 Mar 2021 @ 20:00 CET Fixed check for valid hostUuids in API handler. Select current user as default owner for an alert. 0.1.91 _ Wednesday 24 Feb 2021 @ 20:00 CET Allow ticket in CWM without owner. Update API documentation. 0.1.90 _ Tuesday 23 Feb 2021 @ 20:00 CET Added ConnectWise Manage support. Added environment widget for installed software on Windows. Added option to select a time range for the aggregation grid widget. Fixed bug in top menu after window resize. 0.1.89 _ Thursday 14 Jan 2021 @ 20:00 CET Added channels column on labels overview page. Added item (not) in list expression to replace black/white list. Added option to accept or reject specific conditions for DutyCalls. Added option to show/hide self signed certificates. Added option to sort on environemt in a gid widget. Added search box to certificate widget. Auto-complete default probe address unless changed by the user. Changed export to CSV for time and age values. Prevent saving conditions with empty expressions.","title":"Changelog"},{"location":"changelog/#0212","text":"_ Wednesday 03 Aug 2022 @ 22:00 CET Minor Enodo updates.","title":"0.2.12"},{"location":"changelog/#0211","text":"_ Monday 01 Aug 2022 @ 21:00 CET Added Enodo. No more Guest probes.","title":"0.2.11"},{"location":"changelog/#0210","text":"_ Friday 15 Jul 2022 @ 13:00 CET Improved DNS probe dialog. Removed Lift, SQL SSH, VmwareGuest, WinRm and XenGuest probes. Added feedback for failed reports. Fixed adding a user with same email address but different auth provider. Fixed a few spelling mistakes. Added TcpProbe. Added WMI Check for files option using the cimDatafiles class. Added services-name to the windows services widget.","title":"0.2.10"},{"location":"changelog/#029","text":"_ Tuesday 17 May 2022 @ 17:00 CET Fix saving the order of metrics in a grid. Changed caption column to description in application widget.","title":"0.2.9"},{"location":"changelog/#028","text":"_ Monday 16 May 2022 @ 21:00 CET Added allowRedirects option to the http probe configuration. Added docker icon. Removed text widget. Added Azure probe. Allow agents to be added in InfraSonar. Fix display probe address. Fix filter for assigned alerts. Fix displaying the correct metrics in a widget. Fix application widget by using description field instead of caption . Fix closing a legend when moving mouse focus out the widget. No longer close a widget edit dialog when clicking outside the editor.","title":"0.2.8"},{"location":"changelog/#027","text":"_ Tuesday 11 Apr 2022 @ 21:00 CET Upgraded packages. Fixed broken widget when switching between hosts. Enable search on host-name in alerts and closed-alerts page. Added pingProbe and removed psProbe . Added httpProbe . Added nmapProbe (v2.x.x). Fixed broken check interval select box. Fixed broken boolean probe switch. Added probe configuration checks on asset edit. Fixed broken filter component for True values in data table. Re-direct to the requested link after sign-in. Fixed typo in subscriptions. Fixed overlay bug on drop-down-arrows in \"edit widget\" dialog. Fixed bug with \"Add widget\" button when a asset has no label. Changed the no-environment page for new users and added copyright text. Changed the link to \"Contact support\" . Fixed bug with resetting the check interval. No longer allow to change dialog tabs while providing a reason for change. Remove missing network probe warning message as this is no longer a best practice.","title":"0.2.7"},{"location":"changelog/#026","text":"_ Thursday 17 Feb 2022 @ 21:00 CET Fixed CSV download for InfraSonar Accounts (sysadmin). Add \"show more\" when more text-lines are available in logging message. Fixed missing email address at the no-environments page. Changed menu behavior at probe page (solves highlight last item) . Added icon for Pure Storage. Prevent view changes of probe page on refresh.","title":"0.2.6"},{"location":"changelog/#025","text":"_ Tuesday 01 Feb 2022 @ 21:30 CET Fixed bug with incognito browsing.","title":"0.2.5"},{"location":"changelog/#024","text":"_ Tuesday 01 Feb 2022 @ 20:00 CET Fixed bug in filter host specific closed alerts. Changed ordering on first click in a grid. Fixed bug in host filter on alerts page (not showing the name of the host). Switched to FireBase authentication. Added support for Microsoft Azure (work) accounts. Switched to NPM 8.x for website building.","title":"0.2.4"},{"location":"changelog/#023","text":"_ Wednesday 12 Jan 2022 @ 22:00 CET Fixed bug with filter selection (not visible) in grid. Fixed bug with user container view when having no users. Fixed minor widget editor bugs. Changed filter and sort icon appearance to make active filter or order visible.","title":"0.2.3"},{"location":"changelog/#022","text":"_ Friday 24 Dec 2021 @ 20:00 CET Fixed column sorting on container view. Fixed filter outline with little space to render the filter selection. Fixed missing condition options in expression builder. Added Last seen column to host overview as alternative to the Active column.","title":"0.2.2"},{"location":"changelog/#021","text":"_ Wednesday 22 Dec 2021 @ 20:00 CET Added environment to Breadcrumbs bar when the name equals the parent container. Fixed access check for modifying Views and return with an appropriate message if not. Fixed spacing between name and body in an alert message. Removed incorrect icon in front of Agent-core in host overview.","title":"0.2.1"},{"location":"changelog/#020","text":"_ Tuesday 21 Dec 2021 @ 20:00 CET Updated UI using the Material design language. Added Light/Dark mode. Added a dashboard which shows useful information and shortcuts. Added the Tasks overview. In this overview, Admins can see all tasks related to the current environment. The Closed alerts and the Search closed alerts pages are merged into a single page. Added the option to \"star\" Views and Environments as favorite. Added a \"Share\" button to Views . Added \"click-on-tag\" for \"copy-to-clipboard\". Merged the container and environment logging into one page. Added a \"Task\" column and a \"Parent\" column to log entries. Replaced the counter with tags in the Conditions page. Authentication provider is now implied when adding a user to a container. Improved feedback when submitting invalid forms. Added specific icons to all Hosts . Added \"No environments found\" screen, for users without container access. Added time selection to the statistics page. Added the \"Windows Services\" widget to the Insight page.","title":"0.2.0"},{"location":"changelog/#01109","text":"_ Tuesday 07 Dec 2021 @ 20:00 CET Fixed API checks.","title":"0.1.109"},{"location":"changelog/#01108","text":"_ Monday 29 Nov 2021 @ 20:00 CET Enable changed option for boolean and timestamp type. Removed CRM from InfraSonar.","title":"0.1.108"},{"location":"changelog/#01107","text":"_ Saturday 13 Nov 2021 @ 14:00 CET Critical update: aiogcd .","title":"0.1.107"},{"location":"changelog/#01106","text":"_ Friday 12 Nov 2021 @ 20:00 CET Collapsible raster on double mouse click. Added audit logging to re-discover changes on a host. Fixed bug with selecting a time range within a modal. Fixed socket message on re-connect. Added search in my alerts view. Prevent inserting invalid metric info.","title":"0.1.106"},{"location":"changelog/#01105","text":"_ Tuesday 12 Oct 2021 @ 20:00 CET Log tasks using the user who initiated the task. Return the taskId when creating a task using the API. Send an email to the user when a schedules task has failed.","title":"0.1.105"},{"location":"changelog/#01104","text":"_ Monday 13 Sep 2021 @ 20:00 CET Added Id column to environment overview page. Added /api/environments API call. Added support for custom time zone per environment. Fixed bug with assigned alerts for users without key string.","title":"0.1.104"},{"location":"changelog/#01103","text":"_ Tuesday 27 Jul 2021 @ 11:00 CET Loosely name validation for check and type in data query API call.","title":"0.1.103"},{"location":"changelog/#01102","text":"_ Wednesday 21 Jul 2021 @ 22:00 CET Added environment and lastSeen columns to api/hosts API call. Added api/labels API call to query for labels in an environment. Fixed bug in widget editor when no hosts are configured. Fixed minor widget bugs (no panel data, handle escape key correctly).","title":"0.1.102"},{"location":"changelog/#01101","text":"_ Thursday 15 Jul 2021 @ 20:00 CET Added check for valid labels in API call api/host/label/add . Added filter for empty hosts in view. Added filter item option in widgets. Added the option to exclude host with specified labels from a view. Auto convert int to float for the insert API call. Fixed bug in auto refresh on a view. Fixed bug in validate API metric names. Fixed bug when moving a root widget on a host overview page. Fixed minor bug in side menu on probe pages. Required metrics no longer accept a null value.","title":"0.1.101"},{"location":"changelog/#01100","text":"_ Tuesday 22 Jun 2021 @ 20:00 CET Added link to new InfraSonar documentation. Added query data API call and added /api/data to replace api/data/insert . Added support for withLabel and withProbe keys to hosts query API. Replaced accept / reject lists with item (not) in list . Check for int64 when using the API to insert data. Improved error messages when using incorrect API calls. Fixed double boolean naming when choosing a display function.","title":"0.1.100"},{"location":"changelog/#0199","text":"_ Tuesday 18 Apr 2021 @ 9:00 CET Fix alerts overview.","title":"0.1.99"},{"location":"changelog/#0198","text":"_ Monday 17 May 2021 @ 20:00 CET Added tool for generating encryption keys. Fix ConnectWise member API call. Fix My-Alert view (too many alerts). Fix time range selection on aggregation grid. Sort series on environment in time-series chart. Update: ThingsDB client (fix re-connect Emitter bug). Update: Python packages. Update: Npm packages.","title":"0.1.98"},{"location":"changelog/#0197","text":"_ Tuesday 20 Apr 2021 @ 12:00 CET Fix alerts.","title":"0.1.97"},{"location":"changelog/#0196","text":"_ Monday 19 Apr 2021 @ 19:45 CET Fix charts.","title":"0.1.96"},{"location":"changelog/#0195","text":"_ Monday 19 Apr 2021 @ 19:00 CET Improved item-list in expression editor. Fixed number of rows in grid after using a filter (search). Update browser title when opening a view. Fixed CTRL-F when viewing a data-table with search disabled. Added column suppressed label count on conditions page. Fixed bug with auto-refresh. Update: Python packages. Update: Npm packages.","title":"0.1.95"},{"location":"changelog/#0194","text":"_ Wednesday 7 Apr 2021 @ 15:30 CET Fixed ConnectWise manage bug, maximum summary length.","title":"0.1.94"},{"location":"changelog/#0193","text":"_ Tuesday 6 Apr 2021 @ 20:00 CET Added API route for posting InfraSonar (host) data. Added API routes for controlling metadata. Added derived metric option.","title":"0.1.93"},{"location":"changelog/#0192","text":"_ Monday 15 Mar 2021 @ 20:00 CET Fixed check for valid hostUuids in API handler. Select current user as default owner for an alert.","title":"0.1.92"},{"location":"changelog/#0191","text":"_ Wednesday 24 Feb 2021 @ 20:00 CET Allow ticket in CWM without owner. Update API documentation.","title":"0.1.91"},{"location":"changelog/#0190","text":"_ Tuesday 23 Feb 2021 @ 20:00 CET Added ConnectWise Manage support. Added environment widget for installed software on Windows. Added option to select a time range for the aggregation grid widget. Fixed bug in top menu after window resize.","title":"0.1.90"},{"location":"changelog/#0189","text":"_ Thursday 14 Jan 2021 @ 20:00 CET Added channels column on labels overview page. Added item (not) in list expression to replace black/white list. Added option to accept or reject specific conditions for DutyCalls. Added option to show/hide self signed certificates. Added option to sort on environemt in a gid widget. Added search box to certificate widget. Auto-complete default probe address unless changed by the user. Changed export to CSV for time and age values. Prevent saving conditions with empty expressions.","title":"0.1.89"},{"location":"api/authentication/","text":"Authentication The authentication scheme that the InfraSonar API makes use of is \"Bearer authentication\". Bearer Authentication Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name \u201cBearer authentication\u201d can be understood as \u201cgive access to the bearer of this token.\u201d The client must send this token in the Authorization header when making requests to the InfraSonar API: Authorization: Bearer <token> Creating a token Follow the steps below to create and add a token to your account. Open the \"My access\" dialog by clicking on the My access button in the account menu. Navigate to the tokens tab and click on the + button. Enter a useful description and click on the Create button to add the token to your account. Note Tokens are user bound. A token therefore has the same rights as the user for which the token was created.","title":"Authentication"},{"location":"api/authentication/#authentication","text":"The authentication scheme that the InfraSonar API makes use of is \"Bearer authentication\".","title":"Authentication"},{"location":"api/authentication/#bearer-authentication","text":"Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name \u201cBearer authentication\u201d can be understood as \u201cgive access to the bearer of this token.\u201d The client must send this token in the Authorization header when making requests to the InfraSonar API: Authorization: Bearer <token>","title":"Bearer Authentication"},{"location":"api/authentication/#creating-a-token","text":"Follow the steps below to create and add a token to your account. Open the \"My access\" dialog by clicking on the My access button in the account menu. Navigate to the tokens tab and click on the + button. Enter a useful description and click on the Create button to add the token to your account. Note Tokens are user bound. A token therefore has the same rights as the user for which the token was created.","title":"Creating a token"},{"location":"api/keystring/","text":"Keystring Figuring out the label keystring Navigate to the environment you want to retrieve the label-keystring from. Open the labels menu ensure the Key column is shown using the column picker ( ) You can also use our API to retrieve the label keystrings as documented here","title":"Keystrings"},{"location":"api/keystring/#keystring","text":"","title":"Keystring"},{"location":"api/keystring/#figuring-out-the-label-keystring","text":"Navigate to the environment you want to retrieve the label-keystring from. Open the labels menu ensure the Key column is shown using the column picker ( ) You can also use our API to retrieve the label keystrings as documented here","title":"Figuring out the label keystring"},{"location":"api/overview/","text":"Overview The InfraSonar API is used for accessing and manipulating data within InfraSonar by third parties","title":"Overview"},{"location":"api/overview/#overview","text":"The InfraSonar API is used for accessing and manipulating data within InfraSonar by third parties","title":"Overview"},{"location":"api/alert/query/","text":"Query alert GET /alert/<alertKs>?fields=...&actions=... Description Query alert details. This API call will work for both an open and closed alert. Path parameters Param Description alertKs Alert key string (ks) . Query parameters Param Default Description fields all fields Fields to return (see fields below for all available fields) . actions none Action fields. If at least one field is given, the result will include \" actions \" with an array of action objects (see Actions below for all available action fields) . Fields Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner. closedTimestamp integer/null Unix timestamp in seconds when the alert was closed or null if not closed. Actions Action field Return type Description kind string One of: Assign , Comment , IntegrationCall , Close , AutoClose , IndirectClose timestamp integer Unix timestamp in seconds. data object/null Additional data object. Return codes Error code Reason 200 Success. 400 Unknown field or action. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Alert not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/alert/xxx?actions=kind,timestamp,data' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"timestamp\" : 1667511262 , \"lastMessage\" : \"Last message of the alert\" , \"lastSeverity\" : 3 , \"listTimestamp\" : 1667511523 , \"ownerId\" : 123 , \"closedTimestamp\" : null , \"actions\" : [ { \"kind\" : \"Assign\" , \"timestamp\" : 1667511469 , \"data\" : { \"userId\" : 123 , \"ownerId\" : 123 , \"message\" : \"Alert assigned to me!\" } } ] }","title":"Query alert"},{"location":"api/alert/query/#query-alert","text":"GET /alert/<alertKs>?fields=...&actions=...","title":"Query alert"},{"location":"api/alert/query/#description","text":"Query alert details. This API call will work for both an open and closed alert.","title":"Description"},{"location":"api/alert/query/#path-parameters","text":"Param Description alertKs Alert key string (ks) .","title":"Path parameters"},{"location":"api/alert/query/#query-parameters","text":"Param Default Description fields all fields Fields to return (see fields below for all available fields) . actions none Action fields. If at least one field is given, the result will include \" actions \" with an array of action objects (see Actions below for all available action fields) .","title":"Query parameters"},{"location":"api/alert/query/#fields","text":"Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner. closedTimestamp integer/null Unix timestamp in seconds when the alert was closed or null if not closed.","title":"Fields"},{"location":"api/alert/query/#actions","text":"Action field Return type Description kind string One of: Assign , Comment , IntegrationCall , Close , AutoClose , IndirectClose timestamp integer Unix timestamp in seconds. data object/null Additional data object.","title":"Actions"},{"location":"api/alert/query/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field or action. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Alert not found.","title":"Return codes"},{"location":"api/alert/query/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/alert/xxx?actions=kind,timestamp,data' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"timestamp\" : 1667511262 , \"lastMessage\" : \"Last message of the alert\" , \"lastSeverity\" : 3 , \"listTimestamp\" : 1667511523 , \"ownerId\" : 123 , \"closedTimestamp\" : null , \"actions\" : [ { \"kind\" : \"Assign\" , \"timestamp\" : 1667511469 , \"data\" : { \"userId\" : 123 , \"ownerId\" : 123 , \"message\" : \"Alert assigned to me!\" } } ] }","title":"Example"},{"location":"api/asset/add-label/","text":"Add label to asset POST /asset/<assetId>/label/<labelId> Description Add a label to an asset. Success (204) is also returned when the label was already assigned to the asset. Path parameters Param Description assetId Asset Id. labelId Label Id. Query parameters none Body none Return codes Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or label not found. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/asset/123/label/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Add label to asset"},{"location":"api/asset/add-label/#add-label-to-asset","text":"POST /asset/<assetId>/label/<labelId>","title":"Add label to asset"},{"location":"api/asset/add-label/#description","text":"Add a label to an asset. Success (204) is also returned when the label was already assigned to the asset.","title":"Description"},{"location":"api/asset/add-label/#path-parameters","text":"Param Description assetId Asset Id. labelId Label Id.","title":"Path parameters"},{"location":"api/asset/add-label/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/add-label/#body","text":"none","title":"Body"},{"location":"api/asset/add-label/#return-codes","text":"Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or label not found.","title":"Return codes"},{"location":"api/asset/add-label/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/asset/123/label/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Example"},{"location":"api/asset/insert-check-data/","text":"Insert check data POST /asset/<assetId>/collector/<collectorKey>/check/<checkKey> Description Insert check data. Path parameters Param Description assetId Asset Id. collectorKey Collector key. checkKey Check key. Query parameters none Body Param Type Required Description data object Yes Object with check data. version string Yes Version of the collector. runtime float No Time it took for the check to run in seconds. timestamp integer No Unix timestamp in seconds. If omitted, InfraSonar will set the timestamp for the check data. Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + INSERT_CHECK_DATA ) . 404 Asset or collector or check not found. 409 Collector is not assigned to the asset. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/asset/123/collector/docker/check/network' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"data\": { \"networks\": [ { \"name\": \"myNetwork\", \"ipAddress\": \"1.2.3.4\" } ] }, \"version\": \"0.1.0\" }' In this example, \" docker \" is the collector, \" network \" the check, \" networks \" a type, \" name \" is a required metric and \" ipAddress \" is a metric.","title":"Insert check data"},{"location":"api/asset/insert-check-data/#insert-check-data","text":"POST /asset/<assetId>/collector/<collectorKey>/check/<checkKey>","title":"Insert check data"},{"location":"api/asset/insert-check-data/#description","text":"Insert check data.","title":"Description"},{"location":"api/asset/insert-check-data/#path-parameters","text":"Param Description assetId Asset Id. collectorKey Collector key. checkKey Check key.","title":"Path parameters"},{"location":"api/asset/insert-check-data/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/insert-check-data/#body","text":"Param Type Required Description data object Yes Object with check data. version string Yes Version of the collector. runtime float No Time it took for the check to run in seconds. timestamp integer No Unix timestamp in seconds. If omitted, InfraSonar will set the timestamp for the check data.","title":"Body"},{"location":"api/asset/insert-check-data/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + INSERT_CHECK_DATA ) . 404 Asset or collector or check not found. 409 Collector is not assigned to the asset.","title":"Return codes"},{"location":"api/asset/insert-check-data/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/asset/123/collector/docker/check/network' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"data\": { \"networks\": [ { \"name\": \"myNetwork\", \"ipAddress\": \"1.2.3.4\" } ] }, \"version\": \"0.1.0\" }' In this example, \" docker \" is the collector, \" network \" the check, \" networks \" a type, \" name \" is a required metric and \" ipAddress \" is a metric.","title":"Example"},{"location":"api/asset/query-alerts/","text":"Query asset alerts GET /asset/<assetId>/alerts?fields=... Description Query all open alerts for a given asset. With the current API it is not possible to query for closed alerts, except when you have an explicit alert key string. Path parameters Param Description assetId Asset Id. Query parameters Param Default Description fields ks Fields to return (see fields below for all available fields) . Fields Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner. Return codes Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Asset not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/123/alerts?fields=ks,message,severity,ownerId' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"ownerId\" : null } ]","title":"Query asset alerts"},{"location":"api/asset/query-alerts/#query-asset-alerts","text":"GET /asset/<assetId>/alerts?fields=...","title":"Query asset alerts"},{"location":"api/asset/query-alerts/#description","text":"Query all open alerts for a given asset. With the current API it is not possible to query for closed alerts, except when you have an explicit alert key string.","title":"Description"},{"location":"api/asset/query-alerts/#path-parameters","text":"Param Description assetId Asset Id.","title":"Path parameters"},{"location":"api/asset/query-alerts/#query-parameters","text":"Param Default Description fields ks Fields to return (see fields below for all available fields) .","title":"Query parameters"},{"location":"api/asset/query-alerts/#fields","text":"Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner.","title":"Fields"},{"location":"api/asset/query-alerts/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Asset not found.","title":"Return codes"},{"location":"api/asset/query-alerts/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/123/alerts?fields=ks,message,severity,ownerId' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"ownerId\" : null } ]","title":"Example"},{"location":"api/asset/query-id/","text":"Query asset Id GET /asset/<assetName>/id Description Query an asset Id by name. This route only works with a container token. Removed assets (assets in trash) are ignored and will not be found using this API call. Path parameters Param Description assetName Asset name. Query parameters none Return codes Error code Reason 200 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API ) . 404 No asset with the given name is found in the container. 409 Multiple assets with the same name are found within the container. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/my-asset.local/id' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"assetId\" : 123 }","title":"Query asset Id"},{"location":"api/asset/query-id/#query-asset-id","text":"GET /asset/<assetName>/id","title":"Query asset Id"},{"location":"api/asset/query-id/#description","text":"Query an asset Id by name. This route only works with a container token. Removed assets (assets in trash) are ignored and will not be found using this API call.","title":"Description"},{"location":"api/asset/query-id/#path-parameters","text":"Param Description assetName Asset name.","title":"Path parameters"},{"location":"api/asset/query-id/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/query-id/#return-codes","text":"Error code Reason 200 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API ) . 404 No asset with the given name is found in the container. 409 Multiple assets with the same name are found within the container.","title":"Return codes"},{"location":"api/asset/query-id/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/my-asset.local/id' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"assetId\" : 123 }","title":"Example"},{"location":"api/asset/query/","text":"Query asset GET /asset/<assetId>?fields=... Description Query asset details. Path parameters Param Description assetId Asset Id. Query parameters Param Default Description fields all fields Fields to return (see fields below for all available fields) . Fields Field Return type Description id integer Asset Id. name string Asset name. description string Asset description. mode string One of normal , maintenance or disabled . Return codes Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Asset not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"id\" : 123 , \"name\" : \"my-host.local\" , \"description\" : \"My host\" , \"mode\" : \"normal\" }","title":"Query asset"},{"location":"api/asset/query/#query-asset","text":"GET /asset/<assetId>?fields=...","title":"Query asset"},{"location":"api/asset/query/#description","text":"Query asset details.","title":"Description"},{"location":"api/asset/query/#path-parameters","text":"Param Description assetId Asset Id.","title":"Path parameters"},{"location":"api/asset/query/#query-parameters","text":"Param Default Description fields all fields Fields to return (see fields below for all available fields) .","title":"Query parameters"},{"location":"api/asset/query/#fields","text":"Field Return type Description id integer Asset Id. name string Asset name. description string Asset description. mode string One of normal , maintenance or disabled .","title":"Fields"},{"location":"api/asset/query/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Asset not found.","title":"Return codes"},{"location":"api/asset/query/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/asset/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"id\" : 123 , \"name\" : \"my-host.local\" , \"description\" : \"My host\" , \"mode\" : \"normal\" }","title":"Example"},{"location":"api/asset/remove-collector/","text":"Remove collector from asset DELETE /asset/<assetId>/collector/<collectorKey> Description Remove a collector from an asset. Success (204) is also returned when the collector was not attached to the asset. Path parameters Param Description assetId Asset Id. collectorKey Collector key. Query parameters none Body none Return codes Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or collector not found. Example Curl request: curl \\ -X DELETE 'https://api.infrasonar.com/asset/123/collector/docker' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Remove collector from asset"},{"location":"api/asset/remove-collector/#remove-collector-from-asset","text":"DELETE /asset/<assetId>/collector/<collectorKey>","title":"Remove collector from asset"},{"location":"api/asset/remove-collector/#description","text":"Remove a collector from an asset. Success (204) is also returned when the collector was not attached to the asset.","title":"Description"},{"location":"api/asset/remove-collector/#path-parameters","text":"Param Description assetId Asset Id. collectorKey Collector key.","title":"Path parameters"},{"location":"api/asset/remove-collector/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/remove-collector/#body","text":"none","title":"Body"},{"location":"api/asset/remove-collector/#return-codes","text":"Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or collector not found.","title":"Return codes"},{"location":"api/asset/remove-collector/#example","text":"Curl request: curl \\ -X DELETE 'https://api.infrasonar.com/asset/123/collector/docker' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Example"},{"location":"api/asset/remove-label/","text":"Remove label from asset DELETE /asset/<assetId>/label/<labelId> Description Remove a label from an asset. Success (204) is also returned when the label was not assigned to the asset. Path parameters Param Description assetId Asset Id. labelId Label Id. Query parameters none Body none Return codes Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or label not found. Example Curl request: curl \\ -X DELETE 'https://api.infrasonar.com/asset/123/label/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Remove label from asset"},{"location":"api/asset/remove-label/#remove-label-from-asset","text":"DELETE /asset/<assetId>/label/<labelId>","title":"Remove label from asset"},{"location":"api/asset/remove-label/#description","text":"Remove a label from an asset. Success (204) is also returned when the label was not assigned to the asset.","title":"Description"},{"location":"api/asset/remove-label/#path-parameters","text":"Param Description assetId Asset Id. labelId Label Id.","title":"Path parameters"},{"location":"api/asset/remove-label/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/remove-label/#body","text":"none","title":"Body"},{"location":"api/asset/remove-label/#return-codes","text":"Error code Reason 204 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or label not found.","title":"Return codes"},{"location":"api/asset/remove-label/#example","text":"Curl request: curl \\ -X DELETE 'https://api.infrasonar.com/asset/123/label/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Example"},{"location":"api/asset/set-kind/","text":"Set asset kind PATCH /asset/<assetId>/kind Description Set the asset kind. Success (204) is also returned when the asset kind remains unchanged. Path parameters Param Description assetId Asset Id. Query parameters none Body Param Type Required Description kind string Yes Asset kind. See table below for all available kinds. Kind Logo Name Asset (default) APC Apple Azure Citrix Dell DNS Docker Eaton Firewall FreeBSD HP Linux NetApp PaloAlto PureStorage Supermicro Switch Synology VMware Website Windows Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset not found. Example Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/asset/123/kind' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"kind\": \"Linux\" }'","title":"Set asset kind"},{"location":"api/asset/set-kind/#set-asset-kind","text":"PATCH /asset/<assetId>/kind","title":"Set asset kind"},{"location":"api/asset/set-kind/#description","text":"Set the asset kind. Success (204) is also returned when the asset kind remains unchanged.","title":"Description"},{"location":"api/asset/set-kind/#path-parameters","text":"Param Description assetId Asset Id.","title":"Path parameters"},{"location":"api/asset/set-kind/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/set-kind/#body","text":"Param Type Required Description kind string Yes Asset kind. See table below for all available kinds.","title":"Body"},{"location":"api/asset/set-kind/#kind","text":"Logo Name Asset (default) APC Apple Azure Citrix Dell DNS Docker Eaton Firewall FreeBSD HP Linux NetApp PaloAlto PureStorage Supermicro Switch Synology VMware Website Windows","title":"Kind"},{"location":"api/asset/set-kind/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset not found.","title":"Return codes"},{"location":"api/asset/set-kind/#example","text":"Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/asset/123/kind' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"kind\": \"Linux\" }'","title":"Example"},{"location":"api/asset/set-mode/","text":"Set asset mode PATCH /asset/<assetId>/mode Description Set the asset mode. Success (204) is also returned when the asset was already in the desired mode. Path parameters Param Description assetId Asset Id. Query parameters none Body Param Type Required Description mode string Yes One of normal , maintenance or disabled . Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset not found. Example Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/asset/123/mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"mode\": \"maintenance\" }'","title":"Set asset mode"},{"location":"api/asset/set-mode/#set-asset-mode","text":"PATCH /asset/<assetId>/mode","title":"Set asset mode"},{"location":"api/asset/set-mode/#description","text":"Set the asset mode. Success (204) is also returned when the asset was already in the desired mode.","title":"Description"},{"location":"api/asset/set-mode/#path-parameters","text":"Param Description assetId Asset Id.","title":"Path parameters"},{"location":"api/asset/set-mode/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/set-mode/#body","text":"Param Type Required Description mode string Yes One of normal , maintenance or disabled .","title":"Body"},{"location":"api/asset/set-mode/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset not found.","title":"Return codes"},{"location":"api/asset/set-mode/#example","text":"Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/asset/123/mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"mode\": \"maintenance\" }'","title":"Example"},{"location":"api/asset/upsert-collector/","text":"Upsert collector to asset POST /asset/<assetId>/collector/<collectorKey> Description Add or configure a collector on an asset. If the collector is already attached to the asset, the configuration will be updated unless no configuration is provided in the body. Path parameters Param Description assetId Asset Id. collectorKey Collector key. Query parameters none Body Param Type Required Description config Object Depends Configuration of the collector. A body might be required for some collectors. For most collectors the config field is optional. Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or collector not found. Example Curl request: (no config required for docker agent) curl \\ -X POST 'https://api.infrasonar.com/asset/123/collector/docker' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Upsert collector to asset"},{"location":"api/asset/upsert-collector/#upsert-collector-to-asset","text":"POST /asset/<assetId>/collector/<collectorKey>","title":"Upsert collector to asset"},{"location":"api/asset/upsert-collector/#description","text":"Add or configure a collector on an asset. If the collector is already attached to the asset, the configuration will be updated unless no configuration is provided in the body.","title":"Description"},{"location":"api/asset/upsert-collector/#path-parameters","text":"Param Description assetId Asset Id. collectorKey Collector key.","title":"Path parameters"},{"location":"api/asset/upsert-collector/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/asset/upsert-collector/#body","text":"Param Type Required Description config Object Depends Configuration of the collector. A body might be required for some collectors. For most collectors the config field is optional.","title":"Body"},{"location":"api/asset/upsert-collector/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Asset or collector not found.","title":"Return codes"},{"location":"api/asset/upsert-collector/#example","text":"Curl request: (no config required for docker agent) curl \\ -X POST 'https://api.infrasonar.com/asset/123/collector/docker' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'","title":"Example"},{"location":"api/container/create-asset/","text":"Create asset POST /container/<containerId>/asset Description Create a new asset. Duplicated asset names are allowed although not recommended. Path parameters Param Description containerId Container Id. Query parameters none Body Param Type Required Description name string Yes Name of the asset. Return codes Error code Reason 201 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Container not found. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/asset' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"name\": \"my-host.local\" }' Response: { \"assetId\" : 123 }","title":"Create asset"},{"location":"api/container/create-asset/#create-asset","text":"POST /container/<containerId>/asset","title":"Create asset"},{"location":"api/container/create-asset/#description","text":"Create a new asset. Duplicated asset names are allowed although not recommended.","title":"Description"},{"location":"api/container/create-asset/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/create-asset/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/container/create-asset/#body","text":"Param Type Required Description name string Yes Name of the asset.","title":"Body"},{"location":"api/container/create-asset/#return-codes","text":"Error code Reason 201 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/create-asset/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/asset' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"name\": \"my-host.local\" }' Response: { \"assetId\" : 123 }","title":"Example"},{"location":"api/container/purge-notifications/","text":"Purge notifications POST /container/<containerId>/purge-notifications Description Purge notifications by notification kind. Path parameters Param Description containerId Container Id. Query parameters none Body Param Type Required Description kind string Yes One of ConnectionStatus , ConnectionTimeDelta , ProbeVersion , CheckMissing , CheckError , CheckAged , CheckInvalidResult , CheckInvalidTimestamp , CheckInvalidData or ConditionError . Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + CONTAINER_MANAGEMENT ) . 404 Container not found. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/purge-notifications' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"kind\": \"ConnectionStatus\" }'","title":"Purge notifications"},{"location":"api/container/purge-notifications/#purge-notifications","text":"POST /container/<containerId>/purge-notifications","title":"Purge notifications"},{"location":"api/container/purge-notifications/#description","text":"Purge notifications by notification kind.","title":"Description"},{"location":"api/container/purge-notifications/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/purge-notifications/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/container/purge-notifications/#body","text":"Param Type Required Description kind string Yes One of ConnectionStatus , ConnectionTimeDelta , ProbeVersion , CheckMissing , CheckError , CheckAged , CheckInvalidResult , CheckInvalidTimestamp , CheckInvalidData or ConditionError .","title":"Body"},{"location":"api/container/purge-notifications/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + CONTAINER_MANAGEMENT ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/purge-notifications/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/purge-notifications' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"kind\": \"ConnectionStatus\" }'","title":"Example"},{"location":"api/container/purge-time-series/","text":"Purge time-series POST /container/<containerId>/purge-time-series Description Purge dead time-series. Time series are considered dead if they didn't got any new data for a period of time. This period must be given in weeks. Path parameters Param Description containerId Container Id. Query parameters none Body Param Type Required Description weeks integer Yes Integer value between 1 and 999 ( recommended: 5 weeks or more) . Return codes Error code Reason 200 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + PURGE_TIME_SERIES ) . 404 Container not found. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/purge-time-series' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"weeks\": 5 }' Response: { \"purgedTimeSeries\" : 12345 }","title":"Purge time-series"},{"location":"api/container/purge-time-series/#purge-time-series","text":"POST /container/<containerId>/purge-time-series","title":"Purge time-series"},{"location":"api/container/purge-time-series/#description","text":"Purge dead time-series. Time series are considered dead if they didn't got any new data for a period of time. This period must be given in weeks.","title":"Description"},{"location":"api/container/purge-time-series/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/purge-time-series/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/container/purge-time-series/#body","text":"Param Type Required Description weeks integer Yes Integer value between 1 and 999 ( recommended: 5 weeks or more) .","title":"Body"},{"location":"api/container/purge-time-series/#return-codes","text":"Error code Reason 200 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + PURGE_TIME_SERIES ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/purge-time-series/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/purge-time-series' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"weeks\": 5 }' Response: { \"purgedTimeSeries\" : 12345 }","title":"Example"},{"location":"api/container/query-alerts/","text":"Query container alerts GET /container/<containerId>/alerts?fields=... Description Query all open alerts for a given container. With the current API it is not possible to query for closed alerts, except when you have an explicit alert key string. Path parameters Param Description containerId Container Id. Query parameters Param Default Description fields ks Fields to return (see fields below for all available fields) . Fields Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner. Return codes Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123/alerts?fields=ks,message,severity,ownerId' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"ownerId\" : null } ]","title":"Query container alerts"},{"location":"api/container/query-alerts/#query-container-alerts","text":"GET /container/<containerId>/alerts?fields=...","title":"Query container alerts"},{"location":"api/container/query-alerts/#description","text":"Query all open alerts for a given container. With the current API it is not possible to query for closed alerts, except when you have an explicit alert key string.","title":"Description"},{"location":"api/container/query-alerts/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/query-alerts/#query-parameters","text":"Param Default Description fields ks Fields to return (see fields below for all available fields) .","title":"Query parameters"},{"location":"api/container/query-alerts/#fields","text":"Field Return type Description ks string Key string of the alert. message string Initial message when the alert was opened. severity integer Initial severity when the alert was opened (value between 0=highest and 7=lowest severity) . timestamp integer Unix timestamp in seconds when the alert was opened. lastMessage string Message of the last hit (equal to \"message\" with only a single hit) . lastSeverity integer Severity of the last hit (equal to \"severity\" with only a single hit) . lastTimestamp integer Unix timestamp in seconds of the last hit (equal to \"timestamp\" with only a single hit) . ownerId integer/null User Id of the owner or null when the alert is not assigned to an owner.","title":"Fields"},{"location":"api/container/query-alerts/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/query-alerts/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123/alerts?fields=ks,message,severity,ownerId' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"ks\" : \"<a-unique-key-string>\" , \"message\" : \"Initial message of the alert\" , \"severity\" : 3 , \"ownerId\" : null } ]","title":"Example"},{"location":"api/container/query-assets/","text":"Query container assets GET /container/<containerId>/assets?fields=... Description Query all assets for a given container. (removed assets are not included) . Path parameters Param Description containerId Container Id. Query parameters Param Default Description fields id Fields to return (see fields below for all available fields) . Fields Field Return type Description id integer Asset Id. name string Asset name. description string Asset description. mode string One of normal , maintenance or disabled . Return codes Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123/assets?fields=id,name,mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"id\" : 123 , \"name\" : \"my-host.local\" , \"mode\" : \"normal\" } ]","title":"Query container assets"},{"location":"api/container/query-assets/#query-container-assets","text":"GET /container/<containerId>/assets?fields=...","title":"Query container assets"},{"location":"api/container/query-assets/#description","text":"Query all assets for a given container. (removed assets are not included) .","title":"Description"},{"location":"api/container/query-assets/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/query-assets/#query-parameters","text":"Param Default Description fields id Fields to return (see fields below for all available fields) .","title":"Query parameters"},{"location":"api/container/query-assets/#fields","text":"Field Return type Description id integer Asset Id. name string Asset name. description string Asset description. mode string One of normal , maintenance or disabled .","title":"Fields"},{"location":"api/container/query-assets/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/query-assets/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123/assets?fields=id,name,mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: [ { \"id\" : 123 , \"name\" : \"my-host.local\" , \"mode\" : \"normal\" } ]","title":"Example"},{"location":"api/container/query-id/","text":"Query container Id GET /container/id Description Query a container Id by token. This route only works with a container token. Path parameters none Query parameters none Return codes Error code Reason 200 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API ) . Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/id' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"containerId\" : 123 }","title":"Query container Id"},{"location":"api/container/query-id/#query-container-id","text":"GET /container/id","title":"Query container Id"},{"location":"api/container/query-id/#description","text":"Query a container Id by token. This route only works with a container token.","title":"Description"},{"location":"api/container/query-id/#path-parameters","text":"none","title":"Path parameters"},{"location":"api/container/query-id/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/container/query-id/#return-codes","text":"Error code Reason 200 Success. 401 Invalid or missing token. 403 Insufficient permissions (required: API ) .","title":"Return codes"},{"location":"api/container/query-id/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/id' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"containerId\" : 123 }","title":"Example"},{"location":"api/container/query/","text":"Query container GET /container/<containerId>?fields=... Description Query container details. Path parameters Param Description containerId Container Id. Query parameters Param Default Description fields all fields Fields to return (see fields below for all available fields) . Fields Field Return type Description id integer Container Id. name string Container name. timezone string Container time-zone. mode string One of normal , maintenance or disabled . Return codes Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found. Example Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"id\" : 123 , \"mode\" : \"normal\" , \"name\" : \"My Container\" , \"timezone\" : \"Europe/Amsterdam\" }","title":"Query container"},{"location":"api/container/query/#query-container","text":"GET /container/<containerId>?fields=...","title":"Query container"},{"location":"api/container/query/#description","text":"Query container details.","title":"Description"},{"location":"api/container/query/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/query/#query-parameters","text":"Param Default Description fields all fields Fields to return (see fields below for all available fields) .","title":"Query parameters"},{"location":"api/container/query/#fields","text":"Field Return type Description id integer Container Id. name string Container name. timezone string Container time-zone. mode string One of normal , maintenance or disabled .","title":"Fields"},{"location":"api/container/query/#return-codes","text":"Error code Reason 200 Success. 400 Unknown field. 401 Invalid or missing token. 403 Insufficient permissions (required: API + READ ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/query/#example","text":"Curl request: curl \\ -X GET 'https://api.infrasonar.com/container/123' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' Response: { \"id\" : 123 , \"mode\" : \"normal\" , \"name\" : \"My Container\" , \"timezone\" : \"Europe/Amsterdam\" }","title":"Example"},{"location":"api/container/set-mode/","text":"Set container mode PATCH /container/<containerId>/mode Description Set the container mode. Success (204) is also returned when the container was already in the desired mode. Path parameters Param Description containerId Container Id. Query parameters none Body Param Type Required Description mode string Yes One of normal , maintenance or disabled . Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Container not found. Example Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/container/123/mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"mode\": \"maintenance\" }'","title":"Set container mode"},{"location":"api/container/set-mode/#set-container-mode","text":"PATCH /container/<containerId>/mode","title":"Set container mode"},{"location":"api/container/set-mode/#description","text":"Set the container mode. Success (204) is also returned when the container was already in the desired mode.","title":"Description"},{"location":"api/container/set-mode/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/container/set-mode/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/container/set-mode/#body","text":"Param Type Required Description mode string Yes One of normal , maintenance or disabled .","title":"Body"},{"location":"api/container/set-mode/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + ASSET_MANAGEMENT ) . 404 Container not found.","title":"Return codes"},{"location":"api/container/set-mode/#example","text":"Curl request: curl \\ -X PATCH 'https://api.infrasonar.com/container/123/mode' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"mode\": \"maintenance\" }'","title":"Example"},{"location":"api/cwm/set-cwm/","text":"Set ConnectWise Manage POST /container/<containerId>/set-cwm Description This API call can be used to create a mapping between a ConnectWise Manage company Id and an InfraSonar container. The ConnectWise Manage add-on is required, contact InfraSonar for more information. Path parameters Param Description containerId Container Id. Query parameters none Body Param Type Required Description companyId integer/null Yes Company Id used by ConnectWise Manage to link to the container. If null , CWM will be disabled for the container. Return codes Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + CONTAINER_MANAGEMENT ) . 404 Container not found. 409 ConnectWise Manage add-on is not available for the container. Example Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/set-cwm-company' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"companyId\": 123 }'","title":"Set CWM"},{"location":"api/cwm/set-cwm/#set-connectwise-manage","text":"POST /container/<containerId>/set-cwm","title":"Set ConnectWise Manage"},{"location":"api/cwm/set-cwm/#description","text":"This API call can be used to create a mapping between a ConnectWise Manage company Id and an InfraSonar container. The ConnectWise Manage add-on is required, contact InfraSonar for more information.","title":"Description"},{"location":"api/cwm/set-cwm/#path-parameters","text":"Param Description containerId Container Id.","title":"Path parameters"},{"location":"api/cwm/set-cwm/#query-parameters","text":"none","title":"Query parameters"},{"location":"api/cwm/set-cwm/#body","text":"Param Type Required Description companyId integer/null Yes Company Id used by ConnectWise Manage to link to the container. If null , CWM will be disabled for the container.","title":"Body"},{"location":"api/cwm/set-cwm/#return-codes","text":"Error code Reason 204 Success. 400 Invalid body. 401 Invalid or missing token. 403 Insufficient permissions (required: API + CONTAINER_MANAGEMENT ) . 404 Container not found. 409 ConnectWise Manage add-on is not available for the container.","title":"Return codes"},{"location":"api/cwm/set-cwm/#example","text":"Curl request: curl \\ -X POST 'https://api.infrasonar.com/container/123/set-cwm-company' \\ -H 'Authorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' \\ -H 'Content-Type: application/json' \\ --data-raw '{ \"companyId\": 123 }'","title":"Example"},{"location":"api/examples/powershell/","text":"Powershell This chapter contains example Powershell scripts. Variable variable explanation $token Token used for authentication . $environmentUuid Environment UUID used to select the environment. $duration Host UUID used to select the host. Set maintenance label The script below can be used to set the maintenance label for a host and remove it after a period of time ( duration ), in the example we opt a duration of 300 seconds. See the authentication section on how to obtain a token and the UUID section on how to obtain the correct UUID's # Global parameters $token = \"<infrasonar-token>\" $environmentUuid = \"<infrasonar-environment-uuid>\" $hostUuid = \"<infrasonar-host-uuid>\" $duration = 300 # Durtation in seconds for the label to stay on the host $label = \"ahtzfmRldGVjdC1hbmFseXplLW5vdGlmeS0wMWFyJAsSCEN1c3RvbWVyIghzeXNhZG1pbgwLEgVMYWJlbBihlMsEDA\" # This is the keystring for our maintenance label function Set-Host -In-Maintenance { $reason = \"Adding maintenance label for planned reboot\" $body = \"{ `\" environmentUuid `\" : `\" $environmentUuid `\" , `\" hostUuid `\" : `\" $hostUuid `\" , `\" label `\" : `\" $label `\" , `\" reason `\" : `\" $reason `\" }\" $response = Invoke-RestMethod 'https://api.infrasonar.com/host/label/add' -Method 'POST' -Headers $headers -Body $body } function Plan-Label-Removal { $reason = \"Removing maintenance label after planned reboot\" $when = [System.Math] :: Truncate (( Get-Date -Date ( Get-Date ). ToUniversalTime () -UFormat % s )) + 300 # We add 300 seconds as we expect the host to be back in 5 minutes $body = \"{ `\" environmentUuid `\" : `\" $environmentUuid `\" , `\" hostUuid `\" : `\" $hostUuid `\" , `\" label `\" : `\" $label `\" , `\" reason `\" : `\" $reason `\" , `\" timestamp `\" : $when }\" $response = Invoke-RestMethod 'https://api.infrasonar.com/task/host-label-add' -Method 'POST' -Headers $headers -Body $body } ### ___MAIN # Constuct Headers $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"application/json\" ) $headers . Add ( \"Authorization\" , \"Bearer $token\" ) # Setting the host in mainteance by adding the maintenance label Set-Host -In-Maintenance # Scheduling the removal of the maintancen label Plan-Label-Removal","title":"Powershell"},{"location":"api/examples/powershell/#powershell","text":"This chapter contains example Powershell scripts. Variable variable explanation $token Token used for authentication . $environmentUuid Environment UUID used to select the environment. $duration Host UUID used to select the host.","title":"Powershell"},{"location":"api/examples/powershell/#set-maintenance-label","text":"The script below can be used to set the maintenance label for a host and remove it after a period of time ( duration ), in the example we opt a duration of 300 seconds. See the authentication section on how to obtain a token and the UUID section on how to obtain the correct UUID's # Global parameters $token = \"<infrasonar-token>\" $environmentUuid = \"<infrasonar-environment-uuid>\" $hostUuid = \"<infrasonar-host-uuid>\" $duration = 300 # Durtation in seconds for the label to stay on the host $label = \"ahtzfmRldGVjdC1hbmFseXplLW5vdGlmeS0wMWFyJAsSCEN1c3RvbWVyIghzeXNhZG1pbgwLEgVMYWJlbBihlMsEDA\" # This is the keystring for our maintenance label function Set-Host -In-Maintenance { $reason = \"Adding maintenance label for planned reboot\" $body = \"{ `\" environmentUuid `\" : `\" $environmentUuid `\" , `\" hostUuid `\" : `\" $hostUuid `\" , `\" label `\" : `\" $label `\" , `\" reason `\" : `\" $reason `\" }\" $response = Invoke-RestMethod 'https://api.infrasonar.com/host/label/add' -Method 'POST' -Headers $headers -Body $body } function Plan-Label-Removal { $reason = \"Removing maintenance label after planned reboot\" $when = [System.Math] :: Truncate (( Get-Date -Date ( Get-Date ). ToUniversalTime () -UFormat % s )) + 300 # We add 300 seconds as we expect the host to be back in 5 minutes $body = \"{ `\" environmentUuid `\" : `\" $environmentUuid `\" , `\" hostUuid `\" : `\" $hostUuid `\" , `\" label `\" : `\" $label `\" , `\" reason `\" : `\" $reason `\" , `\" timestamp `\" : $when }\" $response = Invoke-RestMethod 'https://api.infrasonar.com/task/host-label-add' -Method 'POST' -Headers $headers -Body $body } ### ___MAIN # Constuct Headers $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"application/json\" ) $headers . Add ( \"Authorization\" , \"Bearer $token\" ) # Setting the host in mainteance by adding the maintenance label Set-Host -In-Maintenance # Scheduling the removal of the maintancen label Plan-Label-Removal","title":"Set maintenance label"},{"location":"documentation/application/","text":"InfraSonar web application The InfraSonar front end is accessed using any modern browser. Dashboard Environments Home Conditions Labels group-work Accounts : Tasks","title":"InfraSonar web application"},{"location":"documentation/application/#infrasonar-web-application","text":"The InfraSonar front end is accessed using any modern browser. Dashboard Environments Home Conditions Labels group-work Accounts : Tasks","title":"InfraSonar web application"},{"location":"documentation/application/alerts/","text":"Alerts When a condition is hit an alert can be send using the condition return statement. When an alert is raised it is visible in various locations within the InfraSonar application. Using rules it is possible to route the alert to email or DutyCalls . Viewing alerts When you are in a container view (1) you can view the alerts and notifications in the Alerts & Notificatins page (2) This view shows: Open alerts The open alerts (3) pane shows a list (6) of all open alerts and its status. When you click the show details button the details pane opens. Add message Allows you to add a message to the alert, this might be usefully to inform coworkers. Assign alert Allows you to assign the alert to yourself or another member on this container. Close alert Closes the alert, when the issue is not resolved the issue is reopened and automatically assigned to the user who closed the alert. Refresh Refreshes the alert pane. Closed alerts The closed alerts pane (4) shows a list of closed alerts. Notifications The closed alerts pane (5) shows a list of all open notifications (6), see the notification section for more information.","title":"Alerts"},{"location":"documentation/application/alerts/#alerts","text":"When a condition is hit an alert can be send using the condition return statement. When an alert is raised it is visible in various locations within the InfraSonar application. Using rules it is possible to route the alert to email or DutyCalls .","title":"Alerts"},{"location":"documentation/application/alerts/#viewing-alerts","text":"When you are in a container view (1) you can view the alerts and notifications in the Alerts & Notificatins page (2) This view shows:","title":"Viewing alerts"},{"location":"documentation/application/alerts/#open-alerts","text":"The open alerts (3) pane shows a list (6) of all open alerts and its status. When you click the show details button the details pane opens. Add message Allows you to add a message to the alert, this might be usefully to inform coworkers. Assign alert Allows you to assign the alert to yourself or another member on this container. Close alert Closes the alert, when the issue is not resolved the issue is reopened and automatically assigned to the user who closed the alert. Refresh Refreshes the alert pane.","title":"Open alerts"},{"location":"documentation/application/alerts/#closed-alerts","text":"The closed alerts pane (4) shows a list of closed alerts.","title":"Closed alerts"},{"location":"documentation/application/alerts/#notifications","text":"The closed alerts pane (5) shows a list of all open notifications (6), see the notification section for more information.","title":"Notifications"},{"location":"documentation/application/assets/","text":"Assets Add asset When you are in the assets view you can add a new asset using the Add asset button. InfraSonar add host Basic asset configuration InfraSonar add asset details Configuring an asset involves the following steps: Enter an asset name. We strongly suggest entering the correct hostname here, but do not enforce this. Enter an optional description. Select the mode. This is usually normal. Select the zone. Select the collectors you want to use. Enter the correct labels for this asset. Advanced asset configuration mode We identify the following modes for an asset or a container: mode description normal normal operations, all conditions are evaluated. maintenance (no alerts) All asset notifications and alert messages suppressed disabled (no checks) All data send by an agent for this asset is ignored. Any probes / checks configured for this asset are stopped. These modes can be set on a container using the container model. zone When one or more agentcores are configured in the specified zone the host is bound to an agentcore in this zone. If no agentcores are configured in the specified zone we fall back to any other agent core. This feature can be useful for assets in a dmz or remote networks as it allows to direct probes to a specific zone. For agents the zone is only cosmetic. In the future we might add a link between zones and locations. Collectors Here you can add or remove a collector on an asset. When a collector is added additional tabs are added to the asset editor allowing you to configure the collector. See the collectors section in our documentation for additional information. When you remove an agent based collector here the agent can no longer send data to this asset and will receive a 409 error from our api. Labels Here you can add or remove labels on an asset. See the labels section in our documentation for additional information. Adding multiple assets When there is a need to add multiple assets at once we suggest using our api .","title":"Assets"},{"location":"documentation/application/assets/#assets","text":"","title":"Assets"},{"location":"documentation/application/assets/#add-asset","text":"When you are in the assets view you can add a new asset using the Add asset button. InfraSonar add host","title":"Add asset"},{"location":"documentation/application/assets/#basic-asset-configuration","text":"InfraSonar add asset details Configuring an asset involves the following steps: Enter an asset name. We strongly suggest entering the correct hostname here, but do not enforce this. Enter an optional description. Select the mode. This is usually normal. Select the zone. Select the collectors you want to use. Enter the correct labels for this asset.","title":"Basic asset configuration"},{"location":"documentation/application/assets/#advanced-asset-configuration","text":"","title":"Advanced asset configuration"},{"location":"documentation/application/assets/#mode","text":"We identify the following modes for an asset or a container: mode description normal normal operations, all conditions are evaluated. maintenance (no alerts) All asset notifications and alert messages suppressed disabled (no checks) All data send by an agent for this asset is ignored. Any probes / checks configured for this asset are stopped. These modes can be set on a container using the container model.","title":"mode"},{"location":"documentation/application/assets/#zone","text":"When one or more agentcores are configured in the specified zone the host is bound to an agentcore in this zone. If no agentcores are configured in the specified zone we fall back to any other agent core. This feature can be useful for assets in a dmz or remote networks as it allows to direct probes to a specific zone. For agents the zone is only cosmetic. In the future we might add a link between zones and locations.","title":"zone"},{"location":"documentation/application/assets/#collectors","text":"Here you can add or remove a collector on an asset. When a collector is added additional tabs are added to the asset editor allowing you to configure the collector. See the collectors section in our documentation for additional information. When you remove an agent based collector here the agent can no longer send data to this asset and will receive a 409 error from our api.","title":"Collectors"},{"location":"documentation/application/assets/#labels","text":"Here you can add or remove labels on an asset. See the labels section in our documentation for additional information.","title":"Labels"},{"location":"documentation/application/assets/#adding-multiple-assets","text":"When there is a need to add multiple assets at once we suggest using our api .","title":"Adding multiple assets"},{"location":"documentation/application/condition_wmi_services_autostart/","text":"Microsoft Windows Under construction Microsoft Windows services This section describes an unusual condition. We check if Microsoft Windows services which are set to autostart are actually running . While this seems a logical approach the truth is there are services that are set to autostart that stop soon after starting. The list below outlines these exceptions: Service Name description Adobe Acrobat Update Service AdobeARMservice AMF Scan en Herken Service AMFScanHerkenService Background Intelligent Transfer Service BITS Benutzerdienst f\u00fcr die Plattform f\u00fcr verbundene Ger\u00e4te_* CDPUserSvc_* This service uses an ID, we suppress them all. Citrix vDisk Update Service Citrix.Xip.ClientService Connected Devices Platform Service CDPSvc Cortex XDR Health Helper xdrhealth Downloaded Maps Manager MapsBroker Edge update service edgeupdate Google update service gupdate Group Policy Client gpsvc Intel(R) TPM Provisioning Service Intel(R) TPM Provisioning Service M-Files de-installatie-assistent MFUninst* We suppress all versions Microsoft .NET Framework... clr_optimization_... We suppress all versions Microsoft Exchange Compliance Audit MSComplianceAudit Microsoft Exchange DAG Management MSExchangeDagMgmt Microsoft Exchange Notifications Broker MSExchangeNotificationsBroker Mouse without Borders Service MouseWithoutBordersSvc Multimedia Class Scheduler MMCSS Performance Logs and Alerts SysmonLog Remote Registry RemoteRegistry Virtual Disk vds Windows Audio AudioSrv Windows Biometric Service WbioSrvc Windows Image Acquisition (WIA) stisvc Windows Modules Installer TrustedInstaller Windows Update wuauserv ScanMail EUQ Monitor EUQ_Monitor Service Fabric Installer Service FabricInstallerSvc Shell Hardware Detection ShellHWDetection Smart Card SCardSvr Software Protection sppsvc Sophos Clean Sophos Clean Service Sophos Patch Endpoint Communicator SophosPatchEndpointCommunicator Sophos Patch Endpoint Orchestrator SophosPatchOrchestratorService Sophos Patch Server Communicator SophosPatchServerCommunicator Sophos Safestore Sophos Safestore Service source Sophos update service swi_update Sophos update service swi_update_64 Symantec Endpoint Protection Hardening CAF Service heCAF Sync Host_* OneSyncSvc_* Sync Host has a unique ID as part of the service name * Tile Data model server tiledatamodelsvc TPM Base Services TBS Traps Watchdog panwd Traps Watchdog Service twdservice","title":"Microsoft Windows"},{"location":"documentation/application/condition_wmi_services_autostart/#microsoft-windows","text":"Under construction","title":"Microsoft Windows"},{"location":"documentation/application/condition_wmi_services_autostart/#microsoft-windows-services","text":"This section describes an unusual condition. We check if Microsoft Windows services which are set to autostart are actually running . While this seems a logical approach the truth is there are services that are set to autostart that stop soon after starting. The list below outlines these exceptions: Service Name description Adobe Acrobat Update Service AdobeARMservice AMF Scan en Herken Service AMFScanHerkenService Background Intelligent Transfer Service BITS Benutzerdienst f\u00fcr die Plattform f\u00fcr verbundene Ger\u00e4te_* CDPUserSvc_* This service uses an ID, we suppress them all. Citrix vDisk Update Service Citrix.Xip.ClientService Connected Devices Platform Service CDPSvc Cortex XDR Health Helper xdrhealth Downloaded Maps Manager MapsBroker Edge update service edgeupdate Google update service gupdate Group Policy Client gpsvc Intel(R) TPM Provisioning Service Intel(R) TPM Provisioning Service M-Files de-installatie-assistent MFUninst* We suppress all versions Microsoft .NET Framework... clr_optimization_... We suppress all versions Microsoft Exchange Compliance Audit MSComplianceAudit Microsoft Exchange DAG Management MSExchangeDagMgmt Microsoft Exchange Notifications Broker MSExchangeNotificationsBroker Mouse without Borders Service MouseWithoutBordersSvc Multimedia Class Scheduler MMCSS Performance Logs and Alerts SysmonLog Remote Registry RemoteRegistry Virtual Disk vds Windows Audio AudioSrv Windows Biometric Service WbioSrvc Windows Image Acquisition (WIA) stisvc Windows Modules Installer TrustedInstaller Windows Update wuauserv ScanMail EUQ Monitor EUQ_Monitor Service Fabric Installer Service FabricInstallerSvc Shell Hardware Detection ShellHWDetection Smart Card SCardSvr Software Protection sppsvc Sophos Clean Sophos Clean Service Sophos Patch Endpoint Communicator SophosPatchEndpointCommunicator Sophos Patch Endpoint Orchestrator SophosPatchOrchestratorService Sophos Patch Server Communicator SophosPatchServerCommunicator Sophos Safestore Sophos Safestore Service source Sophos update service swi_update Sophos update service swi_update_64 Symantec Endpoint Protection Hardening CAF Service heCAF Sync Host_* OneSyncSvc_* Sync Host has a unique ID as part of the service name * Tile Data model server tiledatamodelsvc TPM Base Services TBS Traps Watchdog panwd Traps Watchdog Service twdservice","title":"Microsoft Windows services"},{"location":"documentation/application/conditions/","text":"Conditions Under construction Check results sent to the InfraSonar cloud platform are immediately evaluated using the conditions configured for the specific asset. InfraSonar comes with many predefined conditions based on years of experience and best practices. In order to manage conditions you need to have the ContainerAdmin role on the container you want to manage conditions for. Managing condtions While our condition editor might feel intimidating at first glance, it is potent. We urge you to look at our predefined conditions for inspiration and a deeper understanding. General tab Name The name you want to use for your condition, we suggest a shot descriptive name. Description use the description to provide a short description of the purpose and usage of the condition. Collector Select the path to the data you want this condition. For probes this is: Collector , Check , Type Condition kind We identify three kind of Conditions: Kind Description EXPRESSION Detailed expression used to evaluate the check result. ITEMS MUST EXIST Used to detect items which must exist. ITEMS_MISSING Used to detect items missing compared to the previous check result. Ticks The number of times this condition must be hit in a row before an actual alert will be raised. Note Ticks can not be set for the condition kind ITEMS_MISSING as this compares with a previous check result. Single alert Gathers up all alerts into a single alert per asset. When disabled, each item will be tested and may raise an alert. Labels tab In this tab you configure for which labels the condition is active. Items tab This tab allows you to set the severity and specify for which items this conditions is a active in case of ITEMS MUST EXIST or which items this condition should exclude in the case of ITEMS_MISSING Items must exist All items will be checked for existence by the given list or regular expression. Condition will be executed when added to an asset or when the condition has been changed. Auto-close is always enabled. The item list or regular expression work as \" include \" by the item.name property. When a list is used, all items in the list must exist otherwise the condition is hit. When a regular expression is used, at least one item must match with the given regular expression otherwise the condition is hit. Items missing All items will be compared towards the previous items. If one (or more) items is missing which is not excluded by either the item list or regular expression, the condition is hit. Will re-run when added to an asset or when the condition has changed. Open alerts will never auto-close . Note that they can be closed indirectly , for example when the condition or check is removed from an asset. The item list or regular expression work as \" exclude \" by the item.name property. When a list is used, the items in the list will be ignored when missing. When a regular expression is used, an item match will ignore the item when missing. enodo.metric.upper lower value (+aggregation mix) Expression tab InfraSonar uses a powerful expression language that allows for precise and tailored conditions. Each item is processed by the given expression. If new is used in the expression, it is best practice not to use return OK in the expression as auto close does not make sense. This is because an item will only be new once. - Condition will be executed when added to an asset or when the condition has been changed, unless prev (previous item) is used in the expression. When prev is used, only when new data is received the condition will evaluate again. - return OK -> Success, Auto-close open alert if there is one. - return -> Success, Do not auto-close an open alert if there was one. - return ERROR, \"...\" -> return with severity and optional message. (ERROR might be INFO, CRITICAL etc.) Example expression // alert message template var.template = \" Certificate almost expires! name: @item.name expires in: @item.expiresIn seconds \" case item.expiresIn < 604_800: // Certificate will expire in less than 7 days return WARNING, var.template case item.expiresIn < 1_209_600: // Certificate will expire in less than 14 days return NOTICE, var.template case \"organisationName=Let's Encrypt\" in item.issuer: // Skip less than 28 days for Let's Encrypt certificates return OK case item.expiresIn < 2_419_200: // Certificate will expire in less than 28 days return INFORMATIONAL, var.template // this add's autoclose return OK case statement The case statement is case new return statement return <severity>, <message> The return statement is used to return the severity and a message. return without any parameters is also possible. severity Severity Description EMERGENCY System is unusable. ALERT Action must be taken immediately. CRITICAL Critical conditions. ERROR Error conditions. WARNING Warning conditions. NOTICE Normal but significant conditions. INFORMATIONAL Informational. DEBUG Messages that contain information normally of use only when debugging. OK This is an explicit OK which results in an alert auto closing when hit. Info Our severity levels are derived from the Syslog levels, see this Syslog wikipedia article for additional information. message The message can be a string message including variable substitution. E.g. My @item.name","title":"Conditions"},{"location":"documentation/application/conditions/#conditions","text":"Under construction Check results sent to the InfraSonar cloud platform are immediately evaluated using the conditions configured for the specific asset. InfraSonar comes with many predefined conditions based on years of experience and best practices. In order to manage conditions you need to have the ContainerAdmin role on the container you want to manage conditions for.","title":" Conditions"},{"location":"documentation/application/conditions/#managing-condtions","text":"While our condition editor might feel intimidating at first glance, it is potent. We urge you to look at our predefined conditions for inspiration and a deeper understanding.","title":"Managing condtions"},{"location":"documentation/application/conditions/#general-tab","text":"Name The name you want to use for your condition, we suggest a shot descriptive name. Description use the description to provide a short description of the purpose and usage of the condition. Collector Select the path to the data you want this condition. For probes this is: Collector , Check , Type Condition kind We identify three kind of Conditions: Kind Description EXPRESSION Detailed expression used to evaluate the check result. ITEMS MUST EXIST Used to detect items which must exist. ITEMS_MISSING Used to detect items missing compared to the previous check result. Ticks The number of times this condition must be hit in a row before an actual alert will be raised. Note Ticks can not be set for the condition kind ITEMS_MISSING as this compares with a previous check result. Single alert Gathers up all alerts into a single alert per asset. When disabled, each item will be tested and may raise an alert.","title":"General tab"},{"location":"documentation/application/conditions/#labels-tab","text":"In this tab you configure for which labels the condition is active.","title":"Labels tab"},{"location":"documentation/application/conditions/#items-tab","text":"This tab allows you to set the severity and specify for which items this conditions is a active in case of ITEMS MUST EXIST or which items this condition should exclude in the case of ITEMS_MISSING","title":"Items tab"},{"location":"documentation/application/conditions/#items-must-exist","text":"All items will be checked for existence by the given list or regular expression. Condition will be executed when added to an asset or when the condition has been changed. Auto-close is always enabled. The item list or regular expression work as \" include \" by the item.name property. When a list is used, all items in the list must exist otherwise the condition is hit. When a regular expression is used, at least one item must match with the given regular expression otherwise the condition is hit.","title":"Items must exist"},{"location":"documentation/application/conditions/#items-missing","text":"All items will be compared towards the previous items. If one (or more) items is missing which is not excluded by either the item list or regular expression, the condition is hit. Will re-run when added to an asset or when the condition has changed. Open alerts will never auto-close . Note that they can be closed indirectly , for example when the condition or check is removed from an asset. The item list or regular expression work as \" exclude \" by the item.name property. When a list is used, the items in the list will be ignored when missing. When a regular expression is used, an item match will ignore the item when missing. enodo.metric.upper lower value (+aggregation mix)","title":"Items missing"},{"location":"documentation/application/conditions/#expression-tab","text":"InfraSonar uses a powerful expression language that allows for precise and tailored conditions. Each item is processed by the given expression. If new is used in the expression, it is best practice not to use return OK in the expression as auto close does not make sense. This is because an item will only be new once. - Condition will be executed when added to an asset or when the condition has been changed, unless prev (previous item) is used in the expression. When prev is used, only when new data is received the condition will evaluate again. - return OK -> Success, Auto-close open alert if there is one. - return -> Success, Do not auto-close an open alert if there was one. - return ERROR, \"...\" -> return with severity and optional message. (ERROR might be INFO, CRITICAL etc.) Example expression // alert message template var.template = \" Certificate almost expires! name: @item.name expires in: @item.expiresIn seconds \" case item.expiresIn < 604_800: // Certificate will expire in less than 7 days return WARNING, var.template case item.expiresIn < 1_209_600: // Certificate will expire in less than 14 days return NOTICE, var.template case \"organisationName=Let's Encrypt\" in item.issuer: // Skip less than 28 days for Let's Encrypt certificates return OK case item.expiresIn < 2_419_200: // Certificate will expire in less than 28 days return INFORMATIONAL, var.template // this add's autoclose return OK","title":"Expression tab"},{"location":"documentation/application/conditions/#case-statement","text":"The case statement is case new","title":"case statement"},{"location":"documentation/application/conditions/#return-statement","text":"return <severity>, <message> The return statement is used to return the severity and a message. return without any parameters is also possible. severity Severity Description EMERGENCY System is unusable. ALERT Action must be taken immediately. CRITICAL Critical conditions. ERROR Error conditions. WARNING Warning conditions. NOTICE Normal but significant conditions. INFORMATIONAL Informational. DEBUG Messages that contain information normally of use only when debugging. OK This is an explicit OK which results in an alert auto closing when hit. Info Our severity levels are derived from the Syslog levels, see this Syslog wikipedia article for additional information. message The message can be a string message including variable substitution. E.g. My @item.name","title":"return statement"},{"location":"documentation/application/container/","text":"InfraSonar containers InfraSonor containers are a hierarchial setup of you monitored infrastructure. A container can contain monitored assets and/or sub-containers. On the container level an admin can configure authorization, custom labels, and conditions. Hierarchy Principles Authorization is inherited to \"lower\" containers. Inheritance can be \"broken\" down the chain. Timezones can be configured per container. InfraSonar hierarchical setup graph LR A[InfraSonar] --> B[container]; B -->C((assets)); A -->D[container]; D -->E[container]; D -->F[container]; E -->G((assets)); F -->H((assets)); A -->I[container]; I -->J((assets)); I -->K[container]; K -->L[container]; L -->N[container]; L -->O((assets)); N -->S((assets)); Hierarchy implementation for a service provider graph LR A[InfraSonar] --> B[service provider]; B --> C[internal infrastructure] B --> D[monitoring only] B --> E[managed service] C --> F((assets)) D --> customer1[customer 1] D --> customer2[customer 2] customer1 --> I((assets)) customer2 --> J((assets)) E --> customer3[customer 3] customer3 --> K((assets)) E --> customer4[customer 4] customer4 --> L((assets)) E --> customer5[customer 5] customer5 --> M[development] customer5 --> N[acceptance] customer5 --> O[production] M --> Q((assets)) N --> R((assets)) O --> S((assets)) Setup a new environment Note When you are new to InfraSonar and sign in for the first time, you will see the message: Welcome to InfraSonar! It appears that you are not yet a member of an InfraSonar environment. If you are a member of an organization that uses InfraSonar, ask for permission from an authorized person to add you to the appropriate environment. At the moment, it is impossible to create the first environment without our assistance, please contact us so we can set up an empty environment for you. From the container view, you can add a new environment. InfraSonar add environment When you are in asset view you can use the child containers button to switch to container view; Click the add container button ; Enter a name for your container; Select the mode, this is usual normal ; Select the timezone for this container; CLick save .","title":"Containers"},{"location":"documentation/application/container/#infrasonar-containers","text":"InfraSonor containers are a hierarchial setup of you monitored infrastructure. A container can contain monitored assets and/or sub-containers. On the container level an admin can configure authorization, custom labels, and conditions.","title":" InfraSonar containers"},{"location":"documentation/application/container/#hierarchy","text":"","title":"Hierarchy"},{"location":"documentation/application/container/#principles","text":"Authorization is inherited to \"lower\" containers. Inheritance can be \"broken\" down the chain. Timezones can be configured per container.","title":"Principles"},{"location":"documentation/application/container/#infrasonar-hierarchical-setup","text":"graph LR A[InfraSonar] --> B[container]; B -->C((assets)); A -->D[container]; D -->E[container]; D -->F[container]; E -->G((assets)); F -->H((assets)); A -->I[container]; I -->J((assets)); I -->K[container]; K -->L[container]; L -->N[container]; L -->O((assets)); N -->S((assets)); Hierarchy implementation for a service provider graph LR A[InfraSonar] --> B[service provider]; B --> C[internal infrastructure] B --> D[monitoring only] B --> E[managed service] C --> F((assets)) D --> customer1[customer 1] D --> customer2[customer 2] customer1 --> I((assets)) customer2 --> J((assets)) E --> customer3[customer 3] customer3 --> K((assets)) E --> customer4[customer 4] customer4 --> L((assets)) E --> customer5[customer 5] customer5 --> M[development] customer5 --> N[acceptance] customer5 --> O[production] M --> Q((assets)) N --> R((assets)) O --> S((assets))","title":"InfraSonar hierarchical setup"},{"location":"documentation/application/container/#setup-a-new-environment","text":"Note When you are new to InfraSonar and sign in for the first time, you will see the message: Welcome to InfraSonar! It appears that you are not yet a member of an InfraSonar environment. If you are a member of an organization that uses InfraSonar, ask for permission from an authorized person to add you to the appropriate environment. At the moment, it is impossible to create the first environment without our assistance, please contact us so we can set up an empty environment for you. From the container view, you can add a new environment. InfraSonar add environment When you are in asset view you can use the child containers button to switch to container view; Click the add container button ; Enter a name for your container; Select the mode, this is usual normal ; Select the timezone for this container; CLick save .","title":"Setup a new environment"},{"location":"documentation/application/labels/","text":"Labels Purpose Labels can be added to hosts to group and identify them quickly. Labels are also used to control which conditions are active and which conditions should be suppressed. A label can enforce multiple conditions on a host and is not bound to a specific probe. graph LR condition1[Condition] --- label; condition2[Condition] --- label; condition3[Condition] --- label; label{{Label}} --- host1[Host]; label --- host2[Host]; label --- host3[Host]; Glue Labels \"glue\" conditions onto hosts. How to use Labels can be assigned to hosts either by editing a host or by selecting one or more hosts and using the action menu . Action menu in action Deep dive Label classes InfraSonar has five label classes which can be identified by their color. Class Description Base labels in InfraSonar are prefixed with a # sign, followed by a descriptive name. Every host in InfraSonar should be associated with a base label, as these contain the best practices and set the main view for an asset/host. Regular labels are usually used to add extra conditions to a host or for grouping purposes. Ignore labels that are primarily used to suppress a condition are prefixed with a \u2260 sign. Maintenance label suppresses all conditions effectively muting a host. Ansible labels using the InfraSonar API, it is possible to integrate InfraSonar with an automation solutions such as Ansible. InfraSonar uses the & prefix to identify special labels. Custom labels InfraSonar administrators can create custom labels for an environment. InfraSonar add label Navigate to the labels page ( ) in the left navigation drawer. Click the Add label button. Enter a name. Enter an optional description. Click Save . Additional tabs The additional tabs: Hosts , Conditions , Suppressed and Channels show how the label is used. It is not possible to edit the label usage here. Predefined labels Base labels labels in InfraSonar that are prefixed with an # , follwed by a descriptive name. Every host in InfraSonar should be associated with a base label, as these contain the best practices and set the main view for an asset/host. # access switch Generic switch conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors # base Basic conditions. # Cisco UCS Cisco Unified Computing System Interface status Reboot detection Entity monitoring Standard hardware sensors Cisco UCS specific hardware status # Citrix Netscaler Citrix Netscaler conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors Failover detection Detect new or removed services Detect service state changes # datacenter switch Generic switch conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors Additional to the base conditions the # datacenter switch label also monitors port up and down events. # Docker Docker base label. This label adds the following predefined Docker conditions: Container CPU thresholds Notification upon container creation Notification upon tag changes # Firewall Basic firewall label. Interface status Reboot detection Entity monitoring Standard hardware sensors Palo Alto firewalls For Palo-Alto devices use the # Palo-alto label. # FreeBSD Predefined NIX host configuration. CPU thresholds Memory / swap thresholds Diskfree thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets FreeBSD vs Linux label The difference between the FreeBSB and Linux label is cosmetic. # Linux Predefined NIX host configuration. CPU thresholds Memory / swap thresholds Diskfree thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets # Mailroundtrip Conditions used for the SMTP-probe. # Microsoft SQL Server Widget to add conditions for SQL Server monitoring. This label adds the following predefined best practice Microsoft SQL conditions: Memory pressure detection Configuration state (e.g. parallelism settings, memory settings) Buffer cache hit ratio Log shipping status Deadlock detection Job status Additional labels that can be combined with this label: Microsoft SQL deadlocks > 10 min \u2260 auto-update-statistics \u2260 mssql buffercache \u2260 mssql cost threshold \u2260 deadlocks \u2260 max server mem \u2260 sql conn autoclose # Microsoft Windows Predefined Microsoft Windows host configuration. This label adds the following predefined Microsoft Windows conditions: CPU thresholds Memory / swap thresholds Disk free thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets Time difference Windows services Additional labels that can be combined with this label: Citrix XenApp CPU 30 min Daily reboot Exchange C: (15%) Exchange D: (15%) Microsoft Exchange Rolling reboot (48h) Windows Volumes (5%) # NetApp Netapp specific conditions for 7mode and cMode ONTAP versions CPU thresholds Memory / swap thresholds Aggregate / volume thresholds Aggregate / volume changes Reboot detection Interface port status (ifoper) Interface discarded & error packets Time difference Windows services Health status (hardware, subSystem, global) Snapshot status Additional labels that can be combined with this label: NetApp dangling snapshots NetApp SnapMirror lag (26h) NetApp SnapMirror lag (9h) NetApp snapshots required NetApp SnapVault lag (25h) NetApp SnapVault lag (9h) \u2260 sas-connect \u2260 snapshot volumes \u2260 spare disks regex # Netbotz Netbotz specific # Nimble storage Nimble storage # Palo-alto Palo Alto firewalls Interface status Reboot detection Entity monitoring Standard hardware sensors Palo Alto failover Palo Altop VPN tunnel status (ifoper) # PDU PDU configuration. # Pure Pure specific conditions: Array status CheckMessages alert Connections (added, lost, missing, replication address changed) Failover detection Drive status Hardware status HostConnection status Mirror Write latency Capacity Volume changes # Router Basis router label Interface status Reboot detection Entity monitoring Standard hardware sensors # SAN Switch SAN Switch specific label Interface status Reboot detection Entity monitoring Standard hardware sensors Logging Sensor statusses Fibre channel bad EOF delimiter status # Synology Synology Storage specific conditions: Basic conditions (see Linux) Synology system status Synology system fan status Synology raid status Synology power status Synology disk temperature Synology disk status Synology disk smart status Synology cpu fan status Disk status As a Synology system is sometimes configured with spare disks we ignore the statuses: The disk has system partitions but no data The disk is not partitioned # UPS Basic UPS label. # VMware ESX host VMWare ESX host label. # VMware vCenter VMWare virtual center label. # website Monitors website specifics. Regular labels Regular labels are gray in color and have no special character pre-fixing them. Notable regular labels: core , InfraSonar Agent-core host. \u00df test , label used for testing purposes. Citrix XenApp Citrix XenApp ICA latency condition. core InfraSonar Agent-core host. This label is added automatically. CPU 30 min Alert high CPU after 30 minutes. Daily reboot Reports if a Microsoft Windows host is up longer then 24 hours. This label marks a host as daily rebooted, by verifying if the uptime does not exceed 24 hours as this indicates a failed reboot. Reboots are still reported. When a hosts reboots, this will still raise an alert as we can't determine if the reboot was planned. Adding a maintenance routine to your reboot schedule will avoid these alerts. Dell iDrac Dell iDrac Server conditions: Detect eventlog changes Detect firmware changes System state amperage status System state battery status status System chassis intrusion status status System chassis status status System cooling status status System state amperage status System state powersupply status System state global status System state memory status System state power unit status System state processor status System state temperature status System state voltage status dns Checks performance and changes for the following checks: checkA checkAAAA checkMX checkS checkPTR checkTXT Exchange C: (15%) Exchange >= 2016. When QueueDB is installed on C. It will stop receiving new email when below 15% free disk space. Exchange D: (15%) Exchange >= 2016. When QueueDB is installed on D. It will stop receiving new email when below 15% free disk space. Exchange Volumes (15%) MS-Exchange Volumes (15%) HP Procurve switch HP ProCurve switch specific conditions: Firmware changes Software changes ProCurve sensor status changes HP Proliant HP Proliant Server conditions. Linux process httpd Checks if the httpd process is running. Linux process java Checks if the java process is running. maintenance This label wil disable all condition checking for data that comes in. Microsoft Exchange Microsoft Exchange specific conditions. Note This label disables memory thresholds, as Exchange tends to take as much memory as possible. Microsoft SQL Exeptions Microsoft SQL Server specifics. mssql deadlocks > 10 min Monitors for Microsoft SQL deadlocks that exist more than 10 minutes. NetApp dangling snapshots Detects dangling snapshots on NetApp ONTAP systems (7mode and cMode). When the time difference between 2 snapshots is greater than 21 (a.k.a. monthly backup), then an InfraSonar alert is triggered. There is also a label ( dangeling snapshots (vmfs) 7d ) which generates an alert if the snapshot contains the word vmfs and the time difference is greater then 7 days. Possible causes: Manual snapshots that have not been cleaned up. A reconfigured snapmanager. A server that is powered off while the mirror is still running. NetApp SnapMirror lag (>26h) NetApp snap-mirror lag should be less then 26 hours. NetApp SnapMirror lag (>9h) Netapp snap-mirror lag should be less then 9 hours. NetApp snapshots required When applied on a NetApp host every volume is checked whether it has snapshots. NetApp SnapVault lag (>25h) Netapp snap-vault lag should be less then 24 hours. NetApp SnapVault lag (>9h) Netapp snap-vault lag should be less then 9 hours. PoE changes monitors status changes for PoE. Rolling reboot (48h) Rolling reboots uptime > 48h. UPS temperature <15\u00b0 or >38\u00b0 Broader temperature window for UPS temperature window. vmfs 100Gb threshold Threshold for large VMFS volumes, e.g > 1Tb. VMware vm changes Notifies on virtual machine creation or deletion. Windows Volumes (5%) Only warn if a volume has less then 5% free. XenServer Ignore some check(s). Please also use Linux Label. \u00df test Label used for testing purposes. Ignore labels Labels that are primarily used to suppress a condition are prefixed with a \u2260 sign. Notable regular labels: \u2260 unstable connection , this label delays connection alerts to 15 minutes for connections that are deemed unstable. \u2260 Age check , do not check if this host is aged. \u2260 age check Do not check if this host is aged. \u2260 CPU High CPU usage does no longer result in an alert. \u2260 http401 Considers http response code 401 as valid state (since InfraSonar has no credentials for the monitored site). \u2260 interface discards Suppresses interface discards. \u2260 interface errors Suppresses interface errors and discards. \u2260 interface qlen errors Ignores QLen thresholds. \u2260 interface status Network ports on office switches tend to go down when PC's are turned off, hence we ignore the port status for these switches. \u2260 mssql auto-update-statistics Ignores auto update statistics setting. \u2260 mssql conn autoclose Suppresses Microsoft SQL best practice on auto close connections. \u2260 mssql buffercache Suppresses buffer cache hit ratio < 97% for longer than 15 mins this indicates memory pressure. \u2260 mssql cost threshold Ignores the Microsoft SQL server configuration setting for parallelism cost. \u2260 mssql deadlocks Ignore Microsoft SQL server deadlocks. \u2260 mssql max memory setting Ignores the Microsoft SQL server configuration setting for maximum server memory. \u2260 NetApp sas-connect Suppresses NetApp sas-connect health status. \u2260 NetApp spare disks Suppresses \"There are not enough spare disks.\" \u2260 new volumes Suppresses the detection of new volumes. \u2260 no native Used when no nativeprobe is installed while an Agent-core is. \u2260 Pagefile memory Ignores pagefile conditions. \u2260 Physical memory \u2260 smtp open relay Ignores open relay check, useful when an open relay is ok. \u2260 snapshot volumes Suppresses the detection for new or missing volumes. \u2260 SNMP Ignore InfraSonar Probe SNMP Check. \u2260 spf record Ignores the SPF record condition. \u2260 SSL cipher Suppress weak cipher detection. \u2260 SSL expiration Ignores SSL expiration date. \u2260 unstable connection This label delays connection alerts to 15 minutes for connections that are deemed unstable. \u2260 UPS Output load Ignores UPS output load, used for UPS devices which have almost no output. \u2260 VMware alert Suppresses VMware alerts with a yellow or red status. \u2260 VMware yellow alert Suppresses VMware alerts with a yellow status. \u2260 Windows service state degraded Ignores Windows degraded service states. Maintenance label The Maintenance label suppresses all conditions effectively muting an asset / host. Automation It is possible to automate setting the maintenance label using the API. A more detailed instruction can be found here . InfraSonar tasks are also a great way to automate the maintenance label. Ansible labels Using the InfraSonar API it is possible to integrate InfraSonar with an automation solutions such as Ansible. InfraSonar uses the & prefix to identify special labels.","title":"Labels"},{"location":"documentation/application/labels/#labels","text":"","title":" Labels"},{"location":"documentation/application/labels/#purpose","text":"Labels can be added to hosts to group and identify them quickly. Labels are also used to control which conditions are active and which conditions should be suppressed. A label can enforce multiple conditions on a host and is not bound to a specific probe. graph LR condition1[Condition] --- label; condition2[Condition] --- label; condition3[Condition] --- label; label{{Label}} --- host1[Host]; label --- host2[Host]; label --- host3[Host]; Glue Labels \"glue\" conditions onto hosts.","title":"Purpose"},{"location":"documentation/application/labels/#how-to-use","text":"Labels can be assigned to hosts either by editing a host or by selecting one or more hosts and using the action menu . Action menu in action","title":"How to use"},{"location":"documentation/application/labels/#deep-dive","text":"","title":"Deep dive"},{"location":"documentation/application/labels/#label-classes","text":"InfraSonar has five label classes which can be identified by their color. Class Description Base labels in InfraSonar are prefixed with a # sign, followed by a descriptive name. Every host in InfraSonar should be associated with a base label, as these contain the best practices and set the main view for an asset/host. Regular labels are usually used to add extra conditions to a host or for grouping purposes. Ignore labels that are primarily used to suppress a condition are prefixed with a \u2260 sign. Maintenance label suppresses all conditions effectively muting a host. Ansible labels using the InfraSonar API, it is possible to integrate InfraSonar with an automation solutions such as Ansible. InfraSonar uses the & prefix to identify special labels.","title":"Label classes"},{"location":"documentation/application/labels/#custom-labels","text":"InfraSonar administrators can create custom labels for an environment. InfraSonar add label Navigate to the labels page ( ) in the left navigation drawer. Click the Add label button. Enter a name. Enter an optional description. Click Save . Additional tabs The additional tabs: Hosts , Conditions , Suppressed and Channels show how the label is used. It is not possible to edit the label usage here.","title":"Custom labels"},{"location":"documentation/application/labels/#predefined-labels","text":"","title":"Predefined labels"},{"location":"documentation/application/labels/#base-labels","text":"labels in InfraSonar that are prefixed with an # , follwed by a descriptive name. Every host in InfraSonar should be associated with a base label, as these contain the best practices and set the main view for an asset/host.","title":" Base labels"},{"location":"documentation/application/labels/#access-switch","text":"Generic switch conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors","title":" # access switch"},{"location":"documentation/application/labels/#base","text":"Basic conditions.","title":" # base"},{"location":"documentation/application/labels/#cisco-ucs","text":"Cisco Unified Computing System Interface status Reboot detection Entity monitoring Standard hardware sensors Cisco UCS specific hardware status","title":" # Cisco UCS"},{"location":"documentation/application/labels/#citrix-netscaler","text":"Citrix Netscaler conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors Failover detection Detect new or removed services Detect service state changes","title":" # Citrix Netscaler"},{"location":"documentation/application/labels/#datacenter-switch","text":"Generic switch conditions: Interface status Reboot detection Entity monitoring Standard hardware sensors Additional to the base conditions the # datacenter switch label also monitors port up and down events.","title":" # datacenter switch"},{"location":"documentation/application/labels/#docker","text":"Docker base label. This label adds the following predefined Docker conditions: Container CPU thresholds Notification upon container creation Notification upon tag changes","title":" # Docker"},{"location":"documentation/application/labels/#firewall","text":"Basic firewall label. Interface status Reboot detection Entity monitoring Standard hardware sensors Palo Alto firewalls For Palo-Alto devices use the # Palo-alto label.","title":" # Firewall"},{"location":"documentation/application/labels/#freebsd","text":"Predefined NIX host configuration. CPU thresholds Memory / swap thresholds Diskfree thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets FreeBSD vs Linux label The difference between the FreeBSB and Linux label is cosmetic.","title":" # FreeBSD"},{"location":"documentation/application/labels/#linux","text":"Predefined NIX host configuration. CPU thresholds Memory / swap thresholds Diskfree thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets","title":" # Linux"},{"location":"documentation/application/labels/#mailroundtrip","text":"Conditions used for the SMTP-probe.","title":" # Mailroundtrip"},{"location":"documentation/application/labels/#microsoft-sql-server","text":"Widget to add conditions for SQL Server monitoring. This label adds the following predefined best practice Microsoft SQL conditions: Memory pressure detection Configuration state (e.g. parallelism settings, memory settings) Buffer cache hit ratio Log shipping status Deadlock detection Job status Additional labels that can be combined with this label: Microsoft SQL deadlocks > 10 min \u2260 auto-update-statistics \u2260 mssql buffercache \u2260 mssql cost threshold \u2260 deadlocks \u2260 max server mem \u2260 sql conn autoclose","title":" # Microsoft SQL Server"},{"location":"documentation/application/labels/#microsoft-windows","text":"Predefined Microsoft Windows host configuration. This label adds the following predefined Microsoft Windows conditions: CPU thresholds Memory / swap thresholds Disk free thresholds Reboot detection Interface port status (ifoper) Interface discarded & error packets Time difference Windows services Additional labels that can be combined with this label: Citrix XenApp CPU 30 min Daily reboot Exchange C: (15%) Exchange D: (15%) Microsoft Exchange Rolling reboot (48h) Windows Volumes (5%)","title":" # Microsoft Windows"},{"location":"documentation/application/labels/#netapp","text":"Netapp specific conditions for 7mode and cMode ONTAP versions CPU thresholds Memory / swap thresholds Aggregate / volume thresholds Aggregate / volume changes Reboot detection Interface port status (ifoper) Interface discarded & error packets Time difference Windows services Health status (hardware, subSystem, global) Snapshot status Additional labels that can be combined with this label: NetApp dangling snapshots NetApp SnapMirror lag (26h) NetApp SnapMirror lag (9h) NetApp snapshots required NetApp SnapVault lag (25h) NetApp SnapVault lag (9h) \u2260 sas-connect \u2260 snapshot volumes \u2260 spare disks regex","title":" # NetApp"},{"location":"documentation/application/labels/#netbotz","text":"Netbotz specific","title":" # Netbotz"},{"location":"documentation/application/labels/#nimble-storage","text":"Nimble storage","title":" # Nimble storage"},{"location":"documentation/application/labels/#palo-alto","text":"Palo Alto firewalls Interface status Reboot detection Entity monitoring Standard hardware sensors Palo Alto failover Palo Altop VPN tunnel status (ifoper)","title":" # Palo-alto"},{"location":"documentation/application/labels/#pdu","text":"PDU configuration.","title":" # PDU"},{"location":"documentation/application/labels/#pure","text":"Pure specific conditions: Array status CheckMessages alert Connections (added, lost, missing, replication address changed) Failover detection Drive status Hardware status HostConnection status Mirror Write latency Capacity Volume changes","title":" # Pure"},{"location":"documentation/application/labels/#router","text":"Basis router label Interface status Reboot detection Entity monitoring Standard hardware sensors","title":" # Router"},{"location":"documentation/application/labels/#san-switch","text":"SAN Switch specific label Interface status Reboot detection Entity monitoring Standard hardware sensors Logging Sensor statusses Fibre channel bad EOF delimiter status","title":" # SAN Switch"},{"location":"documentation/application/labels/#synology","text":"Synology Storage specific conditions: Basic conditions (see Linux) Synology system status Synology system fan status Synology raid status Synology power status Synology disk temperature Synology disk status Synology disk smart status Synology cpu fan status Disk status As a Synology system is sometimes configured with spare disks we ignore the statuses: The disk has system partitions but no data The disk is not partitioned","title":" # Synology"},{"location":"documentation/application/labels/#ups","text":"Basic UPS label.","title":" # UPS"},{"location":"documentation/application/labels/#vmware-esx-host","text":"VMWare ESX host label.","title":" # VMware ESX host"},{"location":"documentation/application/labels/#vmware-vcenter","text":"VMWare virtual center label.","title":" # VMware vCenter"},{"location":"documentation/application/labels/#website","text":"Monitors website specifics.","title":" # website"},{"location":"documentation/application/labels/#regular-labels","text":"Regular labels are gray in color and have no special character pre-fixing them. Notable regular labels: core , InfraSonar Agent-core host. \u00df test , label used for testing purposes.","title":" Regular labels"},{"location":"documentation/application/labels/#citrix-xenapp","text":"Citrix XenApp ICA latency condition.","title":" Citrix XenApp"},{"location":"documentation/application/labels/#core","text":"InfraSonar Agent-core host. This label is added automatically.","title":" core"},{"location":"documentation/application/labels/#cpu-30-min","text":"Alert high CPU after 30 minutes.","title":" CPU 30 min"},{"location":"documentation/application/labels/#daily-reboot","text":"Reports if a Microsoft Windows host is up longer then 24 hours. This label marks a host as daily rebooted, by verifying if the uptime does not exceed 24 hours as this indicates a failed reboot. Reboots are still reported. When a hosts reboots, this will still raise an alert as we can't determine if the reboot was planned. Adding a maintenance routine to your reboot schedule will avoid these alerts.","title":" Daily reboot"},{"location":"documentation/application/labels/#dell-idrac","text":"Dell iDrac Server conditions: Detect eventlog changes Detect firmware changes System state amperage status System state battery status status System chassis intrusion status status System chassis status status System cooling status status System state amperage status System state powersupply status System state global status System state memory status System state power unit status System state processor status System state temperature status System state voltage status","title":" Dell iDrac"},{"location":"documentation/application/labels/#dns","text":"Checks performance and changes for the following checks: checkA checkAAAA checkMX checkS checkPTR checkTXT","title":" dns"},{"location":"documentation/application/labels/#exchange-c-15","text":"Exchange >= 2016. When QueueDB is installed on C. It will stop receiving new email when below 15% free disk space.","title":" Exchange C: (15%)"},{"location":"documentation/application/labels/#exchange-d-15","text":"Exchange >= 2016. When QueueDB is installed on D. It will stop receiving new email when below 15% free disk space.","title":" Exchange D: (15%)"},{"location":"documentation/application/labels/#exchange-volumes-15","text":"MS-Exchange Volumes (15%)","title":" Exchange Volumes (15%)"},{"location":"documentation/application/labels/#hp-procurve-switch","text":"HP ProCurve switch specific conditions: Firmware changes Software changes ProCurve sensor status changes","title":" HP Procurve switch"},{"location":"documentation/application/labels/#hp-proliant","text":"HP Proliant Server conditions.","title":" HP Proliant"},{"location":"documentation/application/labels/#linux-process-httpd","text":"Checks if the httpd process is running.","title":" Linux process httpd"},{"location":"documentation/application/labels/#linux-process-java","text":"Checks if the java process is running.","title":" Linux process java"},{"location":"documentation/application/labels/#maintenance","text":"This label wil disable all condition checking for data that comes in.","title":" maintenance"},{"location":"documentation/application/labels/#microsoft-exchange","text":"Microsoft Exchange specific conditions. Note This label disables memory thresholds, as Exchange tends to take as much memory as possible.","title":" Microsoft Exchange"},{"location":"documentation/application/labels/#microsoft-sql-exeptions","text":"Microsoft SQL Server specifics.","title":" Microsoft SQL Exeptions"},{"location":"documentation/application/labels/#mssql-deadlocks-10-min","text":"Monitors for Microsoft SQL deadlocks that exist more than 10 minutes.","title":" mssql deadlocks &gt; 10 min"},{"location":"documentation/application/labels/#netapp-dangling-snapshots","text":"Detects dangling snapshots on NetApp ONTAP systems (7mode and cMode). When the time difference between 2 snapshots is greater than 21 (a.k.a. monthly backup), then an InfraSonar alert is triggered. There is also a label ( dangeling snapshots (vmfs) 7d ) which generates an alert if the snapshot contains the word vmfs and the time difference is greater then 7 days. Possible causes: Manual snapshots that have not been cleaned up. A reconfigured snapmanager. A server that is powered off while the mirror is still running.","title":" NetApp dangling snapshots"},{"location":"documentation/application/labels/#netapp-snapmirror-lag-26h","text":"NetApp snap-mirror lag should be less then 26 hours.","title":" NetApp SnapMirror lag (&gt;26h)"},{"location":"documentation/application/labels/#netapp-snapmirror-lag-9h","text":"Netapp snap-mirror lag should be less then 9 hours.","title":" NetApp SnapMirror lag (&gt;9h)"},{"location":"documentation/application/labels/#netapp-snapshots-required","text":"When applied on a NetApp host every volume is checked whether it has snapshots.","title":" NetApp snapshots required"},{"location":"documentation/application/labels/#netapp-snapvault-lag-25h","text":"Netapp snap-vault lag should be less then 24 hours.","title":" NetApp SnapVault lag (&gt;25h)"},{"location":"documentation/application/labels/#netapp-snapvault-lag-9h","text":"Netapp snap-vault lag should be less then 9 hours.","title":" NetApp SnapVault lag (&gt;9h)"},{"location":"documentation/application/labels/#poe-changes","text":"monitors status changes for PoE.","title":" PoE changes"},{"location":"documentation/application/labels/#rolling-reboot-48h","text":"Rolling reboots uptime > 48h.","title":" Rolling reboot (48h)"},{"location":"documentation/application/labels/#ups-temperature-15-or-38","text":"Broader temperature window for UPS temperature window.","title":" UPS temperature &lt;15\u00b0 or &gt;38\u00b0"},{"location":"documentation/application/labels/#vmfs-100gb-threshold","text":"Threshold for large VMFS volumes, e.g > 1Tb.","title":" vmfs 100Gb threshold"},{"location":"documentation/application/labels/#vmware-vm-changes","text":"Notifies on virtual machine creation or deletion.","title":" VMware vm changes"},{"location":"documentation/application/labels/#windows-volumes-5","text":"Only warn if a volume has less then 5% free.","title":" Windows Volumes (5%)"},{"location":"documentation/application/labels/#xenserver","text":"Ignore some check(s). Please also use Linux Label.","title":" XenServer"},{"location":"documentation/application/labels/#test","text":"Label used for testing purposes.","title":" \u00df test"},{"location":"documentation/application/labels/#ignore-labels","text":"Labels that are primarily used to suppress a condition are prefixed with a \u2260 sign. Notable regular labels: \u2260 unstable connection , this label delays connection alerts to 15 minutes for connections that are deemed unstable. \u2260 Age check , do not check if this host is aged.","title":" Ignore labels"},{"location":"documentation/application/labels/#age-check","text":"Do not check if this host is aged.","title":" \u2260 age check"},{"location":"documentation/application/labels/#cpu","text":"High CPU usage does no longer result in an alert.","title":" \u2260 CPU"},{"location":"documentation/application/labels/#http401","text":"Considers http response code 401 as valid state (since InfraSonar has no credentials for the monitored site).","title":" \u2260 http401"},{"location":"documentation/application/labels/#interface-discards","text":"Suppresses interface discards.","title":" \u2260 interface discards"},{"location":"documentation/application/labels/#interface-errors","text":"Suppresses interface errors and discards.","title":" \u2260 interface errors"},{"location":"documentation/application/labels/#interface-qlen-errors","text":"Ignores QLen thresholds.","title":" \u2260 interface qlen errors"},{"location":"documentation/application/labels/#interface-status","text":"Network ports on office switches tend to go down when PC's are turned off, hence we ignore the port status for these switches.","title":" \u2260 interface status"},{"location":"documentation/application/labels/#mssql-auto-update-statistics","text":"Ignores auto update statistics setting.","title":" \u2260 mssql auto-update-statistics"},{"location":"documentation/application/labels/#mssql-conn-autoclose","text":"Suppresses Microsoft SQL best practice on auto close connections.","title":" \u2260 mssql conn autoclose"},{"location":"documentation/application/labels/#mssql-buffercache","text":"Suppresses buffer cache hit ratio < 97% for longer than 15 mins this indicates memory pressure.","title":" \u2260 mssql buffercache"},{"location":"documentation/application/labels/#mssql-cost-threshold","text":"Ignores the Microsoft SQL server configuration setting for parallelism cost.","title":" \u2260 mssql cost threshold"},{"location":"documentation/application/labels/#mssql-deadlocks","text":"Ignore Microsoft SQL server deadlocks.","title":" \u2260 mssql deadlocks"},{"location":"documentation/application/labels/#mssql-max-memory-setting","text":"Ignores the Microsoft SQL server configuration setting for maximum server memory.","title":" \u2260 mssql max memory setting"},{"location":"documentation/application/labels/#netapp-sas-connect","text":"Suppresses NetApp sas-connect health status.","title":" \u2260 NetApp sas-connect"},{"location":"documentation/application/labels/#netapp-spare-disks","text":"Suppresses \"There are not enough spare disks.\"","title":" \u2260 NetApp spare disks"},{"location":"documentation/application/labels/#new-volumes","text":"Suppresses the detection of new volumes.","title":" \u2260 new volumes"},{"location":"documentation/application/labels/#no-native","text":"Used when no nativeprobe is installed while an Agent-core is.","title":" \u2260 no native"},{"location":"documentation/application/labels/#pagefile-memory","text":"Ignores pagefile conditions.","title":" \u2260 Pagefile memory"},{"location":"documentation/application/labels/#physical-memory","text":"","title":" \u2260 Physical memory"},{"location":"documentation/application/labels/#smtp-open-relay","text":"Ignores open relay check, useful when an open relay is ok.","title":" \u2260 smtp open relay"},{"location":"documentation/application/labels/#snapshot-volumes","text":"Suppresses the detection for new or missing volumes.","title":" \u2260 snapshot volumes"},{"location":"documentation/application/labels/#snmp","text":"Ignore InfraSonar Probe SNMP Check.","title":" \u2260 SNMP"},{"location":"documentation/application/labels/#spf-record","text":"Ignores the SPF record condition.","title":" \u2260 spf record"},{"location":"documentation/application/labels/#ssl-cipher","text":"Suppress weak cipher detection.","title":" \u2260 SSL cipher"},{"location":"documentation/application/labels/#ssl-expiration","text":"Ignores SSL expiration date.","title":" \u2260 SSL expiration"},{"location":"documentation/application/labels/#unstable-connection","text":"This label delays connection alerts to 15 minutes for connections that are deemed unstable.","title":" \u2260 unstable connection"},{"location":"documentation/application/labels/#ups-output-load","text":"Ignores UPS output load, used for UPS devices which have almost no output.","title":" \u2260 UPS Output load"},{"location":"documentation/application/labels/#vmware-alert","text":"Suppresses VMware alerts with a yellow or red status.","title":" \u2260 VMware alert"},{"location":"documentation/application/labels/#vmware-yellow-alert","text":"Suppresses VMware alerts with a yellow status.","title":" \u2260 VMware yellow alert"},{"location":"documentation/application/labels/#windows-service-state-degraded","text":"Ignores Windows degraded service states.","title":" \u2260 Windows service state degraded"},{"location":"documentation/application/labels/#maintenance-label","text":"The Maintenance label suppresses all conditions effectively muting an asset / host. Automation It is possible to automate setting the maintenance label using the API. A more detailed instruction can be found here . InfraSonar tasks are also a great way to automate the maintenance label.","title":" Maintenance label"},{"location":"documentation/application/labels/#ansible-labels","text":"Using the InfraSonar API it is possible to integrate InfraSonar with an automation solutions such as Ansible. InfraSonar uses the & prefix to identify special labels.","title":" Ansible labels"},{"location":"documentation/application/modes/","text":"Modes Modes can be used to temporary change the monitoring operation on a container or an asset or group of assets. We identify the following modes within the InfraSonar application: mode description normal normal operations, all conditions are evaluated. maintenance All asset notifications and alert messages suppressed disabled All data send by an agent for this asset is ignored. Any probes / checks configured for this asset are stopped. Modes in day to day operations Modes are a powerful instrument when performing maintenance on assets as it allows on easy way to temporary stop the monitoring avoiding being flood with messages. Mode operations Container Modes can be set on container level. Effectively changing the mode for all assets in the container. Changing the mode on a container can be done using our a schedular or in the container view. Asset Changing the mode on an asset can be done while editing an asset or scheduled API It is also possible to change the mode using our API: Change mode on a asset Change mode on a container","title":"Modes"},{"location":"documentation/application/modes/#modes","text":"Modes can be used to temporary change the monitoring operation on a container or an asset or group of assets. We identify the following modes within the InfraSonar application: mode description normal normal operations, all conditions are evaluated. maintenance All asset notifications and alert messages suppressed disabled All data send by an agent for this asset is ignored. Any probes / checks configured for this asset are stopped. Modes in day to day operations Modes are a powerful instrument when performing maintenance on assets as it allows on easy way to temporary stop the monitoring avoiding being flood with messages.","title":"Modes"},{"location":"documentation/application/modes/#mode-operations","text":"","title":"Mode operations"},{"location":"documentation/application/modes/#container","text":"Modes can be set on container level. Effectively changing the mode for all assets in the container. Changing the mode on a container can be done using our a schedular or in the container view.","title":"Container"},{"location":"documentation/application/modes/#asset","text":"Changing the mode on an asset can be done while editing an asset or scheduled","title":"Asset"},{"location":"documentation/application/modes/#api","text":"It is also possible to change the mode using our API: Change mode on a asset Change mode on a container","title":"API"},{"location":"documentation/application/notifications/","text":"Notifications Notification are used to notify InfraSonar users of issues with the monitoring platform. Notifications offer a clear distinction between actual \"Alerts\" and when monitoring is failing. Notifications auto-close when the issue is resolved, users can't close a notification only the system can once the issue is resolved. As such all notifications should be handled as an indication that something is wrong with monitoring. Good to known Notifications are not the result of a condition. The only notifications which are raised by incoming data, are the check errors. These are not conditions but errors which directly result in a notification.","title":"Notifications"},{"location":"documentation/application/notifications/#notifications","text":"Notification are used to notify InfraSonar users of issues with the monitoring platform. Notifications offer a clear distinction between actual \"Alerts\" and when monitoring is failing. Notifications auto-close when the issue is resolved, users can't close a notification only the system can once the issue is resolved. As such all notifications should be handled as an indication that something is wrong with monitoring. Good to known Notifications are not the result of a condition. The only notifications which are raised by incoming data, are the check errors. These are not conditions but errors which directly result in a notification.","title":"Notifications"},{"location":"documentation/application/rules/","text":"Rules Rules are a great way to configure notifications for end-users. InfraSonor supports the following notification services: email DutyCalls email DuyCalls","title":"Rules"},{"location":"documentation/application/rules/#rules","text":"Rules are a great way to configure notifications for end-users. InfraSonor supports the following notification services: email DutyCalls","title":"Rules"},{"location":"documentation/application/rules/#email","text":"","title":"email"},{"location":"documentation/application/rules/#duycalls","text":"","title":"DuyCalls"},{"location":"documentation/application/schedule/","text":"Schedule Our schedular allows you to schedule a mode change on a specific time or at specific intervals.","title":"Schedule"},{"location":"documentation/application/schedule/#schedule","text":"Our schedular allows you to schedule a mode change on a specific time or at specific intervals.","title":"Schedule"},{"location":"documentation/application/tokens/","text":"Tokens","title":":material-key-outline: Tokens"},{"location":"documentation/application/tokens/#tokens","text":"","title":" Tokens"},{"location":"documentation/application/user_management/","text":"User management Authentication We support user authentication using using one of these cloud identities: GitHub account Microsoft account ( this can be a work or personal account ) Google account ( this can be a personal or Google workspace account ) Tip Users can only be added to our platform if they are \"known\" to us. As such a user should fist authenticate once on our platform and from there on the user can be added to a container. Authorization A user's identity can be authorized on a container container using a specific role. Authorization flags Alerts can be assigned to this user (\"Is member\") Allows alerts to be assigned to this user, makes the user \"visible\" for alert assignment. View When applied to the root container, this gives sysadmin access; Required for viewing this container. Billing Required for viewing the credits tab on this container (only when credits are available on the container). InsertCheckData Required for inserting data using the API (used by agents). AgentcoreConnect Required for AgentCores to connect to the hub. AssetManagement Required for changing the container mode (and/or schedule container mode); Required for changing the asset mode (and/or schedule asset mode); Required for creating new assets; Required for removing assets (including delete from trash); Required for changing asset configuration (including labels and collector related configuration). AlertAssign Required for assigning alerts. AlertChange Required for closing alerts; Required for adding comments to alerts. API Required for any API request. ContainerManagement Required for adding child containers to this container; Required for removing this container; Required for renaming this container. ContainerAdmin Required for creating/changing/removing labels within this container; Required for creating/changing/removing conditions within this container; Required to create/change/remove a DutyCalls service to this container. ContainerAccess Required for managing user access to this container; Required for managing tokens on this container. CheckManagement Required for enable/disable/configure checks per collector on assets. TimeSeriesManagement Required for enable/disable time-series for this container. RuleManagement Required for managing DutyCalls rules on this container; Required for managing Email rules (including rules by other users) on this container. RuleEmail Required for creating a personal email rule on this container. (other email rules are only visible when having the admin role) PurgeTimeSeries Required for purging dead-time-series within this container. ViewLog Required for viewing logging. ConnectWiseManageAddOn Required to use the CWM_ADDON on this container; (only if the container has CWM configured).","title":"User management"},{"location":"documentation/application/user_management/#user-management","text":"","title":"User management"},{"location":"documentation/application/user_management/#authentication","text":"We support user authentication using using one of these cloud identities: GitHub account Microsoft account ( this can be a work or personal account ) Google account ( this can be a personal or Google workspace account ) Tip Users can only be added to our platform if they are \"known\" to us. As such a user should fist authenticate once on our platform and from there on the user can be added to a container.","title":"Authentication"},{"location":"documentation/application/user_management/#authorization","text":"A user's identity can be authorized on a container container using a specific role.","title":"Authorization"},{"location":"documentation/application/user_management/#authorization-flags","text":"Alerts can be assigned to this user (\"Is member\") Allows alerts to be assigned to this user, makes the user \"visible\" for alert assignment. View When applied to the root container, this gives sysadmin access; Required for viewing this container. Billing Required for viewing the credits tab on this container (only when credits are available on the container). InsertCheckData Required for inserting data using the API (used by agents). AgentcoreConnect Required for AgentCores to connect to the hub. AssetManagement Required for changing the container mode (and/or schedule container mode); Required for changing the asset mode (and/or schedule asset mode); Required for creating new assets; Required for removing assets (including delete from trash); Required for changing asset configuration (including labels and collector related configuration). AlertAssign Required for assigning alerts. AlertChange Required for closing alerts; Required for adding comments to alerts. API Required for any API request. ContainerManagement Required for adding child containers to this container; Required for removing this container; Required for renaming this container. ContainerAdmin Required for creating/changing/removing labels within this container; Required for creating/changing/removing conditions within this container; Required to create/change/remove a DutyCalls service to this container. ContainerAccess Required for managing user access to this container; Required for managing tokens on this container. CheckManagement Required for enable/disable/configure checks per collector on assets. TimeSeriesManagement Required for enable/disable time-series for this container. RuleManagement Required for managing DutyCalls rules on this container; Required for managing Email rules (including rules by other users) on this container. RuleEmail Required for creating a personal email rule on this container. (other email rules are only visible when having the admin role) PurgeTimeSeries Required for purging dead-time-series within this container. ViewLog Required for viewing logging. ConnectWiseManageAddOn Required to use the CWM_ADDON on this container; (only if the container has CWM configured).","title":"Authorization flags"},{"location":"documentation/collectors/","text":"Collectors InfraSonar collectors collect monitoring data to be parsed by the InfraSonar cloud platform. All our general purpose collectors are available as open-source on our GitHub page . Using the provided libraries third parties can easily add additional collectors to our platform. We identify the following collector types: Agents Probes Services Agents Agents run autonomously on a monitored asset and send data directly the to InfraSonar platform. Probes Probes are most often deployed on an appliance and are orchestrated by an agentcore . Probes are typically used for agentless monitoring scenario's. Services Services collect data \"as a service\".","title":"Collectors"},{"location":"documentation/collectors/#collectors","text":"InfraSonar collectors collect monitoring data to be parsed by the InfraSonar cloud platform. All our general purpose collectors are available as open-source on our GitHub page . Using the provided libraries third parties can easily add additional collectors to our platform. We identify the following collector types: Agents Probes Services","title":"Collectors"},{"location":"documentation/collectors/#agents","text":"Agents run autonomously on a monitored asset and send data directly the to InfraSonar platform.","title":"Agents"},{"location":"documentation/collectors/#probes","text":"Probes are most often deployed on an appliance and are orchestrated by an agentcore . Probes are typically used for agentless monitoring scenario's.","title":"Probes"},{"location":"documentation/collectors/#services","text":"Services collect data \"as a service\".","title":"Services"},{"location":"documentation/collectors/agents/","text":"Agents InfraSonar agents monitor autonomously and send the retrieved monitoring data to the InfraSonar platform using the InfraSonar API Available agents Docker agent Microsoft Windows Agent","title":"Agents"},{"location":"documentation/collectors/agents/#agents","text":"InfraSonar agents monitor autonomously and send the retrieved monitoring data to the InfraSonar platform using the InfraSonar API","title":"Agents"},{"location":"documentation/collectors/agents/#available-agents","text":"Docker agent Microsoft Windows Agent","title":"Available agents"},{"location":"documentation/collectors/agents/docker/","text":"Docker The Docker-agent is a Docker container that can be used to monitor other Docker containers. The Docker-agent itself runs as a Docker container on the host, which hosts the containers and uses the Unix socket docker.sock to retrieve relevant monitoring data which, is send to the InfraSonar API. Prerequisites The Docker-agent must be able to connect to the InfraSonar API The Docker-agent must be allowed access to the Unix socket docker.sock . The Docker-agent requires a valid token . Deployment There are multiple scenario's that can be used to deploy the docker agent and it depends on your use case which one would suites best for you. Host network vs bridge network When using a bridge network it is highly recommended to set the container host name using the --hostname / -h flag as this is the name used by the agent to present itself. Upon first run the Docker agents registers itself as an asset in InfraSonar, to ensure reconnection to the same asset an asset-id is stored in /data/.asset.json hence the reason we mount the the /data folder. Docker command Deploys the docker agent using a bridged network and names the hostname to the system hostname: docker run \\ --name dockeragent \\ -h $HOSTNAME \\ -v infraSonarData:/data \\ -e TOKEN = \"<<agent token>>\" \\ -v /var/run/docker.sock:/var/run/docker.sock \\ ghcr.io/infrasonar/docker-agent:unstable Deploys the docker agent using the host network and thus automatically uses the system hostname: docker run \\ --name dockeragent \\ --network host \\ -v infraSonarData:/data \\ -e TOKEN = \"<<agent token>>\" \\ -v /var/run/docker.sock:/var/run/docker.sock \\ ghcr.io/infrasonar/docker-agent:unstable docker-compose You can also add the Docker-agent to your docker-compose.yml file: volumes : infraSonarData : services : dockeragent : network_mode : host container_name : dockeragent hostname : dockeragent restart : always logging : options : max-size : 5m image : ghcr.io/infrasonar/docker-agent:unstable environment : TOKEN : \"<<agent token>>\" volumes : - /var/run/docker.sock:/var/run/docker.sock - infraSonarData:/data","title":"Docker"},{"location":"documentation/collectors/agents/docker/#docker","text":"The Docker-agent is a Docker container that can be used to monitor other Docker containers. The Docker-agent itself runs as a Docker container on the host, which hosts the containers and uses the Unix socket docker.sock to retrieve relevant monitoring data which, is send to the InfraSonar API.","title":" Docker"},{"location":"documentation/collectors/agents/docker/#prerequisites","text":"The Docker-agent must be able to connect to the InfraSonar API The Docker-agent must be allowed access to the Unix socket docker.sock . The Docker-agent requires a valid token .","title":"Prerequisites"},{"location":"documentation/collectors/agents/docker/#deployment","text":"There are multiple scenario's that can be used to deploy the docker agent and it depends on your use case which one would suites best for you. Host network vs bridge network When using a bridge network it is highly recommended to set the container host name using the --hostname / -h flag as this is the name used by the agent to present itself. Upon first run the Docker agents registers itself as an asset in InfraSonar, to ensure reconnection to the same asset an asset-id is stored in /data/.asset.json hence the reason we mount the the /data folder.","title":"Deployment"},{"location":"documentation/collectors/agents/docker/#docker-command","text":"Deploys the docker agent using a bridged network and names the hostname to the system hostname: docker run \\ --name dockeragent \\ -h $HOSTNAME \\ -v infraSonarData:/data \\ -e TOKEN = \"<<agent token>>\" \\ -v /var/run/docker.sock:/var/run/docker.sock \\ ghcr.io/infrasonar/docker-agent:unstable Deploys the docker agent using the host network and thus automatically uses the system hostname: docker run \\ --name dockeragent \\ --network host \\ -v infraSonarData:/data \\ -e TOKEN = \"<<agent token>>\" \\ -v /var/run/docker.sock:/var/run/docker.sock \\ ghcr.io/infrasonar/docker-agent:unstable","title":"Docker command"},{"location":"documentation/collectors/agents/docker/#docker-compose","text":"You can also add the Docker-agent to your docker-compose.yml file: volumes : infraSonarData : services : dockeragent : network_mode : host container_name : dockeragent hostname : dockeragent restart : always logging : options : max-size : 5m image : ghcr.io/infrasonar/docker-agent:unstable environment : TOKEN : \"<<agent token>>\" volumes : - /var/run/docker.sock:/var/run/docker.sock - infraSonarData:/data","title":"docker-compose"},{"location":"documentation/collectors/agents/microsoft_windows/","text":"Microsoft Windows agent The Microsoft Windows agent is under active development. The expected release is Q1 - 2023.","title":"Microsoft Windows"},{"location":"documentation/collectors/agents/microsoft_windows/#microsoft-windows-agent","text":"The Microsoft Windows agent is under active development. The expected release is Q1 - 2023.","title":" Microsoft Windows agent"},{"location":"documentation/collectors/probes/","text":"Probes InfraSonar uses probes to retrieve data from monitored assets (hosts). Probes are the glue between the vendor-provided method of retrieving data, usually an API, and the InfraSonar data format. Goal We use vendor-provided technologies to query controlled systems. When a new asset (host) is added and the InfraSonar admin enables a specific probe for this asset, a discovery routine will be started to identify the asset and determine which checks InfraSonar can perform. Deployment Probes are typically deployed using one or more InfraSonar appliances. The InfraSonar appliance is a ready to run Linux appliance. See our Appliance deployment guide on how to deploy an InfraSonar appliance in your network. Orchestration The Agent-core orchestrates our probes and is responsible for scheduling checks. During the startup sequence of a probe, it will \u201cannounce\u201d itself to the Agent-core. The Agent-core also acts as a communication gateway. Data retrieved by the probes is sent to the InfraSonar cloud platform via the Agent-core. Communication graph LR probe[Probe] --> Agentcore[Agent-core] --> infrasonarcloud[InfraSonar Cloud Platform]; Because probes usually run in the same Docker network as the Agent-core, they can easily connect to it. Configuration Probes are deployed as Docker container using docker compose for orchestration. Probe behavior, such as setting the log level, can be configured using environment variables in the /etc/infrasonar/docker-compose.yml file. The usage of this file is outlined here","title":":material-radar: Probes"},{"location":"documentation/collectors/probes/#probes","text":"InfraSonar uses probes to retrieve data from monitored assets (hosts). Probes are the glue between the vendor-provided method of retrieving data, usually an API, and the InfraSonar data format. Goal We use vendor-provided technologies to query controlled systems. When a new asset (host) is added and the InfraSonar admin enables a specific probe for this asset, a discovery routine will be started to identify the asset and determine which checks InfraSonar can perform.","title":" Probes"},{"location":"documentation/collectors/probes/#deployment","text":"Probes are typically deployed using one or more InfraSonar appliances. The InfraSonar appliance is a ready to run Linux appliance. See our Appliance deployment guide on how to deploy an InfraSonar appliance in your network.","title":"Deployment"},{"location":"documentation/collectors/probes/#orchestration","text":"The Agent-core orchestrates our probes and is responsible for scheduling checks. During the startup sequence of a probe, it will \u201cannounce\u201d itself to the Agent-core. The Agent-core also acts as a communication gateway. Data retrieved by the probes is sent to the InfraSonar cloud platform via the Agent-core.","title":"Orchestration"},{"location":"documentation/collectors/probes/#communication","text":"graph LR probe[Probe] --> Agentcore[Agent-core] --> infrasonarcloud[InfraSonar Cloud Platform]; Because probes usually run in the same Docker network as the Agent-core, they can easily connect to it.","title":"Communication"},{"location":"documentation/collectors/probes/#configuration","text":"Probes are deployed as Docker container using docker compose for orchestration. Probe behavior, such as setting the log level, can be configured using environment variables in the /etc/infrasonar/docker-compose.yml file. The usage of this file is outlined here","title":"Configuration"},{"location":"documentation/collectors/probes/agentcore/","text":"Agent-core The Agent-core orchestrates our probes and is responsible for scheduling checks. During the startup sequence of a probe, it will \u201cannounce\u201d itself to the Agent-core. The Agent-core also acts as a communication gateway. Data retrieved by the probes is sent to the InfraSonar cloud platform via the Agent-core. Features If an agent-core is shutdown properly the list of assets and a check result queue are saved on disk. Given the agent-core starts and it can't connect to the InfraSonar cloud platform the list of saved assets will be used to resume operations. Check results up to a maximum of 100.000 packages will be stored in a queue Communication graph LR probe[Probe] --> | TCP 8750 | Agent-core[Agent-core] --> | HTTPS 443 | infrasonarcloud[InfraSonar Cloud Platform]; Because probes usually run in the same Docker network as the Agent-core, they can easily connect to it. Multiple agent-cores InfraSonar supports multiple agent-cores within a monitored environment. Deploying multiple agent-cores can be usefull in spreading the network load, accomendate for network segmentation, and supporting large-scale implementations. To support network segmentation, assets can be assigned to a zone. When this zone also has an agent-core assigned its assets will automatically be monitored using the agent-cores in this zone. When you deploy multiple agent-cores in a zone, assets will be evenly distributed between all agent-cores in this zone.. No automagic failover If an agent-core fails it's role will not automatically be taken over by another agent-core. To accomplish this, the failing agent-core needs to be removed by an InfraSonar admin. Operational Removing an Agent-core When an Agent-core is decommissioned, all hosts monitored by are automatically transferred to other agent-cores in the configured zone.","title":"Agent-core"},{"location":"documentation/collectors/probes/agentcore/#agent-core","text":"The Agent-core orchestrates our probes and is responsible for scheduling checks. During the startup sequence of a probe, it will \u201cannounce\u201d itself to the Agent-core. The Agent-core also acts as a communication gateway. Data retrieved by the probes is sent to the InfraSonar cloud platform via the Agent-core.","title":" Agent-core"},{"location":"documentation/collectors/probes/agentcore/#features","text":"If an agent-core is shutdown properly the list of assets and a check result queue are saved on disk. Given the agent-core starts and it can't connect to the InfraSonar cloud platform the list of saved assets will be used to resume operations. Check results up to a maximum of 100.000 packages will be stored in a queue","title":"Features"},{"location":"documentation/collectors/probes/agentcore/#communication","text":"graph LR probe[Probe] --> | TCP 8750 | Agent-core[Agent-core] --> | HTTPS 443 | infrasonarcloud[InfraSonar Cloud Platform]; Because probes usually run in the same Docker network as the Agent-core, they can easily connect to it.","title":"Communication"},{"location":"documentation/collectors/probes/agentcore/#multiple-agent-cores","text":"InfraSonar supports multiple agent-cores within a monitored environment. Deploying multiple agent-cores can be usefull in spreading the network load, accomendate for network segmentation, and supporting large-scale implementations. To support network segmentation, assets can be assigned to a zone. When this zone also has an agent-core assigned its assets will automatically be monitored using the agent-cores in this zone. When you deploy multiple agent-cores in a zone, assets will be evenly distributed between all agent-cores in this zone.. No automagic failover If an agent-core fails it's role will not automatically be taken over by another agent-core. To accomplish this, the failing agent-core needs to be removed by an InfraSonar admin.","title":"Multiple agent-cores"},{"location":"documentation/collectors/probes/agentcore/#operational","text":"","title":"Operational"},{"location":"documentation/collectors/probes/agentcore/#removing-an-agent-core","text":"When an Agent-core is decommissioned, all hosts monitored by are automatically transferred to other agent-cores in the configured zone.","title":"Removing an Agent-core"},{"location":"documentation/collectors/probes/dns/","text":"DNS The DNS probe monitors DNS servers and can even monitor changes to specific DNS records. Configuration Property Description DNS Servers DNS servers to query, note all configured DNS servers are queried FQDN FQDN of the DNS record you want to monitor Reverse DNS lookups Using the special .arpa. domain it is possible to perform a reverse DNS lookup. See our PTR section for a detailed explanation and examples. Example configuration DNS servers: 8.8.8.8, 8.8.4.4 FQDN: dns.google.com Check specifics We support the DNS record types described in the next paragraphs. Most of the information in this chapter is an extract from this Wikipedia article. A Address record, List of IPv4 addresses, most commonly used to map hostnames to an IP address of the host Example: FQDN Result infrasonar.com 185.199.111.153, 185.199.108.153, 185.199.109.153, 185.199.110.153 AAAA IPv6 address record, list of IPv6 addresses, most commonly used to map hostnames to an IP address of the host Example: FQDN Result infrasonar.com 2606:50c0:8003::153, 2606:50c0:8002::153, 2606:50c0:8001::153, 2606:50c0:8000::153 CAA Certification Authority Authorization. DNS Certification Authority Authorization, constraining acceptable CAs for a host/domain. CAA record structure: flag tag value flag A flags byte which implements an extensible signaling system for future use. As of 2018, only the issuer critical flag has been defined, which instructs certificate authorities that they must understand the corresponding property tag before issuing a certificate. This flag allows the protocol to be extended in the future with mandatory extensions, similar to critical extensions in X.509 certificates. tag One of the following property: issue This property authorizes the holder of the domain specified in associated property value to issue certificates for the domain for which the property is published. issuewild This property acts like issue but only authorizes the issuance of wildcard certificates, and takes precedence over the issue property for wildcard certificate requests. iodef This property specifies a method for certificate authorities to report invalid certificate requests to the domain name holder using the Incident Object Description Exchange Format. As of 2018, not all certificate authorities support this tag, so there is no guarantee that all certificate issuances will be reported. contactemail Increasingly, contact information is not available in WHOIS due to concerns about potential GDPR violations. This property allows domain holders to publish contact information in DNS. contactphone As above, for phone numbers. value The value associated with the chosen property tag. Example: FQDN Result infrasonar.com 0 issue \"pki.goog\" CNAME Canonical name record, alias of one name to another. A CNAME lookup returns only one canonical name. Example: FQDN Result docs.infrasonar.com cesbit.github.io. DS Delegation signer. The record used to identify the DNSSEC signing key of a delegated zone. DS record structure: Key Tag Algorithm Digest Type Digest Example: FQDN Result infrasonar.com 9907 8 2 33D13AB164664236CF3EF302E8057AF46FC226AAE2B6A2759E4E80BA AF448970 MX Mail exchange record, list of mail exchange servers that accept email for a domain. Example output: 1 aspmx.l.google.com.,10 alt3.aspmx.l.google.com.,10 alt4.aspmx.l.google.com.,5 alt1.aspmx.l.google.com.,5 alt2.aspmx.l.google.com. MX Record An MX record is returned as follows: preference address Example: FQDN Result infrasonar.com 1 aspmx.l.google.com., 5 alt1.aspmx.l.google.com., 5 alt2.aspmx.l.google.com., 10 alt3.aspmx.l.google.com., 10 alt4.aspmx.l.google.com. NS Name server record, Delegates a DNS zone to use the given authoritative name servers. Example: FQDN Result infrasonar.com ns-cloud-a1.googledomains.com, ns-cloud-a2.googledomains.com, ns-cloud-a3.googledomains.com, ns-cloud-a4.googledomains.com PTR PTR Resource Record, possible for IP addresses in the format: in-addr.arpa is the namespace within .arpa for reverse DNS lookups in IPv4. IPv6 IPv6 addresses are constructed differently from IPv4 addresses, and IPv6 PTR records exist in a different namespace within .arpa. IPv6 PTR records are stored under the IPv6 address, reversed and converted into four-bit sections (as opposed to 8-bit sections, as in IPv4), plus \".ip6.arpa\". So 2001:4860:4860::8844 becomes: 4.4.8.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.8.4.0.6.8.4.1.0.0.2.ip6.arpa Example: FQDN Result 8.8.8.8.in-addr.arpa. dns.google. .4.8.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.8.4.0.6.8.4.1.0.0.2.ip6.arpa dns.google. SRV Service locator, generalized service location record, used for newer protocols instead of creating protocol-specific records such as MX. SRV record structure: Priority Weight Port Target priority the priority of the target host, lower value means more preferred. weight A relative weight for records with the same priority, higher value means higher chance of getting picked. port the TCP or UDP port on which the service is to be found. target the canonical hostname of the machine providing the service, ending in a dot. Example: FQDN Result _srv._test.test-technology.nl. 0 5 5060 srvrecordtest.test-technology.nl. SOA Start of [a zone of] authority record. Specifies authoritative information about a DNS zone, including the primary name server, the email of the domain administrator, the domain serial number, and several timers relating to refreshing the zone. SOA record structure: Primary NS Responsible name Serial Refresh Retry Expire Miniumum Primary NS Primary master name server for this zone. Responsible name Email address of the administrator responsible for this zone. (As usual, the email address is encoded as a name. The part of the email address before the @ becomes the first label of the name; the domain name after the @ becomes the rest of the name. In zone-file format, dots in labels are escaped with backslashes; thus the email address john.doe@example.com would be represented in a zone file as john.doe.example.com.) Serial Serial number for this zone. If a secondary name server slaved to this one observes an increase in this number, the slave will assume that the zone has been updated and initiate a zone transfer. Refresh Number of seconds after which secondary name servers should query the master for the SOA record, to detect zone changes. Recommendation for small and stable zones: 86400 seconds (24 hours). Retry Number of seconds after which secondary name servers should retry to request the serial number from the master if the master does not respond. It must be less than Refresh. Recommendation for small and stable zones: 7200 seconds (2 hours). Expire Number of seconds after which secondary name servers should stop answering request for this zone if the master does not respond. This value must be bigger than the sum of Refresh and Retry. Recommendation for small and stable zones: 3600000 seconds (1000 hours). Miniumum Used in calculating the time to live for purposes of negative caching. Authoritative name servers take the smaller of the SOA TTL and the SOA MINIMUM to send as the SOA TTL in negative responses. Resolvers use the resulting SOA TTL to understand for how long they are allowed to cache a negative response. Recommendation for small and stable zones: 172800 seconds (2 days). Originally this field had the meaning of a minimum TTL value for resource records in this zone; it was changed to its current meaning by RFC 2308. Example: FQDN Result infrasonar.com ns-cloud-e1.googledomains.com. cloud-dns-hostmaster.google.com. 15 21600 3600 259200 300 Best practices Internal vs External response Setup an asset to monitor your internal and external DNS response. This can easily be done by monitoring for example google.com on your internal DNS servers and Google DNS servers, for IPv4: 8.8.8.8 and/or 8.8.4.4 and for IPv6: 2001:4860:4860::8888 and/or 2001:4860:4860::8844 . The average DNS lookup time is between 20 and 120 milliseconds. Anything between that and under is generally considered very good. Microsoft Active Directory source Setup a DNS probe to monitor for Microsoft Active Directory specific DNS entries for each DNS server in your forest / domain. Legend Domain_Name is the name of your domain. SiteName , name of your Active Directory Site DnsForestName , name of your DNS Forest. The following SRV records are registered by Net Logon: _ldap._tcp.<Domain_Name>. Allows a client to locate servers running the LDAP service in the domain of Domain_Name . _ldap._tcp.<SiteName>._sites.<Domain_Name>. Allows a client to locate servers running the LDAP service in a domain in a site SiteName Domain_Name . SiteName relative file name, which is stored in the Configuration container in Active Directory. _ldap._tcp.dc._msdcs.<Domain_Name>. Allows a client to find a domain controller in the domain Domain_Name . All DC register this SRV record. _ldap._tcp. <SiteName>._sites.dc._msdcs.<Domain_Name>. Allows a client to find a domain controller in the domain in site SiteName Domain_Name . All DC register this SRV record. _ldap._tcp.pdc._msdcs.<Domain_Name>. Allows a client to find a domain PDC Domain_Name . Only PDC server registers this SRV record. _ldap._tcp.gc._msdcs.<DnsForestName>. Allows a client to find a DC in the forest DnsForestName . Only GC servers register this SRV record. _ldap._tcp. <SiteName>._sites.gc._msdcs.<DnsForestName>. Allows a client to find a GC in the forest Only GC server DnsForestName owned by this forest register this SRV record _gc._tcp.<DnsForestName>. Allows a client to find a GC in the domain. Only GC servers owned by this forest DnsForestName register this SRV record. _gc._tcp.<SiteName>._sites.<DnsForestName>. Allows a client to find a GC in this forest site SiteName DnsForestName . Only GC servers owned by this forest DnsForestName register this SRV record. _ldap._tcp.DomainGuid.domains._msdcs.<DnsForestName>. Allows customers to find the DC GUID. A GUID is a 128-bit unique index. Admits when Domain_Name DnsForestName and changed. _kerberos._tcp.<Domain_Name>. Allows clients to find a Kerberos KDC in that domain: Domain_Name . All DC register this SRV record. _kerberos._udp.<Domain_Name>. Same as _kerberos ._tcp.<Domain_Name> only over UDP _kerberos._tcp.<SiteName>._sites.<Domain_Name>. Allows clients to find a Kerberos KDC in that domain: Domain_Name site SiteName . All DC register this SRV record. _kerberos._tcp.dc._msdcs.<Domain_Name>. Allows clients to find a DC running a Kerberos KDC's role in that domain: Domain_Name . All DC with the KDC log this SRV record. _kerberos.tcp.<SiteName>._sites.dc._msdcs.<Domain_Name>. Allows clients to find a DC running a Kerberos KDC's role in that domain: Domain_Name site SiteName . All DC with the KDC log this SRV record. _kpasswd._tcp.<Domain_Name>. Kerberos Password Change allows you to search for current domain. All kerberos KDC DC (c) role of the register this SRV record _kpasswd._udp.<Domain_Name>. Same as _kpassword._tcp.<Domain_Name> only over UDP","title":"DNS"},{"location":"documentation/collectors/probes/dns/#dns","text":"The DNS probe monitors DNS servers and can even monitor changes to specific DNS records.","title":" DNS"},{"location":"documentation/collectors/probes/dns/#configuration","text":"Property Description DNS Servers DNS servers to query, note all configured DNS servers are queried FQDN FQDN of the DNS record you want to monitor Reverse DNS lookups Using the special .arpa. domain it is possible to perform a reverse DNS lookup. See our PTR section for a detailed explanation and examples.","title":"Configuration"},{"location":"documentation/collectors/probes/dns/#example-configuration","text":"DNS servers: 8.8.8.8, 8.8.4.4 FQDN: dns.google.com","title":"Example configuration"},{"location":"documentation/collectors/probes/dns/#check-specifics","text":"We support the DNS record types described in the next paragraphs. Most of the information in this chapter is an extract from this Wikipedia article.","title":"Check specifics"},{"location":"documentation/collectors/probes/dns/#a","text":"Address record, List of IPv4 addresses, most commonly used to map hostnames to an IP address of the host Example: FQDN Result infrasonar.com 185.199.111.153, 185.199.108.153, 185.199.109.153, 185.199.110.153","title":"A"},{"location":"documentation/collectors/probes/dns/#aaaa","text":"IPv6 address record, list of IPv6 addresses, most commonly used to map hostnames to an IP address of the host Example: FQDN Result infrasonar.com 2606:50c0:8003::153, 2606:50c0:8002::153, 2606:50c0:8001::153, 2606:50c0:8000::153","title":"AAAA"},{"location":"documentation/collectors/probes/dns/#caa","text":"Certification Authority Authorization. DNS Certification Authority Authorization, constraining acceptable CAs for a host/domain. CAA record structure: flag tag value flag A flags byte which implements an extensible signaling system for future use. As of 2018, only the issuer critical flag has been defined, which instructs certificate authorities that they must understand the corresponding property tag before issuing a certificate. This flag allows the protocol to be extended in the future with mandatory extensions, similar to critical extensions in X.509 certificates. tag One of the following property: issue This property authorizes the holder of the domain specified in associated property value to issue certificates for the domain for which the property is published. issuewild This property acts like issue but only authorizes the issuance of wildcard certificates, and takes precedence over the issue property for wildcard certificate requests. iodef This property specifies a method for certificate authorities to report invalid certificate requests to the domain name holder using the Incident Object Description Exchange Format. As of 2018, not all certificate authorities support this tag, so there is no guarantee that all certificate issuances will be reported. contactemail Increasingly, contact information is not available in WHOIS due to concerns about potential GDPR violations. This property allows domain holders to publish contact information in DNS. contactphone As above, for phone numbers. value The value associated with the chosen property tag. Example: FQDN Result infrasonar.com 0 issue \"pki.goog\"","title":"CAA"},{"location":"documentation/collectors/probes/dns/#cname","text":"Canonical name record, alias of one name to another. A CNAME lookup returns only one canonical name. Example: FQDN Result docs.infrasonar.com cesbit.github.io.","title":"CNAME"},{"location":"documentation/collectors/probes/dns/#ds","text":"Delegation signer. The record used to identify the DNSSEC signing key of a delegated zone. DS record structure: Key Tag Algorithm Digest Type Digest Example: FQDN Result infrasonar.com 9907 8 2 33D13AB164664236CF3EF302E8057AF46FC226AAE2B6A2759E4E80BA AF448970","title":"DS"},{"location":"documentation/collectors/probes/dns/#mx","text":"Mail exchange record, list of mail exchange servers that accept email for a domain. Example output: 1 aspmx.l.google.com.,10 alt3.aspmx.l.google.com.,10 alt4.aspmx.l.google.com.,5 alt1.aspmx.l.google.com.,5 alt2.aspmx.l.google.com. MX Record An MX record is returned as follows: preference address Example: FQDN Result infrasonar.com 1 aspmx.l.google.com., 5 alt1.aspmx.l.google.com., 5 alt2.aspmx.l.google.com., 10 alt3.aspmx.l.google.com., 10 alt4.aspmx.l.google.com.","title":"MX"},{"location":"documentation/collectors/probes/dns/#ns","text":"Name server record, Delegates a DNS zone to use the given authoritative name servers. Example: FQDN Result infrasonar.com ns-cloud-a1.googledomains.com, ns-cloud-a2.googledomains.com, ns-cloud-a3.googledomains.com, ns-cloud-a4.googledomains.com","title":"NS"},{"location":"documentation/collectors/probes/dns/#ptr","text":"PTR Resource Record, possible for IP addresses in the format: in-addr.arpa is the namespace within .arpa for reverse DNS lookups in IPv4. IPv6 IPv6 addresses are constructed differently from IPv4 addresses, and IPv6 PTR records exist in a different namespace within .arpa. IPv6 PTR records are stored under the IPv6 address, reversed and converted into four-bit sections (as opposed to 8-bit sections, as in IPv4), plus \".ip6.arpa\". So 2001:4860:4860::8844 becomes: 4.4.8.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.8.4.0.6.8.4.1.0.0.2.ip6.arpa Example: FQDN Result 8.8.8.8.in-addr.arpa. dns.google. .4.8.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.8.4.0.6.8.4.1.0.0.2.ip6.arpa dns.google.","title":"PTR"},{"location":"documentation/collectors/probes/dns/#srv","text":"Service locator, generalized service location record, used for newer protocols instead of creating protocol-specific records such as MX. SRV record structure: Priority Weight Port Target priority the priority of the target host, lower value means more preferred. weight A relative weight for records with the same priority, higher value means higher chance of getting picked. port the TCP or UDP port on which the service is to be found. target the canonical hostname of the machine providing the service, ending in a dot. Example: FQDN Result _srv._test.test-technology.nl. 0 5 5060 srvrecordtest.test-technology.nl.","title":"SRV"},{"location":"documentation/collectors/probes/dns/#soa","text":"Start of [a zone of] authority record. Specifies authoritative information about a DNS zone, including the primary name server, the email of the domain administrator, the domain serial number, and several timers relating to refreshing the zone. SOA record structure: Primary NS Responsible name Serial Refresh Retry Expire Miniumum Primary NS Primary master name server for this zone. Responsible name Email address of the administrator responsible for this zone. (As usual, the email address is encoded as a name. The part of the email address before the @ becomes the first label of the name; the domain name after the @ becomes the rest of the name. In zone-file format, dots in labels are escaped with backslashes; thus the email address john.doe@example.com would be represented in a zone file as john.doe.example.com.) Serial Serial number for this zone. If a secondary name server slaved to this one observes an increase in this number, the slave will assume that the zone has been updated and initiate a zone transfer. Refresh Number of seconds after which secondary name servers should query the master for the SOA record, to detect zone changes. Recommendation for small and stable zones: 86400 seconds (24 hours). Retry Number of seconds after which secondary name servers should retry to request the serial number from the master if the master does not respond. It must be less than Refresh. Recommendation for small and stable zones: 7200 seconds (2 hours). Expire Number of seconds after which secondary name servers should stop answering request for this zone if the master does not respond. This value must be bigger than the sum of Refresh and Retry. Recommendation for small and stable zones: 3600000 seconds (1000 hours). Miniumum Used in calculating the time to live for purposes of negative caching. Authoritative name servers take the smaller of the SOA TTL and the SOA MINIMUM to send as the SOA TTL in negative responses. Resolvers use the resulting SOA TTL to understand for how long they are allowed to cache a negative response. Recommendation for small and stable zones: 172800 seconds (2 days). Originally this field had the meaning of a minimum TTL value for resource records in this zone; it was changed to its current meaning by RFC 2308. Example: FQDN Result infrasonar.com ns-cloud-e1.googledomains.com. cloud-dns-hostmaster.google.com. 15 21600 3600 259200 300","title":"SOA"},{"location":"documentation/collectors/probes/dns/#best-practices","text":"","title":"Best practices"},{"location":"documentation/collectors/probes/dns/#internal-vs-external-response","text":"Setup an asset to monitor your internal and external DNS response. This can easily be done by monitoring for example google.com on your internal DNS servers and Google DNS servers, for IPv4: 8.8.8.8 and/or 8.8.4.4 and for IPv6: 2001:4860:4860::8888 and/or 2001:4860:4860::8844 . The average DNS lookup time is between 20 and 120 milliseconds. Anything between that and under is generally considered very good.","title":"Internal vs External response"},{"location":"documentation/collectors/probes/dns/#microsoft-active-directory","text":"source Setup a DNS probe to monitor for Microsoft Active Directory specific DNS entries for each DNS server in your forest / domain. Legend Domain_Name is the name of your domain. SiteName , name of your Active Directory Site DnsForestName , name of your DNS Forest. The following SRV records are registered by Net Logon: _ldap._tcp.<Domain_Name>. Allows a client to locate servers running the LDAP service in the domain of Domain_Name . _ldap._tcp.<SiteName>._sites.<Domain_Name>. Allows a client to locate servers running the LDAP service in a domain in a site SiteName Domain_Name . SiteName relative file name, which is stored in the Configuration container in Active Directory. _ldap._tcp.dc._msdcs.<Domain_Name>. Allows a client to find a domain controller in the domain Domain_Name . All DC register this SRV record. _ldap._tcp. <SiteName>._sites.dc._msdcs.<Domain_Name>. Allows a client to find a domain controller in the domain in site SiteName Domain_Name . All DC register this SRV record. _ldap._tcp.pdc._msdcs.<Domain_Name>. Allows a client to find a domain PDC Domain_Name . Only PDC server registers this SRV record. _ldap._tcp.gc._msdcs.<DnsForestName>. Allows a client to find a DC in the forest DnsForestName . Only GC servers register this SRV record. _ldap._tcp. <SiteName>._sites.gc._msdcs.<DnsForestName>. Allows a client to find a GC in the forest Only GC server DnsForestName owned by this forest register this SRV record _gc._tcp.<DnsForestName>. Allows a client to find a GC in the domain. Only GC servers owned by this forest DnsForestName register this SRV record. _gc._tcp.<SiteName>._sites.<DnsForestName>. Allows a client to find a GC in this forest site SiteName DnsForestName . Only GC servers owned by this forest DnsForestName register this SRV record. _ldap._tcp.DomainGuid.domains._msdcs.<DnsForestName>. Allows customers to find the DC GUID. A GUID is a 128-bit unique index. Admits when Domain_Name DnsForestName and changed. _kerberos._tcp.<Domain_Name>. Allows clients to find a Kerberos KDC in that domain: Domain_Name . All DC register this SRV record. _kerberos._udp.<Domain_Name>. Same as _kerberos ._tcp.<Domain_Name> only over UDP _kerberos._tcp.<SiteName>._sites.<Domain_Name>. Allows clients to find a Kerberos KDC in that domain: Domain_Name site SiteName . All DC register this SRV record. _kerberos._tcp.dc._msdcs.<Domain_Name>. Allows clients to find a DC running a Kerberos KDC's role in that domain: Domain_Name . All DC with the KDC log this SRV record. _kerberos.tcp.<SiteName>._sites.dc._msdcs.<Domain_Name>. Allows clients to find a DC running a Kerberos KDC's role in that domain: Domain_Name site SiteName . All DC with the KDC log this SRV record. _kpasswd._tcp.<Domain_Name>. Kerberos Password Change allows you to search for current domain. All kerberos KDC DC (c) role of the register this SRV record _kpasswd._udp.<Domain_Name>. Same as _kpassword._tcp.<Domain_Name> only over UDP","title":"Microsoft Active Directory"},{"location":"documentation/collectors/probes/http/","text":"HTTP Probe The HTTP probe sends an HTTP(s) request to an URI and measures its roundtrip time. The probe also retrieves the returned HTTP status code. Configuration Property Description URI URI of the website you want to monitor Timeout Timeout in seconds should be a value between 0 and 240. The default timeout is 10.0 Verify SSL If turned off, the check ignores invalid certificates; when on, the URI must have a valid certificate. Nots, this is only applicable for HTTPS URI. The default is off. With payload Retrieves the payload, bare in mind the payload is limited to 500 Kb Allow redirects When turned on, redirects are followed. Tip When monitoring cloud services, enable Allow redirects as these services heavily rely on http redirects. Check specifics HTTP Status codes See rfc9110 or the List of HTTP status codes on Wikipedia for more detailed information. code class code Meaning 100 Informational Continue 101 Informational Switching protocols 102 Informational Processing 103 Informational Early Hints 200 Successful OK 201 Successful Created 202 Successful Accepted 203 Successful Non-Authoritative Information 204 Successful No Content 205 Successful Reset Content 206 Successful Partial Content 207 Successful Multi-Status 208 Successful Already Reported 226 Successful IM Used 300 Redirection Multiple Choices 301 Redirection Moved Permanently 302 Redirection Found (Previously \"Moved Temporarily\") 303 Redirection See Other 304 Redirection Not Modified 305 Redirection Use Proxy 306 Redirection Switch Proxy 307 Redirection Temporary Redirect 308 Redirection Permanent Redirect 400 Client Error Bad Request 401 Client Error Unauthorized 402 Client Error Payment Required 403 Client Error Forbidden 404 Client Error Not Found 405 Client Error Method Not Allowed 406 Client Error Not Acceptable 407 Client Error Proxy Authentication Required 408 Client Error Request Timeout 409 Client Error Conflict 410 Client Error Gone 411 Client Error Length Required 412 Client Error Precondition Failed 413 Client Error Payload Too Large 414 Client Error URI Too Long 415 Client Error Unsupported Media Type 416 Client Error Range Not Satisfiable 417 Client Error Expectation Failed 418 Client Error I'm a Teapot 421 Client Error Misdirected Request 422 Client Error Unprocessable Entity 423 Client Error Locked 424 Client Error Failed Dependency 425 Client Error Too Early 426 Client Error Upgrade Required 428 Client Error Precondition Required 429 Client Error Too Many Requests 431 Client Error Request Header Fields Too Large 451 Client Error Unavailable For Legal Reasons 500 Server Error Internal Server Error 501 Server Error Not Implemented 502 Server Error Bad Gateway 503 Server Error Service Unavailable 504 Server Error Gateway Timeout 505 Server Error HTTP Version Not Supported 506 Server Error Variant Also Negotiates 507 Server Error Insufficient Storage 508 Server Error Loop Detected 510 Server Error Not Extended 511 Server Error Network Authentication Required","title":"HTTP"},{"location":"documentation/collectors/probes/http/#http-probe","text":"The HTTP probe sends an HTTP(s) request to an URI and measures its roundtrip time. The probe also retrieves the returned HTTP status code.","title":" HTTP Probe"},{"location":"documentation/collectors/probes/http/#configuration","text":"Property Description URI URI of the website you want to monitor Timeout Timeout in seconds should be a value between 0 and 240. The default timeout is 10.0 Verify SSL If turned off, the check ignores invalid certificates; when on, the URI must have a valid certificate. Nots, this is only applicable for HTTPS URI. The default is off. With payload Retrieves the payload, bare in mind the payload is limited to 500 Kb Allow redirects When turned on, redirects are followed. Tip When monitoring cloud services, enable Allow redirects as these services heavily rely on http redirects.","title":"Configuration"},{"location":"documentation/collectors/probes/http/#check-specifics","text":"","title":"Check specifics"},{"location":"documentation/collectors/probes/http/#http-status-codes","text":"See rfc9110 or the List of HTTP status codes on Wikipedia for more detailed information. code class code Meaning 100 Informational Continue 101 Informational Switching protocols 102 Informational Processing 103 Informational Early Hints 200 Successful OK 201 Successful Created 202 Successful Accepted 203 Successful Non-Authoritative Information 204 Successful No Content 205 Successful Reset Content 206 Successful Partial Content 207 Successful Multi-Status 208 Successful Already Reported 226 Successful IM Used 300 Redirection Multiple Choices 301 Redirection Moved Permanently 302 Redirection Found (Previously \"Moved Temporarily\") 303 Redirection See Other 304 Redirection Not Modified 305 Redirection Use Proxy 306 Redirection Switch Proxy 307 Redirection Temporary Redirect 308 Redirection Permanent Redirect 400 Client Error Bad Request 401 Client Error Unauthorized 402 Client Error Payment Required 403 Client Error Forbidden 404 Client Error Not Found 405 Client Error Method Not Allowed 406 Client Error Not Acceptable 407 Client Error Proxy Authentication Required 408 Client Error Request Timeout 409 Client Error Conflict 410 Client Error Gone 411 Client Error Length Required 412 Client Error Precondition Failed 413 Client Error Payload Too Large 414 Client Error URI Too Long 415 Client Error Unsupported Media Type 416 Client Error Range Not Satisfiable 417 Client Error Expectation Failed 418 Client Error I'm a Teapot 421 Client Error Misdirected Request 422 Client Error Unprocessable Entity 423 Client Error Locked 424 Client Error Failed Dependency 425 Client Error Too Early 426 Client Error Upgrade Required 428 Client Error Precondition Required 429 Client Error Too Many Requests 431 Client Error Request Header Fields Too Large 451 Client Error Unavailable For Legal Reasons 500 Server Error Internal Server Error 501 Server Error Not Implemented 502 Server Error Bad Gateway 503 Server Error Service Unavailable 504 Server Error Gateway Timeout 505 Server Error HTTP Version Not Supported 506 Server Error Variant Also Negotiates 507 Server Error Insufficient Storage 508 Server Error Loop Detected 510 Server Error Not Extended 511 Server Error Network Authentication Required","title":"HTTP Status codes"},{"location":"documentation/collectors/probes/microsoft_azure/","text":"Microsoft Azure Beta The Azure probe is still an alpha \u03b1 release. Contact InfraSonar support if you want to get involved in the alpha testing phase. Features Add the moment the following Azure resources are supported: Virtual machine Private DNS zone DNS zone Regular Network Interface Public IP address Configuration Prepare your Azure environment Two steps are required to prepare your Azure environment for the InfraSonar Azure probe. Register the InfraSonar probe as an Azure app Authorize the registered app to the resources you want to monitor Open the Azure portal (https://portal.azure.com/) to ensure your account has sufficient privileges. Create an app registration From the main menu, open Azure Active Directory Open App registrations from the Azure Active Directory sub-menu Select new registration Enter the user-facing display name e.g., InfraSonar Azure Probe Who can use this application or access this API: Select Accounts in this organizational directory only Click register application app authorization Open the resource group containing the Azure resource you want to monitor Open Access control (IAM) Select the tab Role assignments Click Add and then Add role assignment Search the Reader role from the Role tab Open the Members tab Ensure Assign access to User, group, or service principal is selected Click Select members Search the name used by the app registration e.g., InfraSonar Azure Probe Select the app and click the select button Give an optional description Verify the role assignment and press Review + assign The registered app can now query the Azure portal's resources via the Azure API Rinse and repeat Repeat the above app authorization steps for each resource group containing the resource you want to monitor. Credentials The Data needed for the credentials are: Directory (tenant) ID Application (client) ID Client Secret These can be found in the registered app: From the main menu open Azure Active Directory Open App registrations from the Azure Active Directory sub menu Open the previous created application e.g. InfraSonar Azure Probe Note down the Application (client) ID and Directory (tenant) ID Open Certificates & secrets from the Manage submenu Click New client secret Enter a description e.g. InfraSonar azure probe Provide an expiration date Note down the Value , note this can not be retrieved again once you close this window. Create a defaultAssetConfig.ini for in /etc/infrasonar/azureprobe as documented here Setup Azure resources as InfraSonar assets Ensure the container is running Ensure the Azure probe docker container has been setup The next step is to add the Azure resources you want to monitor to InfraSonar. Navigate to the InfraSonar environment you want to add Azure resources to Click Add host in the host overview screen Enter a name in the hostname field Add the AzureProbe Open the Azureprobe tab Fill out the required details: Resource Name Resource Group Subscription Id Click save Patience is a virtue The first time it can take up to 5 minutes for the first data to come in.","title":"Microsoft Azure"},{"location":"documentation/collectors/probes/microsoft_azure/#microsoft-azure","text":"Beta The Azure probe is still an alpha \u03b1 release. Contact InfraSonar support if you want to get involved in the alpha testing phase.","title":" Microsoft Azure"},{"location":"documentation/collectors/probes/microsoft_azure/#features","text":"Add the moment the following Azure resources are supported: Virtual machine Private DNS zone DNS zone Regular Network Interface Public IP address","title":"Features"},{"location":"documentation/collectors/probes/microsoft_azure/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/microsoft_azure/#prepare-your-azure-environment","text":"Two steps are required to prepare your Azure environment for the InfraSonar Azure probe. Register the InfraSonar probe as an Azure app Authorize the registered app to the resources you want to monitor Open the Azure portal (https://portal.azure.com/) to ensure your account has sufficient privileges.","title":"Prepare your Azure environment"},{"location":"documentation/collectors/probes/microsoft_azure/#create-an-app-registration","text":"From the main menu, open Azure Active Directory Open App registrations from the Azure Active Directory sub-menu Select new registration Enter the user-facing display name e.g., InfraSonar Azure Probe Who can use this application or access this API: Select Accounts in this organizational directory only Click register application","title":"Create an app registration"},{"location":"documentation/collectors/probes/microsoft_azure/#app-authorization","text":"Open the resource group containing the Azure resource you want to monitor Open Access control (IAM) Select the tab Role assignments Click Add and then Add role assignment Search the Reader role from the Role tab Open the Members tab Ensure Assign access to User, group, or service principal is selected Click Select members Search the name used by the app registration e.g., InfraSonar Azure Probe Select the app and click the select button Give an optional description Verify the role assignment and press Review + assign The registered app can now query the Azure portal's resources via the Azure API Rinse and repeat Repeat the above app authorization steps for each resource group containing the resource you want to monitor.","title":"app authorization"},{"location":"documentation/collectors/probes/microsoft_azure/#credentials","text":"The Data needed for the credentials are: Directory (tenant) ID Application (client) ID Client Secret These can be found in the registered app: From the main menu open Azure Active Directory Open App registrations from the Azure Active Directory sub menu Open the previous created application e.g. InfraSonar Azure Probe Note down the Application (client) ID and Directory (tenant) ID Open Certificates & secrets from the Manage submenu Click New client secret Enter a description e.g. InfraSonar azure probe Provide an expiration date Note down the Value , note this can not be retrieved again once you close this window. Create a defaultAssetConfig.ini for in /etc/infrasonar/azureprobe as documented here","title":"Credentials"},{"location":"documentation/collectors/probes/microsoft_azure/#setup-azure-resources-as-infrasonar-assets","text":"Ensure the container is running Ensure the Azure probe docker container has been setup The next step is to add the Azure resources you want to monitor to InfraSonar. Navigate to the InfraSonar environment you want to add Azure resources to Click Add host in the host overview screen Enter a name in the hostname field Add the AzureProbe Open the Azureprobe tab Fill out the required details: Resource Name Resource Group Subscription Id Click save Patience is a virtue The first time it can take up to 5 minutes for the first data to come in.","title":"Setup Azure resources as InfraSonar assets"},{"location":"documentation/collectors/probes/microsoft_sql/","text":"Microsoft SQL Server The MSSQL probe uses SQL statements to monitor and analyze the health of a Microsoft SQL Server database. Goal The MSSQL probe offers a unified view that provides common ground for infrastructure engineers, DBA, and application managers to analyze and troubleshoot Microsoft SQL server performance issues. Features The MSSQL probe allows for in-depth analyses of a SQL server. Some of the included measurements: Memory Page life Expectancy. Parallelism configuration. CPU, memory and disk IO per database. Microsoft SQL server CPU usage SQL Table information. Wait statistics. Top 25 query information ( all queries would put too much strain on the SQL server ). Top worker time; which queries consume a lot of time and thus cpu usage. Top logical reads; which queries cost the most IO. Top execution count; shows the most active queries. Index information. Frequently used indexes (top used). Missing indexes, where would an index make sense. Unused indexes, only written but never queried. Microsoft SQL server missing indexes Fragmentation. Microsoft SQL server fragmentation IO, per file and per volume. Backup status. Agent jobs. SQL Config. Session and application information. Plan cache. Blocked count. Tip Our implementation consultants can assist in creating a detailed analysis of a Microsoft SQL server. Configuration Probe configuration The MSSQL probe requires the host's IP address running the monitored SQL server. SQL Server configuration Authentication Microsoft SQL Server supports SQL and Windows authentication. We have implementation scripts for both options but prefer to use Windows authentication, preventing passwords from being stored. Choose the correct script for your setup and execute the script using SQL Server Management Studio. Both scripts will grant the account used for monitoring sufficient access to query performance metrics. The InfraSonar admin must configure the credentials to query the database on the appliance that monitors the specific SQL server. See the credentials section on how to configure these. Grants for domain user Replace domainnamehere\\usernamehere in this script with the correct domain/username and execute it in SQL Server Management Studio to grant the user sufficient permissions. It is good practice to create a dedicated account for SQL monitoring. Grants for SQL User This script uses the default username svc_infrasonar and the password someSuperSecurePasswordHereOfCourse , which you should change before running the script. Appliance In order to use the Microsoft MSSQL-probe, it should be added as a service to the docker-compose file. mssqlprobe : << : *infrasonar image : ghcr.io/infrasonar/mssqlprobe environment : *default-infrasonar-environment Operational New databases The monitoring account does not automatically gain access to databases created after the initial setup. This scenario results in the following InfraSonar alert: The server principal \" account \" is not able to access the database \" databasename \" under the current security context. Either grant script contains a marked section that a SQL Admin must run to grant access to these newly created databases. Analysis SQL Server Cost threshold for parallelism InfraSonar can report the following message: SQL Server Cost threshold for parallelism is set to 5. Suggested is to set this value to 50. A Microsoft SQL DBA can resolve this by changing the threshold for parallelism to 50, using this SQL statement: EXEC sp_configure 'show advanced options' , 1 ; GO RECONFIGURE exec sp_configure 'cost threshold for parallelism' , 50 ; GO RECONFIGURE GO Max Degree of parallelism A typical SQL server misconfiguration is the Max Degree of parallelism . Rules of thumb: MDOP (Max Degree of parallelism) equal the number of CPU cores. MDOP should not be set greater then 8, so a 16 core system should have MDOP configured as 8 . Set ChangeMe to the desired MDOP and execute it using SQL Server Management Studio. EXEC sp_configure 'show advanced options' , 1 ; GO RECONFIGURE exec sp_configure 'Max Degree of parallelism' , ChangeMe ; GO RECONFIGURE GO","title":"Microsoft SQL Server"},{"location":"documentation/collectors/probes/microsoft_sql/#microsoft-sql-server","text":"The MSSQL probe uses SQL statements to monitor and analyze the health of a Microsoft SQL Server database. Goal The MSSQL probe offers a unified view that provides common ground for infrastructure engineers, DBA, and application managers to analyze and troubleshoot Microsoft SQL server performance issues.","title":" Microsoft SQL Server"},{"location":"documentation/collectors/probes/microsoft_sql/#features","text":"The MSSQL probe allows for in-depth analyses of a SQL server. Some of the included measurements: Memory Page life Expectancy. Parallelism configuration. CPU, memory and disk IO per database. Microsoft SQL server CPU usage SQL Table information. Wait statistics. Top 25 query information ( all queries would put too much strain on the SQL server ). Top worker time; which queries consume a lot of time and thus cpu usage. Top logical reads; which queries cost the most IO. Top execution count; shows the most active queries. Index information. Frequently used indexes (top used). Missing indexes, where would an index make sense. Unused indexes, only written but never queried. Microsoft SQL server missing indexes Fragmentation. Microsoft SQL server fragmentation IO, per file and per volume. Backup status. Agent jobs. SQL Config. Session and application information. Plan cache. Blocked count. Tip Our implementation consultants can assist in creating a detailed analysis of a Microsoft SQL server.","title":"Features"},{"location":"documentation/collectors/probes/microsoft_sql/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/microsoft_sql/#probe-configuration","text":"The MSSQL probe requires the host's IP address running the monitored SQL server.","title":"Probe configuration"},{"location":"documentation/collectors/probes/microsoft_sql/#sql-server-configuration","text":"","title":"SQL Server configuration"},{"location":"documentation/collectors/probes/microsoft_sql/#authentication","text":"Microsoft SQL Server supports SQL and Windows authentication. We have implementation scripts for both options but prefer to use Windows authentication, preventing passwords from being stored. Choose the correct script for your setup and execute the script using SQL Server Management Studio. Both scripts will grant the account used for monitoring sufficient access to query performance metrics. The InfraSonar admin must configure the credentials to query the database on the appliance that monitors the specific SQL server. See the credentials section on how to configure these.","title":"Authentication"},{"location":"documentation/collectors/probes/microsoft_sql/#grants-for-domain-user","text":"Replace domainnamehere\\usernamehere in this script with the correct domain/username and execute it in SQL Server Management Studio to grant the user sufficient permissions. It is good practice to create a dedicated account for SQL monitoring.","title":"Grants for domain user"},{"location":"documentation/collectors/probes/microsoft_sql/#grants-for-sql-user","text":"This script uses the default username svc_infrasonar and the password someSuperSecurePasswordHereOfCourse , which you should change before running the script.","title":"Grants for SQL User"},{"location":"documentation/collectors/probes/microsoft_sql/#appliance","text":"In order to use the Microsoft MSSQL-probe, it should be added as a service to the docker-compose file. mssqlprobe : << : *infrasonar image : ghcr.io/infrasonar/mssqlprobe environment : *default-infrasonar-environment","title":"Appliance"},{"location":"documentation/collectors/probes/microsoft_sql/#operational","text":"","title":"Operational"},{"location":"documentation/collectors/probes/microsoft_sql/#new-databases","text":"The monitoring account does not automatically gain access to databases created after the initial setup. This scenario results in the following InfraSonar alert: The server principal \" account \" is not able to access the database \" databasename \" under the current security context. Either grant script contains a marked section that a SQL Admin must run to grant access to these newly created databases.","title":"New databases"},{"location":"documentation/collectors/probes/microsoft_sql/#analysis","text":"","title":"Analysis"},{"location":"documentation/collectors/probes/microsoft_sql/#sql-server-cost-threshold-for-parallelism","text":"InfraSonar can report the following message: SQL Server Cost threshold for parallelism is set to 5. Suggested is to set this value to 50. A Microsoft SQL DBA can resolve this by changing the threshold for parallelism to 50, using this SQL statement: EXEC sp_configure 'show advanced options' , 1 ; GO RECONFIGURE exec sp_configure 'cost threshold for parallelism' , 50 ; GO RECONFIGURE GO","title":"SQL Server Cost threshold for parallelism"},{"location":"documentation/collectors/probes/microsoft_sql/#max-degree-of-parallelism","text":"A typical SQL server misconfiguration is the Max Degree of parallelism . Rules of thumb: MDOP (Max Degree of parallelism) equal the number of CPU cores. MDOP should not be set greater then 8, so a 16 core system should have MDOP configured as 8 . Set ChangeMe to the desired MDOP and execute it using SQL Server Management Studio. EXEC sp_configure 'show advanced options' , 1 ; GO RECONFIGURE exec sp_configure 'Max Degree of parallelism' , ChangeMe ; GO RECONFIGURE GO","title":"Max Degree of parallelism"},{"location":"documentation/collectors/probes/netapp/","text":"NetApp Features InfraSonar monitors NetApp systems running Data ONTAP using the ONTAP REST API. SNMP-probe for 7mode It is possible to monitor 7mode NetApp systems using SNMP. The monitoring is not as elaborate as the API Probe. Configuration Probe configuration NetApp storage systems are monitored using the root account. See the credentials section on how to configure credentials. The probe retrieves monitoring data using the ONTAP REST API on TCP port 443. Operational danglingSnapshots When the time difference between 2 snapshots is greater than 21 (also known as monthly backup), an InfraSonar alert is triggered. There is also a label ( dangling snapshots (vmfs) 7d ) which generates an alert if the snapshot contains the word vmfs and the time difference is greater then 7 days. Possible causes: Manual snapshots that have not been cleaned up. A reconfigured snapmanager. A server that is powered off while the mirror is still running.","title":"NetApp"},{"location":"documentation/collectors/probes/netapp/#netapp","text":"","title":"NetApp"},{"location":"documentation/collectors/probes/netapp/#features","text":"InfraSonar monitors NetApp systems running Data ONTAP using the ONTAP REST API. SNMP-probe for 7mode It is possible to monitor 7mode NetApp systems using SNMP. The monitoring is not as elaborate as the API Probe.","title":"Features"},{"location":"documentation/collectors/probes/netapp/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/netapp/#probe-configuration","text":"NetApp storage systems are monitored using the root account. See the credentials section on how to configure credentials. The probe retrieves monitoring data using the ONTAP REST API on TCP port 443.","title":"Probe configuration"},{"location":"documentation/collectors/probes/netapp/#operational","text":"","title":"Operational"},{"location":"documentation/collectors/probes/netapp/#danglingsnapshots","text":"When the time difference between 2 snapshots is greater than 21 (also known as monthly backup), an InfraSonar alert is triggered. There is also a label ( dangling snapshots (vmfs) 7d ) which generates an alert if the snapshot contains the word vmfs and the time difference is greater then 7 days. Possible causes: Manual snapshots that have not been cleaned up. A reconfigured snapmanager. A server that is powered off while the mirror is still running.","title":"danglingSnapshots"},{"location":"documentation/collectors/probes/ping/","text":"Ping The ping-probe utilizes the icmp protocol to monitor the network roundtrip between the monitoring appliance and the monitored host. Next to the roundtrip time, the ping probe monitors the number of dropped and successful packets. When the number of successful equals 0, a condition is raised. Configuration Property Description Address The address that the probe should ping. Interval Interval should be a value between 1 and 9, The default interval is 1. Count Count should be a value between 1 and 9, the default count is 5 Timeout Timeout in seconds should be a value between 0 and 240, the default timeout is 10 seconds. Check specifics Ping returns the minimum time and maximum time as this provides a better insight than just an average ping response. The number of successful and dropped ping packages are also monitored.","title":"Ping"},{"location":"documentation/collectors/probes/ping/#ping","text":"The ping-probe utilizes the icmp protocol to monitor the network roundtrip between the monitoring appliance and the monitored host. Next to the roundtrip time, the ping probe monitors the number of dropped and successful packets. When the number of successful equals 0, a condition is raised.","title":" Ping"},{"location":"documentation/collectors/probes/ping/#configuration","text":"Property Description Address The address that the probe should ping. Interval Interval should be a value between 1 and 9, The default interval is 1. Count Count should be a value between 1 and 9, the default count is 5 Timeout Timeout in seconds should be a value between 0 and 240, the default timeout is 10 seconds.","title":"Configuration"},{"location":"documentation/collectors/probes/ping/#check-specifics","text":"Ping returns the minimum time and maximum time as this provides a better insight than just an average ping response. The number of successful and dropped ping packages are also monitored.","title":"Check specifics"},{"location":"documentation/collectors/probes/pure_probe/","text":"Pure Pure Storage is monitored from the InfraSonar appliance using the Pure API. Probe configuration The Pure probe only requires the IP address of the monitored Pure array.","title":"Pure storage"},{"location":"documentation/collectors/probes/pure_probe/#pure","text":"Pure Storage is monitored from the InfraSonar appliance using the Pure API.","title":"Pure"},{"location":"documentation/collectors/probes/pure_probe/#probe-configuration","text":"The Pure probe only requires the IP address of the monitored Pure array.","title":"Probe configuration"},{"location":"documentation/collectors/probes/smtp/","text":"SMTP probe Description The SMTP probe consists of three components: Email roundtrip DNS check SMTP connection email roundtrip The InfraSonar email rountrip is a synthetic monitor verifying the complete email flow. The steps below outline the email roundtip for example.org : The first step is to lookup all MX records for example.org . The synthetic email monitor sends an email to all MX records. The receiving email server is configured to automatically forward all mail sent to the probe address. In our case mailroundtrip@example.org is forwarded to mailroundtrip@mrt.oversig.ht . The mail server mrt.oversig.ht passes the email to the synthetic monitor. The synthetic monitor extracts timestamps en relevant data from the received email and sends the check result to Oversight for further analysis. This approach ensures all components such, as DNS, internet connection, email filtering, and email server components involved in receiving and sending email, are part of the measurement. Note Sending an email to all MX records ensures the email fallback scenarios work when you need to rely on them. DNS check The DNS check verifies if an SPF record is configured and valid. SMTP connection We attempt to connect to each mail server found in the DNS MX lookup. Probe configuration The only required configuration property for the SMTP-probe is the mail domain. So in our case this would be: oversig.ht . The email domain is used to lookup the MX records, and optional SPF records and starts monitoring these. As an option, the email roundtrip can be configured by adding a configured email address. Labels Base label # Mailroundtrip Conditions used for the Mailroundtrip check: Blacklist check Check for open relay MX record changes Email roundtrip SPF record status Ignore labels \u2260 open relay Ignores open relay check. Useful when an open relay is ok . \u2260 spf record Ignores the SPF record condition. Mail Round Trip The email roundtrip check is part of the SNMP-probe. When configured, it sends an email every 5 minutes to a configured email address. This email address is in turn configured to forward the email back to its originator, creating a closed email loop. Microsoft Exchange Configuration The email roundtrip flow works as follows on a Microsoft Exchange infrastructure: The central monitoring server sends an email to a pre-configured user. The Exchange user auto-forwards the message to the email contact, which is the email address used by the central monitoring server. The central server receives and parses the message. Detailed configuration guides Google Workspace Microsoft Exchange 2003 Microsoft Exchange 2010","title":"SMTP"},{"location":"documentation/collectors/probes/smtp/#smtp-probe","text":"","title":"SMTP probe"},{"location":"documentation/collectors/probes/smtp/#description","text":"The SMTP probe consists of three components: Email roundtrip DNS check SMTP connection","title":"Description"},{"location":"documentation/collectors/probes/smtp/#email-roundtrip","text":"The InfraSonar email rountrip is a synthetic monitor verifying the complete email flow. The steps below outline the email roundtip for example.org : The first step is to lookup all MX records for example.org . The synthetic email monitor sends an email to all MX records. The receiving email server is configured to automatically forward all mail sent to the probe address. In our case mailroundtrip@example.org is forwarded to mailroundtrip@mrt.oversig.ht . The mail server mrt.oversig.ht passes the email to the synthetic monitor. The synthetic monitor extracts timestamps en relevant data from the received email and sends the check result to Oversight for further analysis. This approach ensures all components such, as DNS, internet connection, email filtering, and email server components involved in receiving and sending email, are part of the measurement. Note Sending an email to all MX records ensures the email fallback scenarios work when you need to rely on them.","title":"email roundtrip"},{"location":"documentation/collectors/probes/smtp/#dns-check","text":"The DNS check verifies if an SPF record is configured and valid.","title":"DNS check"},{"location":"documentation/collectors/probes/smtp/#smtp-connection","text":"We attempt to connect to each mail server found in the DNS MX lookup.","title":"SMTP connection"},{"location":"documentation/collectors/probes/smtp/#probe-configuration","text":"The only required configuration property for the SMTP-probe is the mail domain. So in our case this would be: oversig.ht . The email domain is used to lookup the MX records, and optional SPF records and starts monitoring these. As an option, the email roundtrip can be configured by adding a configured email address.","title":"Probe configuration"},{"location":"documentation/collectors/probes/smtp/#labels","text":"","title":"Labels"},{"location":"documentation/collectors/probes/smtp/#base-label","text":"# Mailroundtrip Conditions used for the Mailroundtrip check: Blacklist check Check for open relay MX record changes Email roundtrip SPF record status","title":"Base label"},{"location":"documentation/collectors/probes/smtp/#ignore-labels","text":"\u2260 open relay Ignores open relay check. Useful when an open relay is ok . \u2260 spf record Ignores the SPF record condition.","title":"Ignore labels"},{"location":"documentation/collectors/probes/smtp/#mail-round-trip","text":"The email roundtrip check is part of the SNMP-probe. When configured, it sends an email every 5 minutes to a configured email address. This email address is in turn configured to forward the email back to its originator, creating a closed email loop.","title":"Mail Round Trip"},{"location":"documentation/collectors/probes/smtp/#microsoft-exchange-configuration","text":"The email roundtrip flow works as follows on a Microsoft Exchange infrastructure: The central monitoring server sends an email to a pre-configured user. The Exchange user auto-forwards the message to the email contact, which is the email address used by the central monitoring server. The central server receives and parses the message.","title":"Microsoft Exchange Configuration"},{"location":"documentation/collectors/probes/smtp/#detailed-configuration-guides","text":"Google Workspace Microsoft Exchange 2003 Microsoft Exchange 2010","title":"Detailed configuration guides"},{"location":"documentation/collectors/probes/smtp_mailroundtrip_google_workspace/","text":"Google workspace Open the Google Admin Console . Navigate to: Apps > Google Workspace > Gmail . Select Default routing : ![mailroundtrip google workspace routing](../../../images/mailroundtrip_google_workspace_routing.png){ width=\"600\" } <figcaption>Google workspace routing</figcaption> Click on ADD ANOTHER RULE : In the section Specify envelope recipients to match , select Single recipient and enter the email address: mailroundtrip@ . Where is your email domain. In the section If the envelope recipient matches the above, select Change envelope recipient , set Replace recipient * and enter: mailroundtrip@mrt.oversig.ht . Under Spam , select Bypass spam filter for this message . Click Save .","title":"Google workspace"},{"location":"documentation/collectors/probes/smtp_mailroundtrip_google_workspace/#google-workspace","text":"Open the Google Admin Console . Navigate to: Apps > Google Workspace > Gmail . Select Default routing : ![mailroundtrip google workspace routing](../../../images/mailroundtrip_google_workspace_routing.png){ width=\"600\" } <figcaption>Google workspace routing</figcaption> Click on ADD ANOTHER RULE : In the section Specify envelope recipients to match , select Single recipient and enter the email address: mailroundtrip@ . Where is your email domain. In the section If the envelope recipient matches the above, select Change envelope recipient , set Replace recipient * and enter: mailroundtrip@mrt.oversig.ht . Under Spam , select Bypass spam filter for this message . Click Save .","title":"Google workspace"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/","text":"Microsoft Exchange 2003 Start the \"Active Directory Users and Computers\" tool on a server, which also contains the Exchange 2003 management tools. Usually the exchange or SBS server. Create a receiving mailbox user Create a new user in the for your organization correct OU: Provide the Full name . We recommend using: Mail Round Trip Monitoring Receive mailbox . Provide the User logon name . We recommend: mailroundtrip . Click on Next to continue. Password options: Enter a secure password. This password is not used and can be changed anytime. Select \"User cannot change password\" and \"Password never expires\". Click on Next to continue. Create the actual mailbox: Usually you can leave this default . Adjust the Server and mailbox store if required. Finish the creation of the user: Verify the configuration. Click on Finish to finalize the user creation process. Create a return mail contact Add a mail contact. This contact is required to forward the mail back to the monitoring host. Right click in the organization unit where you want to create the mail contact. Select Cew -> Contact . Enter the contact details: Provide a Full name , we suggest: Mail Round Trip Monitoring Return Address . Click on Next to continue. Add the SMTP address: Click on Modify : Select SMTP Address . Click on OK . Enter the return email address: Enter the return mail address in the E-mail address field: mailroundtrip@mrt.oversig.ht . Click on OK . Finish: Verify the settings. Click on Next to continue. Click on Finish . Hide the return mail contact We suggest hiding the contact from the address-book, so details will not be shown to end-users. Right-click on the Mail Round Trip Monitoring Return Address contact you just created and select Properties . Open the Exchange advanced tab. Select Hide from Exchange address lists . Click on OK . Modify the receive mailbox user Double click on the previously created Mail Round Trip Monitoring Receive mailbox user. Open the Exchange Features tab: Disable all features. Open the Exchange Advanced tab: Enable Hide from Exchange address lists . Open the \"Exchange General\" tab: Click on Delivery options. Click on Modify . Enter the Mail Round Trip Monitoring Return Address . Click on Ok three times.","title":"Microsoft Exchange 2003"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/#microsoft-exchange-2003","text":"Start the \"Active Directory Users and Computers\" tool on a server, which also contains the Exchange 2003 management tools. Usually the exchange or SBS server.","title":"Microsoft Exchange 2003"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/#create-a-receiving-mailbox-user","text":"Create a new user in the for your organization correct OU: Provide the Full name . We recommend using: Mail Round Trip Monitoring Receive mailbox . Provide the User logon name . We recommend: mailroundtrip . Click on Next to continue. Password options: Enter a secure password. This password is not used and can be changed anytime. Select \"User cannot change password\" and \"Password never expires\". Click on Next to continue. Create the actual mailbox: Usually you can leave this default . Adjust the Server and mailbox store if required. Finish the creation of the user: Verify the configuration. Click on Finish to finalize the user creation process.","title":"Create a receiving mailbox user"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/#create-a-return-mail-contact","text":"Add a mail contact. This contact is required to forward the mail back to the monitoring host. Right click in the organization unit where you want to create the mail contact. Select Cew -> Contact . Enter the contact details: Provide a Full name , we suggest: Mail Round Trip Monitoring Return Address . Click on Next to continue. Add the SMTP address: Click on Modify : Select SMTP Address . Click on OK . Enter the return email address: Enter the return mail address in the E-mail address field: mailroundtrip@mrt.oversig.ht . Click on OK . Finish: Verify the settings. Click on Next to continue. Click on Finish .","title":"Create a return mail contact"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/#hide-the-return-mail-contact","text":"We suggest hiding the contact from the address-book, so details will not be shown to end-users. Right-click on the Mail Round Trip Monitoring Return Address contact you just created and select Properties . Open the Exchange advanced tab. Select Hide from Exchange address lists . Click on OK .","title":"Hide the return mail contact"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2003/#modify-the-receive-mailbox-user","text":"Double click on the previously created Mail Round Trip Monitoring Receive mailbox user. Open the Exchange Features tab: Disable all features. Open the Exchange Advanced tab: Enable Hide from Exchange address lists . Open the \"Exchange General\" tab: Click on Delivery options. Click on Modify . Enter the Mail Round Trip Monitoring Return Address . Click on Ok three times.","title":"Modify the receive mailbox user"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/","text":"Microsoft Exchange 2010 Start the Microsoft \"Exchange Management Console\" on a server which also contains the Exchange 2010 management tools. This console can usually be found on the Microsoft Exchange or SBS server. Create a new mailbox Right click on Mailbox under Recipient Configuration : Select New Mailbox . Select User Mailbox . Click on Next . Select New User . Click on Next . Provide User Information: Provide the Full name , we recommend using: Mail Round Trip Monitoring Receive mailbox . Provide the User logon name , we recommend: mailroundtrip . Provide a password. (Note: this password is not used anywhere so any random password will suffice) Optionally select the OU were you want this account to be created. Click on Next to continue. Specify mailbox settings: Optionally select the mailbox database, were you want the mailbox to reside. Click on Next to continue. Set archive settings: Select Don't create an archive . This mailbox does not contain any email. Click on Next to continue. Review settings: Click on New to create the new mailbox. Click on Finish . Create a return mail contact Create a mail contact containing the mail round trip return address. Open Recipient configuration . Right click on Mail contact . Select New Mail Contact . Create a new mail contact: Select New Contact . Click on Next . Provide a Full name , we suggest: Mail Round Trip Monitoring Return Address . Enter an alias, we suggest: mailroundtripreturn . Click on the Edit... button: Enter the following return email address in the E-mail address field: mailroundtrip@mrt.oversig.ht . Click on Next : Review settings. Click on New to create the mail contact: Verify that the mail contact was created successfully: Click on Finish . Modify the return contact Right click on on the previously created mail contact. Select Properties from the dropdown menu. Open the General tab: Enable Hide from exchange address lists . Click on OK to close the dialog. Modify the receive mailbox user Forward all mail to the \"Mail Round Trip Monitoring Mailbox\" from the previously created \"Mail Round Trip Monitoring Return Address\" contact. Right click on the previously created receive mailbox user. Select Properties from the drop down menu: Open the General tab: Enable Hide from exchange address lists . Open the Mail Flow Settings tab. Double click on Delivery Options : Select the Forward to selection box. Click on Browse : Select the \"Mail Round Trip Monitoring Return Address\" contact. Click on OK . Click on OK to close the previous screen.","title":"Microsoft Exchange 2010"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/#microsoft-exchange-2010","text":"Start the Microsoft \"Exchange Management Console\" on a server which also contains the Exchange 2010 management tools. This console can usually be found on the Microsoft Exchange or SBS server.","title":"Microsoft Exchange 2010"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/#create-a-new-mailbox","text":"Right click on Mailbox under Recipient Configuration : Select New Mailbox . Select User Mailbox . Click on Next . Select New User . Click on Next . Provide User Information: Provide the Full name , we recommend using: Mail Round Trip Monitoring Receive mailbox . Provide the User logon name , we recommend: mailroundtrip . Provide a password. (Note: this password is not used anywhere so any random password will suffice) Optionally select the OU were you want this account to be created. Click on Next to continue. Specify mailbox settings: Optionally select the mailbox database, were you want the mailbox to reside. Click on Next to continue. Set archive settings: Select Don't create an archive . This mailbox does not contain any email. Click on Next to continue. Review settings: Click on New to create the new mailbox. Click on Finish .","title":"Create a new mailbox"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/#create-a-return-mail-contact","text":"Create a mail contact containing the mail round trip return address. Open Recipient configuration . Right click on Mail contact . Select New Mail Contact . Create a new mail contact: Select New Contact . Click on Next . Provide a Full name , we suggest: Mail Round Trip Monitoring Return Address . Enter an alias, we suggest: mailroundtripreturn . Click on the Edit... button: Enter the following return email address in the E-mail address field: mailroundtrip@mrt.oversig.ht . Click on Next : Review settings. Click on New to create the mail contact: Verify that the mail contact was created successfully: Click on Finish .","title":"Create a return mail contact"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/#modify-the-return-contact","text":"Right click on on the previously created mail contact. Select Properties from the dropdown menu. Open the General tab: Enable Hide from exchange address lists . Click on OK to close the dialog.","title":"Modify the return contact"},{"location":"documentation/collectors/probes/smtp_mailrountrip_exchange2010/#modify-the-receive-mailbox-user","text":"Forward all mail to the \"Mail Round Trip Monitoring Mailbox\" from the previously created \"Mail Round Trip Monitoring Return Address\" contact. Right click on the previously created receive mailbox user. Select Properties from the drop down menu: Open the General tab: Enable Hide from exchange address lists . Open the Mail Flow Settings tab. Double click on Delivery Options : Select the Forward to selection box. Click on Browse : Select the \"Mail Round Trip Monitoring Return Address\" contact. Click on OK . Click on OK to close the previous screen.","title":"Modify the receive mailbox user"},{"location":"documentation/collectors/probes/snmp/","text":"SNMP Features \"Simple Network Management Protocol is an Internet Standard protocol for collecting and organizing information about managed devices on IP networks and for modifying that information to change device behavior.\" - wikipedia The SNMP probe tries to discover which MIB's are accessible and will configure itself to monitor these without additional configuration. Configuration Probe configuration Adding a host requires access to SNMP from the InfraSonar appliance running the SNMP probe and a community string. InfraSonar supports SNMPv1, SNMPv2c, and SNMPv3. Note SNMPv3 requires a credentials file as described here . Enable SNMP The SNMP probe requires SNMP to be configured on devices you wish to monitor. The next chapter describes how to configure SNMP on some standard devices. Debian based systems The first step is to install snmpd using apt : sudo apt install snmpd The next step is configuring snmpd . For this we need to edit /etc/snmp/snmpd.conf . Prior to editing this file we suggest making a backup of the existing configuration. This can be done by using the following command: cp /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bak Example snmpd.conf file: ############# InfraSonar SNMP Config ################## com2sec readonly default infrasonar group InfraSonarGroup v2c readonly view all included .1 access InfraSonarGroup \"\" any noauth exact all none none syslocation planetearth syscontact support@infrasonar.com Note The community string in the above example is set to infrasonar . Also note the settings for syslocation and syscontact . Restart the SNMP daemon to make the configuration effective: sudo service snmpd restart Verify that the service is running correctly: sudo service snmpd status This should result in a similar output like this: \u25cf snmpd.service - Simple Network Management Protocol ( SNMP ) Daemon. Loaded: loaded ( /lib/systemd/system/snmpd.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Thu 2021 -07-29 10 :37:24 CEST ; 1s ago Process: 14393 ExecStartPre = /bin/mkdir -p /var/run/agentx ( code = exited, status = 0 /SUCCESS ) Main PID: 14394 ( snmpd ) Tasks: 1 ( limit: 2358 ) Memory: 5 .0M CGroup: /system.slice/snmpd.service \u2514\u250014394 /usr/sbin/snmpd -Lsd -Lf /dev/null -u Debian-snmp -g Debian-snmp -I -smux mteTrigger mteTriggerConf -f -p /run/snmpd.pid Jul 29 10 :37:24 donkey-kong systemd [ 1 ] : Starting Simple Network Management Protocol ( SNMP ) Daemon.... Jul 29 10 :37:24 donkey-kong systemd [ 1 ] : Started Simple Network Management Protocol ( SNMP ) Daemon.. Jul 29 10 :37:24 donkey-kong snmpd [ 14394 ] : NET-SNMP version 5 .7.3 CentOS You can find a guide on how to install SNMP on CentOS here . HP Proliant hosts The HP agents can be installed and queried on HP Proliant hosts using SNMP. This section describes the setup. Add the following section to the repository file: /etc/yum.repos.d/hp.repo : [HP-Proliant] name=HP Proliant Red Hat Enterprise Linux $releasever - $basearch #baseurl=ftp://ftp.redhat.com/pub/redhat/linux/enterprise/$releasever/en/os/$basearch/Debuginfo/ baseurl=http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/RedHat/$releasever/$basearch/current/ #http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/RedHat/5/x86_64/current/ enabled=1 gpgcheck=0 gpgkey=http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/GPG-KEY-ProLiantSupportPack Install the HP agents: yum install hp-snmp-agents hp-health You will get additional questions about the desired configuration. This will update the snmpd.conf file. Start the agents: /sbin/hpsnmpconfig /etc/init.d/hp-snmp-agents start /etc/init.d/snmpd restart VWware Virtual center appliance The VMware virtual center appliance can be configured to be monitored using SNMP. Log in to the webinterface (https://ip:5480) using a root account. Enable shell access: access --> shell / ssh . Log in using SSH and execute the following commands: snmp.set --port 161 snmp.set --communities public snmp.enable Verify if the snmpd service is started: shell.set --enabled.true shell service snmpd status Add the SNMP-probe in InfraSonar. ESXi For the monitoring appliance to query the ESXi host, the following modifications must be made to the /etc/snmp/snmpd.conf file. This can be achieved by logging on to the ESXi hosts using SSH. rocommunity <RO_Community_String> trapcommunity <TRAPS_Community_String> trapsink <IP_ADDRESS_Monitoring_Appliance> public syscontact <sysadmin_contact_email_address> syslocation <system_location> Where: Variable Description <RO_Community_String> Read only community string. This string should be added to the host config. <TRAPS_Community_String> Enter a trap community string. InfraSonar does not use this. <IP_ADDRESS_Monitoring_Appliance> IP address of the monitoring appliance. <sysadmin_contact_email_address> optional Email address of the sysadmin. <system_location> optional Note describing the physical location of the device. For the modifications to take effect, the SNMPD must be restarted using the following command: /etc/init.d/snmpd restart","title":"SNMP"},{"location":"documentation/collectors/probes/snmp/#snmp","text":"","title":" SNMP"},{"location":"documentation/collectors/probes/snmp/#features","text":"\"Simple Network Management Protocol is an Internet Standard protocol for collecting and organizing information about managed devices on IP networks and for modifying that information to change device behavior.\" - wikipedia The SNMP probe tries to discover which MIB's are accessible and will configure itself to monitor these without additional configuration.","title":"Features"},{"location":"documentation/collectors/probes/snmp/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/snmp/#probe-configuration","text":"Adding a host requires access to SNMP from the InfraSonar appliance running the SNMP probe and a community string. InfraSonar supports SNMPv1, SNMPv2c, and SNMPv3. Note SNMPv3 requires a credentials file as described here .","title":"Probe configuration"},{"location":"documentation/collectors/probes/snmp/#enable-snmp","text":"The SNMP probe requires SNMP to be configured on devices you wish to monitor. The next chapter describes how to configure SNMP on some standard devices.","title":"Enable SNMP"},{"location":"documentation/collectors/probes/snmp/#debian-based-systems","text":"The first step is to install snmpd using apt : sudo apt install snmpd The next step is configuring snmpd . For this we need to edit /etc/snmp/snmpd.conf . Prior to editing this file we suggest making a backup of the existing configuration. This can be done by using the following command: cp /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bak Example snmpd.conf file: ############# InfraSonar SNMP Config ################## com2sec readonly default infrasonar group InfraSonarGroup v2c readonly view all included .1 access InfraSonarGroup \"\" any noauth exact all none none syslocation planetearth syscontact support@infrasonar.com Note The community string in the above example is set to infrasonar . Also note the settings for syslocation and syscontact . Restart the SNMP daemon to make the configuration effective: sudo service snmpd restart Verify that the service is running correctly: sudo service snmpd status This should result in a similar output like this: \u25cf snmpd.service - Simple Network Management Protocol ( SNMP ) Daemon. Loaded: loaded ( /lib/systemd/system/snmpd.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Thu 2021 -07-29 10 :37:24 CEST ; 1s ago Process: 14393 ExecStartPre = /bin/mkdir -p /var/run/agentx ( code = exited, status = 0 /SUCCESS ) Main PID: 14394 ( snmpd ) Tasks: 1 ( limit: 2358 ) Memory: 5 .0M CGroup: /system.slice/snmpd.service \u2514\u250014394 /usr/sbin/snmpd -Lsd -Lf /dev/null -u Debian-snmp -g Debian-snmp -I -smux mteTrigger mteTriggerConf -f -p /run/snmpd.pid Jul 29 10 :37:24 donkey-kong systemd [ 1 ] : Starting Simple Network Management Protocol ( SNMP ) Daemon.... Jul 29 10 :37:24 donkey-kong systemd [ 1 ] : Started Simple Network Management Protocol ( SNMP ) Daemon.. Jul 29 10 :37:24 donkey-kong snmpd [ 14394 ] : NET-SNMP version 5 .7.3","title":"Debian based systems"},{"location":"documentation/collectors/probes/snmp/#centos","text":"You can find a guide on how to install SNMP on CentOS here .","title":"CentOS"},{"location":"documentation/collectors/probes/snmp/#hp-proliant-hosts","text":"The HP agents can be installed and queried on HP Proliant hosts using SNMP. This section describes the setup. Add the following section to the repository file: /etc/yum.repos.d/hp.repo : [HP-Proliant] name=HP Proliant Red Hat Enterprise Linux $releasever - $basearch #baseurl=ftp://ftp.redhat.com/pub/redhat/linux/enterprise/$releasever/en/os/$basearch/Debuginfo/ baseurl=http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/RedHat/$releasever/$basearch/current/ #http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/RedHat/5/x86_64/current/ enabled=1 gpgcheck=0 gpgkey=http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/GPG-KEY-ProLiantSupportPack Install the HP agents: yum install hp-snmp-agents hp-health You will get additional questions about the desired configuration. This will update the snmpd.conf file. Start the agents: /sbin/hpsnmpconfig /etc/init.d/hp-snmp-agents start /etc/init.d/snmpd restart","title":"HP Proliant hosts"},{"location":"documentation/collectors/probes/snmp/#vwware","text":"","title":"VWware"},{"location":"documentation/collectors/probes/snmp/#virtual-center-appliance","text":"The VMware virtual center appliance can be configured to be monitored using SNMP. Log in to the webinterface (https://ip:5480) using a root account. Enable shell access: access --> shell / ssh . Log in using SSH and execute the following commands: snmp.set --port 161 snmp.set --communities public snmp.enable Verify if the snmpd service is started: shell.set --enabled.true shell service snmpd status Add the SNMP-probe in InfraSonar.","title":"Virtual center appliance"},{"location":"documentation/collectors/probes/snmp/#esxi","text":"For the monitoring appliance to query the ESXi host, the following modifications must be made to the /etc/snmp/snmpd.conf file. This can be achieved by logging on to the ESXi hosts using SSH. rocommunity <RO_Community_String> trapcommunity <TRAPS_Community_String> trapsink <IP_ADDRESS_Monitoring_Appliance> public syscontact <sysadmin_contact_email_address> syslocation <system_location> Where: Variable Description <RO_Community_String> Read only community string. This string should be added to the host config. <TRAPS_Community_String> Enter a trap community string. InfraSonar does not use this. <IP_ADDRESS_Monitoring_Appliance> IP address of the monitoring appliance. <sysadmin_contact_email_address> optional Email address of the sysadmin. <system_location> optional Note describing the physical location of the device. For the modifications to take effect, the SNMPD must be restarted using the following command: /etc/init.d/snmpd restart","title":"ESXi"},{"location":"documentation/collectors/probes/tcp/","text":"TCP The TCP probe consists of two checks: Check TCP ports Check certificates Configuration Property Description Address The address that the probe should check. Certificate Ports List of ports to perform certificates check on. TCP Ports List of ports to perform a port check on. Ports Each port must be a numeric value between 1 and 65535, where ports are separated by a comma. Check specifics Check certificates Gathers certificates and ciphers present on the specified TCP port. Check TCP ports Check TCP ports allows for monitoring specific TCP port statuses. As the TCP probe uses NMAP at its core it can identify the same six ports states as nmap. Port state Description open An application is actively accepting TCP connections, UDP datagrams or SCTP associations on this port. closed A closed port is accessible (it receives and responds to Nmap probe packets), but there is no application listening on it. filtered Nmap cannot determine whether the port is open because packet filtering prevents its probes from reaching the port. The filtering could be from a dedicated firewall device, router rules, or host-based firewall software. unfiltered The unfiltered state means that a port is accessible, but Nmap is unable to determine whether it is open or closed. open|filtered Nmap places ports in this state when it is unable to determine whether a port is open or filtered. closed|filtered This state is used when Nmap is unable to determine whether a port is closed or filtered.","title":"TCP"},{"location":"documentation/collectors/probes/tcp/#tcp","text":"The TCP probe consists of two checks: Check TCP ports Check certificates","title":" TCP"},{"location":"documentation/collectors/probes/tcp/#configuration","text":"Property Description Address The address that the probe should check. Certificate Ports List of ports to perform certificates check on. TCP Ports List of ports to perform a port check on. Ports Each port must be a numeric value between 1 and 65535, where ports are separated by a comma.","title":"Configuration"},{"location":"documentation/collectors/probes/tcp/#check-specifics","text":"","title":"Check specifics"},{"location":"documentation/collectors/probes/tcp/#check-certificates","text":"Gathers certificates and ciphers present on the specified TCP port.","title":"Check certificates"},{"location":"documentation/collectors/probes/tcp/#check-tcp-ports","text":"Check TCP ports allows for monitoring specific TCP port statuses. As the TCP probe uses NMAP at its core it can identify the same six ports states as nmap. Port state Description open An application is actively accepting TCP connections, UDP datagrams or SCTP associations on this port. closed A closed port is accessible (it receives and responds to Nmap probe packets), but there is no application listening on it. filtered Nmap cannot determine whether the port is open because packet filtering prevents its probes from reaching the port. The filtering could be from a dedicated firewall device, router rules, or host-based firewall software. unfiltered The unfiltered state means that a port is accessible, but Nmap is unable to determine whether it is open or closed. open|filtered Nmap places ports in this state when it is unable to determine whether a port is open or filtered. closed|filtered This state is used when Nmap is unable to determine whether a port is closed or filtered.","title":"Check TCP ports"},{"location":"documentation/collectors/probes/vmware/","text":"VMware Features The VMware-probe uses the VMware API to monitor VMware ESX and VMware Virtual center hosts. Configuration Credentials The VMware API requires a root account to access monitoring data on VMware ESX hosts and an administrative account for monitoring data on VMware Virtual center hosts. When your VMware implementation uses multiple ESX hosts using the same root password, it can be beneficial to create a defaultCredentials file containing the root account and set up a device-specific credentials file for the virtual center hosts. Operational Known issues Cached API response Sometimes InfraSonar reports different values than VMware consoles. The cause for this is that the VMware API sends cached data as a response to queries. The solution to mitigate this situation is to clean the VMware cache using the following commands on the affected ESX host: localcli hardware ipmi sel clear etc/init.d/sfcbd-watchdog restart etc/init.d/hostd restart etc/init.d/vpxa restart","title":"VMware"},{"location":"documentation/collectors/probes/vmware/#vmware","text":"","title":"VMware"},{"location":"documentation/collectors/probes/vmware/#features","text":"The VMware-probe uses the VMware API to monitor VMware ESX and VMware Virtual center hosts.","title":"Features"},{"location":"documentation/collectors/probes/vmware/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/vmware/#credentials","text":"The VMware API requires a root account to access monitoring data on VMware ESX hosts and an administrative account for monitoring data on VMware Virtual center hosts. When your VMware implementation uses multiple ESX hosts using the same root password, it can be beneficial to create a defaultCredentials file containing the root account and set up a device-specific credentials file for the virtual center hosts.","title":"Credentials"},{"location":"documentation/collectors/probes/vmware/#operational","text":"","title":"Operational"},{"location":"documentation/collectors/probes/vmware/#known-issues","text":"","title":"Known issues"},{"location":"documentation/collectors/probes/vmware/#cached-api-response","text":"Sometimes InfraSonar reports different values than VMware consoles. The cause for this is that the VMware API sends cached data as a response to queries. The solution to mitigate this situation is to clean the VMware cache using the following commands on the affected ESX host: localcli hardware ipmi sel clear etc/init.d/sfcbd-watchdog restart etc/init.d/hostd restart etc/init.d/vpxa restart","title":"Cached API response"},{"location":"documentation/collectors/probes/wmi-troubleshooting/","text":"WMI troubleshooting Manual query You can test WMI access from a Windows host or the Linux appliance. Linux appliance WMI command line query for the Linux appliance or any host running Docker. docker run --rm -it \\ --network host \\ ghcr.io/infrasonar/wmiprobe \\ pywmitool \\ -a <computername or IP> \\ -u userid> \\ -d <domain> \\ -q \"SELECT Name FROM Win32_OperatingSystem\" Windows host You can test if WMI is working correctly on a Windows host by using the wbemtest command: wbemtest namespace \\\\<computername or IP>\\root\\cimv2 query select name from win32_computersystem Note Make sure to replace <domain> , <userid> , and <computername or IP> with the correct values. WMI-probe - Known issues Access denied There are various possible solutions for an access denied error. winrm quickconfig Run the following command to verify the configuration: command winrm quickconfig This should result in an output similar to the example output below: output WinRM service is already running on this machine. WinRM is not set up to allow remote access to this machine for management. The following changes must be made: Configure LocalAccountTokenFilterPolicy to grant administrative rights remotely to local users. Make these changes [y/n]? y WinRM has been updated for remote management. Configured LocalAccountTokenFilterPolicy to grant administrative rights remotely to local users. Verify Security Policy settings In Security Settings --> Local Policies --> Security Options check these settings: Network access Do not allow storage of passwords and credentials for network authentication, must be DISABLED . Sharing and security model for local accounts must be set to CLASSIC . Typically we see these settings configured via Group Policy for standalone systems. These are part of the Local Security Policy. LAN Manager authentication level LAN Manager authentication level can cause the query error: NTSTATUS: NT_STATUS_ACCESS_DENIED : Start the group policy editor gpedit.msc . Browse to: Computer Configuration Windows Settings Security Settings Local Policies Security Options Verify if Network security: LAN Manager authentication level is set to: Send LM & NTLM - use NTLMv2 session security if negotiated . WMI error 0x80041010 Performance counter based checks such as: base.cpu base.uptime base.volume-io Might give the following WMI Query error: WMI Query error occured, error message: NTSTATUS: NT code 0x80041010 - NT code 0x80041010 To resolve this error, use the following command on the troubled host: %windir%\\system32\\wbem\\wmiadap.exe /f Fix broken WMI setup Rebuild the WMI repository On Windows XP and above you can use the following command to rebuild the WMI repository: rundll32 wbemupgd, UpgradeRepository Reinstall WMI in the registry The following commands will reinstall WMI in the registry: winmgmt /clearadap winmgmt /kill winmgmt /unregserver winmgmt /regserver winmgmt /resyncperf Broken performance counters To rebuild all Performance counters including extensible and third-party counters, enter the following commands in an Administrative command prompt. Press ENTER after each command. Rebuilding the counters: cd c:\\windows\\system32 lodctr /R cd c:\\windows\\sysWOW64 lodctr /R Resyncing the counters with Windows Management Instrumentation (WMI): WINMGMT.EXE /RESYNCPERF Stop and restart the Performance Logs and Alerts service. Stop and restart the Windows Management Instrumentation service. Disk performance data missing Enable Disk performance counters using the following command: DISKPERF -Y You will receive the following message: Disk performance counters on this system are now set to start at boot. This change will take effect after the system is rebooted. See also: kb102020 . Access denied on SELECT * FROM Win32_Service Run the following command in an administrative prompt: sc sdset SCMANAGER D:(A;;CCLCRPRC;;;AU)(A;;CCLCRPWPRC;;;SY)(A;;KA;;;BA)S:(AU;FA;KA;;;WD)(AU;OIIOFA;GA;;;WD) Reverse DNS WMI can fail when querying on an IP address, if reverse DNS is not ok. Netlogon service Verify that the Netlogon service is running and set to start automatically.","title":"WMI troubleshooting"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#wmi-troubleshooting","text":"","title":"WMI troubleshooting"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#manual-query","text":"You can test WMI access from a Windows host or the Linux appliance.","title":"Manual query"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#linux-appliance","text":"WMI command line query for the Linux appliance or any host running Docker. docker run --rm -it \\ --network host \\ ghcr.io/infrasonar/wmiprobe \\ pywmitool \\ -a <computername or IP> \\ -u userid> \\ -d <domain> \\ -q \"SELECT Name FROM Win32_OperatingSystem\"","title":"Linux appliance"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#windows-host","text":"You can test if WMI is working correctly on a Windows host by using the wbemtest command: wbemtest namespace \\\\<computername or IP>\\root\\cimv2 query select name from win32_computersystem Note Make sure to replace <domain> , <userid> , and <computername or IP> with the correct values.","title":"Windows host"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#wmi-probe-known-issues","text":"","title":"WMI-probe - Known issues"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#access-denied","text":"There are various possible solutions for an access denied error.","title":"Access denied"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#winrm-quickconfig","text":"Run the following command to verify the configuration: command winrm quickconfig This should result in an output similar to the example output below: output WinRM service is already running on this machine. WinRM is not set up to allow remote access to this machine for management. The following changes must be made: Configure LocalAccountTokenFilterPolicy to grant administrative rights remotely to local users. Make these changes [y/n]? y WinRM has been updated for remote management. Configured LocalAccountTokenFilterPolicy to grant administrative rights remotely to local users.","title":"winrm quickconfig"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#verify-security-policy-settings","text":"In Security Settings --> Local Policies --> Security Options check these settings: Network access Do not allow storage of passwords and credentials for network authentication, must be DISABLED . Sharing and security model for local accounts must be set to CLASSIC . Typically we see these settings configured via Group Policy for standalone systems. These are part of the Local Security Policy.","title":"Verify Security Policy settings"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#lan-manager-authentication-level","text":"LAN Manager authentication level can cause the query error: NTSTATUS: NT_STATUS_ACCESS_DENIED : Start the group policy editor gpedit.msc . Browse to: Computer Configuration Windows Settings Security Settings Local Policies Security Options Verify if Network security: LAN Manager authentication level is set to: Send LM & NTLM - use NTLMv2 session security if negotiated .","title":"LAN Manager authentication level"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#wmi-error-0x80041010","text":"Performance counter based checks such as: base.cpu base.uptime base.volume-io Might give the following WMI Query error: WMI Query error occured, error message: NTSTATUS: NT code 0x80041010 - NT code 0x80041010 To resolve this error, use the following command on the troubled host: %windir%\\system32\\wbem\\wmiadap.exe /f","title":"WMI error 0x80041010"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#fix-broken-wmi-setup","text":"","title":"Fix broken WMI setup"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#rebuild-the-wmi-repository","text":"On Windows XP and above you can use the following command to rebuild the WMI repository: rundll32 wbemupgd, UpgradeRepository","title":"Rebuild the WMI repository"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#reinstall-wmi-in-the-registry","text":"The following commands will reinstall WMI in the registry: winmgmt /clearadap winmgmt /kill winmgmt /unregserver winmgmt /regserver winmgmt /resyncperf","title":"Reinstall WMI in the registry"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#broken-performance-counters","text":"To rebuild all Performance counters including extensible and third-party counters, enter the following commands in an Administrative command prompt. Press ENTER after each command. Rebuilding the counters: cd c:\\windows\\system32 lodctr /R cd c:\\windows\\sysWOW64 lodctr /R Resyncing the counters with Windows Management Instrumentation (WMI): WINMGMT.EXE /RESYNCPERF Stop and restart the Performance Logs and Alerts service. Stop and restart the Windows Management Instrumentation service.","title":"Broken performance counters"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#disk-performance-data-missing","text":"Enable Disk performance counters using the following command: DISKPERF -Y You will receive the following message: Disk performance counters on this system are now set to start at boot. This change will take effect after the system is rebooted. See also: kb102020 .","title":"Disk performance data missing"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#access-denied-on-select-from-win32_service","text":"Run the following command in an administrative prompt: sc sdset SCMANAGER D:(A;;CCLCRPRC;;;AU)(A;;CCLCRPWPRC;;;SY)(A;;KA;;;BA)S:(AU;FA;KA;;;WD)(AU;OIIOFA;GA;;;WD)","title":"Access denied on SELECT * FROM Win32_Service"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#reverse-dns","text":"WMI can fail when querying on an IP address, if reverse DNS is not ok.","title":"Reverse DNS"},{"location":"documentation/collectors/probes/wmi-troubleshooting/#netlogon-service","text":"Verify that the Netlogon service is running and set to start automatically.","title":"Netlogon service"},{"location":"documentation/collectors/probes/wmi/","text":"Microsoft WMI Features InfraSonar can use the WMI-probe to monitor Microsoft Windows hosts without installing an agent on them. Monitoring in this scenario is performed by periodically querying the Windows host using WQL queries. Version 2 of the InfraSonar WMI-probe is released as open source on GitHub and uses the aiowmi library. Prerequisites The WMI-probe requires a service account with domain admin rights or a local administrative to perform the WMI queries. While it is possible to configure a regular user with additional DCOM permissions we feel this provides a false sense of security as the DCOM privileges required are quite broad. Configuration Probe Credentials Credentials for the WMI probe are stored in a credential ini file, see the credentials section in our documentation for detailed information on how to use the credentials file. Monitored asset The WMI-probe requires no configuration on the monitored asset, other then access via the WMI protocol . Firewall requirements Local firewall If the Microsoft Windows local firewall is enabled, you will need to allow \"Windows Management Instrumentation\" traffic. To enable or disable WMI traffic using the firewall UI In the Control Panel, click on Security and then click on Windows Firewall . Click on Change Settings and then click on the Exceptions tab. In the Exceptions window, select the check box for Windows Management Instrumentation (WMI) to enable WMI traffic through the firewall. To disable WMI traffic, clear the check box. Tip Windows 11 has a special firewall that only allows access from hosts inside the same local subnet. To enable WMI traffic at command prompt using WMI rule group We can easily allow remote WMI using the following set of netsh commands: netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (WMI-In)\" new enable=yes netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (DCOM-In)\" new enable=yes netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (ASync-In)\" new enable=yes Corporate firewall When monitoring hosts which are located behind a firewall, for example hosts in a DMZ, the firewall must be configured to allow WMI. To comply with Internet Assigned Numbers Authority (IANA) recommendations, Microsoft has increased the dynamic client port range for outgoing connections in Windows Vista and Windows Server 2008. The new default start port is 49152, and the new default end port is 65535. This is a change from the configuration of earlier versions of Windows that used a default port range of 1025 through 5000. Windows server below 2008 , access for the RPC Endpoint Mapper (135) as well as WMI (variable port range, by default 1024-5000) should be granted. Windows server 2008 and higher versions . access for the RPC Endpoint Mapper (135) as well as WMI (variable port range, by default 49152-65535) should be granted. You can lookup the dynamic port range actually used by the Windows host using these commands: netsh int ipv4 show dynamicport tcp netsh int ipv4 show dynamicport udp netsh int ipv6 show dynamicport tcp netsh int ipv6 show dynamicport udp Note The range is set separately for each transport (TCP or UDP). The port range is now truly a range that has a starting point and an ending point. Microsoft customers who deploy servers that are running Windows Server 2008 may have problems that affect RPC communication between servers if firewalls are used on the internal network. In these situations, we recommend that you reconfigure the firewalls to allow traffic between servers in the dynamic port range of 49152 through 65535. This range is in addition to well-known ports that are used by services and applications. Or, the port range that is used by the servers can be modified on each server. You adjust this range by using the netsh command, as follows: netsh int set dynamic start= number num= range. This command sets the dynamic port range for TCP. The start port is number, and the total number of ports is range. FAQ How to monitor a Microsoft ISA Server? Monitoring a Microsoft ISA server requires the following rules on the ISA server: Allow traffic from the monitoring appliance to localhost for all protocols. Within this rule, filtering \"Enforce strict RPC compliance\" must be disabled. How to use a local account? None domain members This is only required for hosts that are not a member of your Windows domain or when using a local account is required due to other circumstances. By default only the true local administrator account can be used for remote WMI queries. You can use the following steps to create a local account: Create a local account and ensure the account is member of the group Remote Management Users . Authorize CIMV2 access: Open the WMI management console wmimgmt.msc . Right click WMI Control (Local) and select properties from the menu. Select the security tab. Browse to Root\\CIMV2 . Click the button labeled security . Authorize COM access: Start the component Services console. Browse in the left pane to: Component Services \\ Computers . Right click My Computer and select **properties from the menu. Open the tab COM Security . Click Edit Limits in the Access Permissions pane. Add the account used for monitoring using the Add button. Ensure the account has Remote Access permissions. Close the access permission screen by clicking OK . Click on Edit Limits in the Launch and Activation Permissions pane. Add the account used for monitoring using the Add button. Ensure to allow: Local Launch , Remote Launch , Local Activation and Remote Activation . Close the windows by clicking OK twice and exit the Component Services console. How can I troubleshoot WMI? See our troubleshooting section for known issues and ways to troubleshot WMI queries.","title":"Microsoft WMI"},{"location":"documentation/collectors/probes/wmi/#microsoft-wmi","text":"","title":" Microsoft WMI"},{"location":"documentation/collectors/probes/wmi/#features","text":"InfraSonar can use the WMI-probe to monitor Microsoft Windows hosts without installing an agent on them. Monitoring in this scenario is performed by periodically querying the Windows host using WQL queries. Version 2 of the InfraSonar WMI-probe is released as open source on GitHub and uses the aiowmi library.","title":"Features"},{"location":"documentation/collectors/probes/wmi/#prerequisites","text":"The WMI-probe requires a service account with domain admin rights or a local administrative to perform the WMI queries. While it is possible to configure a regular user with additional DCOM permissions we feel this provides a false sense of security as the DCOM privileges required are quite broad.","title":"Prerequisites"},{"location":"documentation/collectors/probes/wmi/#configuration","text":"","title":"Configuration"},{"location":"documentation/collectors/probes/wmi/#probe","text":"","title":"Probe"},{"location":"documentation/collectors/probes/wmi/#credentials","text":"Credentials for the WMI probe are stored in a credential ini file, see the credentials section in our documentation for detailed information on how to use the credentials file.","title":"Credentials"},{"location":"documentation/collectors/probes/wmi/#monitored-asset","text":"The WMI-probe requires no configuration on the monitored asset, other then access via the WMI protocol .","title":"Monitored asset"},{"location":"documentation/collectors/probes/wmi/#firewall-requirements","text":"","title":"Firewall requirements"},{"location":"documentation/collectors/probes/wmi/#local-firewall","text":"If the Microsoft Windows local firewall is enabled, you will need to allow \"Windows Management Instrumentation\" traffic. To enable or disable WMI traffic using the firewall UI In the Control Panel, click on Security and then click on Windows Firewall . Click on Change Settings and then click on the Exceptions tab. In the Exceptions window, select the check box for Windows Management Instrumentation (WMI) to enable WMI traffic through the firewall. To disable WMI traffic, clear the check box. Tip Windows 11 has a special firewall that only allows access from hosts inside the same local subnet. To enable WMI traffic at command prompt using WMI rule group We can easily allow remote WMI using the following set of netsh commands: netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (WMI-In)\" new enable=yes netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (DCOM-In)\" new enable=yes netsh advfirewall firewall set rule group=\"Windows Management Instrumentation (ASync-In)\" new enable=yes","title":"Local firewall"},{"location":"documentation/collectors/probes/wmi/#corporate-firewall","text":"When monitoring hosts which are located behind a firewall, for example hosts in a DMZ, the firewall must be configured to allow WMI. To comply with Internet Assigned Numbers Authority (IANA) recommendations, Microsoft has increased the dynamic client port range for outgoing connections in Windows Vista and Windows Server 2008. The new default start port is 49152, and the new default end port is 65535. This is a change from the configuration of earlier versions of Windows that used a default port range of 1025 through 5000. Windows server below 2008 , access for the RPC Endpoint Mapper (135) as well as WMI (variable port range, by default 1024-5000) should be granted. Windows server 2008 and higher versions . access for the RPC Endpoint Mapper (135) as well as WMI (variable port range, by default 49152-65535) should be granted. You can lookup the dynamic port range actually used by the Windows host using these commands: netsh int ipv4 show dynamicport tcp netsh int ipv4 show dynamicport udp netsh int ipv6 show dynamicport tcp netsh int ipv6 show dynamicport udp Note The range is set separately for each transport (TCP or UDP). The port range is now truly a range that has a starting point and an ending point. Microsoft customers who deploy servers that are running Windows Server 2008 may have problems that affect RPC communication between servers if firewalls are used on the internal network. In these situations, we recommend that you reconfigure the firewalls to allow traffic between servers in the dynamic port range of 49152 through 65535. This range is in addition to well-known ports that are used by services and applications. Or, the port range that is used by the servers can be modified on each server. You adjust this range by using the netsh command, as follows: netsh int set dynamic start= number num= range. This command sets the dynamic port range for TCP. The start port is number, and the total number of ports is range.","title":"Corporate firewall"},{"location":"documentation/collectors/probes/wmi/#faq","text":"","title":"FAQ"},{"location":"documentation/collectors/probes/wmi/#how-to-monitor-a-microsoft-isa-server","text":"Monitoring a Microsoft ISA server requires the following rules on the ISA server: Allow traffic from the monitoring appliance to localhost for all protocols. Within this rule, filtering \"Enforce strict RPC compliance\" must be disabled.","title":"How to monitor a Microsoft ISA Server?"},{"location":"documentation/collectors/probes/wmi/#how-to-use-a-local-account","text":"None domain members This is only required for hosts that are not a member of your Windows domain or when using a local account is required due to other circumstances. By default only the true local administrator account can be used for remote WMI queries. You can use the following steps to create a local account: Create a local account and ensure the account is member of the group Remote Management Users . Authorize CIMV2 access: Open the WMI management console wmimgmt.msc . Right click WMI Control (Local) and select properties from the menu. Select the security tab. Browse to Root\\CIMV2 . Click the button labeled security . Authorize COM access: Start the component Services console. Browse in the left pane to: Component Services \\ Computers . Right click My Computer and select **properties from the menu. Open the tab COM Security . Click Edit Limits in the Access Permissions pane. Add the account used for monitoring using the Add button. Ensure the account has Remote Access permissions. Close the access permission screen by clicking OK . Click on Edit Limits in the Launch and Activation Permissions pane. Add the account used for monitoring using the Add button. Ensure to allow: Local Launch , Remote Launch , Local Activation and Remote Activation . Close the windows by clicking OK twice and exit the Component Services console.","title":"How to use a local account?"},{"location":"documentation/collectors/probes/wmi/#how-can-i-troubleshoot-wmi","text":"See our troubleshooting section for known issues and ways to troubleshot WMI queries.","title":"How can I troubleshoot WMI?"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/","text":"InfraSonar Appliance Getting started We strongly advise to set up a dedicated (virtual) Linux appliance for InfraSonar. This appliance can be set up manually using this guide or by downloading our ready-to-run OVA (Open Virtual Appliance) here . Initialization Initializing the InfraSonar appliances consists of three steps: Change the default sysadmin password. ( 0versight! ) Configure the network stack. Set the environment variables in the compose file. All these steps can be performed via an SSH shell and a text editor such as Nano . Remote management InfraSonar runs in Docker containers on Linux. Access is possible through the console in your virtualization solution. But a more straightforward approach is to use SSH . SSH access Modern desktop operating systems have the ssh command as part of their terminal. Alternatively, you can download and use PuTTY . SSH access is granted to the sysadmin user. Nano basics The InfraSonar appliance configuration requires you to edit files using SSH access. The appliance includes the main text editors of vi and nano . Since Nano is easier to use, we outline its essential functions here. In this example, we create a defaultCredentials.ini file for the WMI-probe . See the credentials section for more in-depth information regarding credential files. The easiest way to use Nano, is to open the file you want to edit or create directly using Nano, like this: sudo nano /etc/infrasonar/config/wmiprobe/defaultCredentials.ini Note We assume you are logged on to the appliance using SSH. This command will launch the Nano editor, where you can immediately make changes to the file: Nano screenshot When your edits are done, exit using Ctrl + X . Nano now prompts if you want to Save modified buffers . If you want to save your edits press Y , followed by an Enter to confirm the filename. Press N if you want to discard your edits or Ctrl + C if you want to continue editing. Change password Change the sysadmin password and keep it safe. Login to the appliance using SSH or via virtual machine console and use the passwd command to set the password. $ passwd Changing password for sysadmin. Current password: New password: Retype new password: passwd: password updated successfully Network configuration The InfraSonar appliance ova uses DHCP by default. You can change this to a static IP by editing the file /etc/netplan/00-installer-config.yaml . Note This config file is a YAML file and as such proper indentation is crucial. DHCP configuration Example DHCP configuration (default): /etc/netplan/00-installer-config.yaml network : ethernets : ens160 : dhcp4 : true version : 2 Static IP config Example static IP configuration: /etc/netplan/00-installer-config.yaml network : ethernets : ens160 : addresses : [ 192.168.1.3/24 ] gateway4 : 192.168.1.1 nameservers : addresses : [ 192.168.1.10 , 192.168.1.11 ] version : 2 Apply netplan Apply the netplan configuration using the following command: $ sudo netplan apply Starting InfraSonar For each InfraSonar appliance, the TOKEN must be set in the /etc/infrasonar/docker-compose.yml file. See our token documentation on how to retrieve a token. When a token set, you can start the appliance using the following docker compose command: docker compose -f /etc/infrasonar/docker-compose.yml pull docker compose -f /etc/infrasonar/docker-compose.yml up -d docker-compose.yml details Detailed documentation about the docker-compose.yml file in use by InfraSonar can be found here . When the Docker environment is up and running, you should see the Agent-core as a host in your environment. Contact InfraSonar support if you require any assistance. Monitor the appliance Since InfraSonar is a monitoring platform, the first thing to do is monitor the appliance using the SNMP-probe. TODO","title":"Deployment"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#infrasonar-appliance","text":"","title":"InfraSonar Appliance"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#getting-started","text":"We strongly advise to set up a dedicated (virtual) Linux appliance for InfraSonar. This appliance can be set up manually using this guide or by downloading our ready-to-run OVA (Open Virtual Appliance) here .","title":"Getting started"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#initialization","text":"Initializing the InfraSonar appliances consists of three steps: Change the default sysadmin password. ( 0versight! ) Configure the network stack. Set the environment variables in the compose file. All these steps can be performed via an SSH shell and a text editor such as Nano .","title":"Initialization"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#remote-management","text":"InfraSonar runs in Docker containers on Linux. Access is possible through the console in your virtualization solution. But a more straightforward approach is to use SSH .","title":"Remote management"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#ssh-access","text":"Modern desktop operating systems have the ssh command as part of their terminal. Alternatively, you can download and use PuTTY . SSH access is granted to the sysadmin user.","title":"SSH access"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#nano-basics","text":"The InfraSonar appliance configuration requires you to edit files using SSH access. The appliance includes the main text editors of vi and nano . Since Nano is easier to use, we outline its essential functions here. In this example, we create a defaultCredentials.ini file for the WMI-probe . See the credentials section for more in-depth information regarding credential files. The easiest way to use Nano, is to open the file you want to edit or create directly using Nano, like this: sudo nano /etc/infrasonar/config/wmiprobe/defaultCredentials.ini Note We assume you are logged on to the appliance using SSH. This command will launch the Nano editor, where you can immediately make changes to the file: Nano screenshot When your edits are done, exit using Ctrl + X . Nano now prompts if you want to Save modified buffers . If you want to save your edits press Y , followed by an Enter to confirm the filename. Press N if you want to discard your edits or Ctrl + C if you want to continue editing.","title":"Nano basics"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#change-password","text":"Change the sysadmin password and keep it safe. Login to the appliance using SSH or via virtual machine console and use the passwd command to set the password. $ passwd Changing password for sysadmin. Current password: New password: Retype new password: passwd: password updated successfully","title":"Change password"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#network-configuration","text":"The InfraSonar appliance ova uses DHCP by default. You can change this to a static IP by editing the file /etc/netplan/00-installer-config.yaml . Note This config file is a YAML file and as such proper indentation is crucial. DHCP configuration Example DHCP configuration (default): /etc/netplan/00-installer-config.yaml network : ethernets : ens160 : dhcp4 : true version : 2 Static IP config Example static IP configuration: /etc/netplan/00-installer-config.yaml network : ethernets : ens160 : addresses : [ 192.168.1.3/24 ] gateway4 : 192.168.1.1 nameservers : addresses : [ 192.168.1.10 , 192.168.1.11 ] version : 2 Apply netplan Apply the netplan configuration using the following command: $ sudo netplan apply","title":"Network configuration"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#starting-infrasonar","text":"For each InfraSonar appliance, the TOKEN must be set in the /etc/infrasonar/docker-compose.yml file. See our token documentation on how to retrieve a token. When a token set, you can start the appliance using the following docker compose command: docker compose -f /etc/infrasonar/docker-compose.yml pull docker compose -f /etc/infrasonar/docker-compose.yml up -d docker-compose.yml details Detailed documentation about the docker-compose.yml file in use by InfraSonar can be found here . When the Docker environment is up and running, you should see the Agent-core as a host in your environment. Contact InfraSonar support if you require any assistance.","title":"Starting InfraSonar"},{"location":"documentation/collectors/probes/appliance/appliance_deployment/#monitor-the-appliance","text":"Since InfraSonar is a monitoring platform, the first thing to do is monitor the appliance using the SNMP-probe. TODO","title":"Monitor the appliance"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/","text":"Docker InfraSonar probes and the InfraSonar Agent-core are distributed using Docker containers. This section outlines this docker-compose setup. Data location We opt to store all InfraSonar related data and configuration in one directory, preferably in /etc/infrasonar . Docker compose file The docker-compose file below can be used to deploy all currently available probes and an Agent-core. /etc/infrasonar/docker-compose.yml x-infrasonar-template : &infrasonar network_mode : host restart : always logging : options : max-size : 5m volumes : - ./data:/data/ services : agentcore : << : *infrasonar image : ghcr.io/infrasonar/agentcore environment : TOKEN : \"<<agentcore-token>>\" pingprobe : << : *infrasonar image : ghcr.io/infrasonar/ping-probe httpprobe : << : *infrasonar image : ghcr.io/infrasonar/httpprobe dnsprobe : << : *infrasonar image : ghcr.io/infrasonar/dnsprobe tcpprobe : << : *infrasonar image : ghcr.io/infrasonar/tcpprobe snmpprobe : << : *infrasonar image : ghcr.io/infrasonar/snmpprobe wmiprobe : << : *infrasonar image : ghcr.io/infrasonar/wmiprobe mssqlprobe : << : *infrasonar image : ghcr.io/infrasonar/mssqlprobe vmwareprobe : << : *infrasonar image : ghcr.io/infrasonar/vmwareprobe netappprobe : << : *infrasonar image : ghcr.io/infrasonar/netappprobe pureprobe : << : *infrasonar image : ghcr.io/infrasonar/pureprobe smtpprobe : << : *infrasonar image : ghcr.io/infrasonar/smtpprobe dockeragent : << : *infrasonar image : ghcr.io/infrasonar/docker-agent environment : TOKEN : \"<<agent token>>\" volumes : - /var/run/docker.sock:/var/run/docker.sock Section outline x-infrasonar-template The x-infrasonar-template section ensures the default settings are the same for all InfraSonar containers. Agent-core service The Agent-core service contains an environment variable containing a TOKEN that must be set correctly prior to starting the InfraSonar environment. See the tokens section on how to determine the correct variable.","title":":material-docker: Docker"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#docker","text":"InfraSonar probes and the InfraSonar Agent-core are distributed using Docker containers. This section outlines this docker-compose setup.","title":" Docker"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#data-location","text":"We opt to store all InfraSonar related data and configuration in one directory, preferably in /etc/infrasonar .","title":"Data location"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#docker-compose-file","text":"The docker-compose file below can be used to deploy all currently available probes and an Agent-core. /etc/infrasonar/docker-compose.yml x-infrasonar-template : &infrasonar network_mode : host restart : always logging : options : max-size : 5m volumes : - ./data:/data/ services : agentcore : << : *infrasonar image : ghcr.io/infrasonar/agentcore environment : TOKEN : \"<<agentcore-token>>\" pingprobe : << : *infrasonar image : ghcr.io/infrasonar/ping-probe httpprobe : << : *infrasonar image : ghcr.io/infrasonar/httpprobe dnsprobe : << : *infrasonar image : ghcr.io/infrasonar/dnsprobe tcpprobe : << : *infrasonar image : ghcr.io/infrasonar/tcpprobe snmpprobe : << : *infrasonar image : ghcr.io/infrasonar/snmpprobe wmiprobe : << : *infrasonar image : ghcr.io/infrasonar/wmiprobe mssqlprobe : << : *infrasonar image : ghcr.io/infrasonar/mssqlprobe vmwareprobe : << : *infrasonar image : ghcr.io/infrasonar/vmwareprobe netappprobe : << : *infrasonar image : ghcr.io/infrasonar/netappprobe pureprobe : << : *infrasonar image : ghcr.io/infrasonar/pureprobe smtpprobe : << : *infrasonar image : ghcr.io/infrasonar/smtpprobe dockeragent : << : *infrasonar image : ghcr.io/infrasonar/docker-agent environment : TOKEN : \"<<agent token>>\" volumes : - /var/run/docker.sock:/var/run/docker.sock","title":"Docker compose file"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#section-outline","text":"","title":"Section outline"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#x-infrasonar-template","text":"The x-infrasonar-template section ensures the default settings are the same for all InfraSonar containers.","title":"x-infrasonar-template"},{"location":"documentation/collectors/probes/appliance/appliance_docker_compose/#agent-core-service","text":"The Agent-core service contains an environment variable containing a TOKEN that must be set correctly prior to starting the InfraSonar environment. See the tokens section on how to determine the correct variable.","title":"Agent-core service"},{"location":"documentation/collectors/probes/appliance/appliance_installation/","text":"Appliance This section outlines how to install the Linux appliance from scratch. Installation Ubuntu Server 22.04 LTS is used as the basis for the InfraSonar appliance. Create a new virtual machine using these specifications: Compatibility : Compatible with: ESXi 6.5 and later VM version 13 Guest OS Family : Linux Guest OS Version : Ubuntu Linux (64-bit) CPU : 1 CPU Memory : 2 GB memory Disk : 16 GB HDD Name : infrasonar-appliance Installation steps Boot from the Ubuntu Server 22.04.1 ISO and then follow these steps: Select your language: English . Keyboard configuration: Layout: English (US) . Variant: English (US) . Choose the type of install: Ubuntu server (minimized) Network configuration: DHCP. ( Note it can take some time for an IP address to get assigned ) Proxy address: enter a proxy address if your environment uses a proxy, otherwise leave empty. Mirror address: keep as it is , unless you know what you are doing . Guided storage configuration: Select: Use an entire disk . Deselect: Set up this disk as an LVM group . Storage configuration: Review the file system summary and select: Done . Confirm destructive action, by clicking: Continue . Profile setup: Your name: sysadmin . Your server's name: infrasonar-appliance . Pick a username: sysdmin . Choose a password: ... Confirm your password: ... SSH Setup: Select: Install OpenSSH Server . Import SSH identity: No . Featured Server Snaps: do not select any server snaps. If the installation is ready, select: Reboot now . Note Do not forget to unmount the ISO. Post installation steps Login to the appliance using SSH to perform the post installation steps. ssh sysadmin@<server-ip> Upgrade ```bash update and upgrade sudo apt update sudo apt upgrade sudo reboot ### VMware tools It is recommended to install [open-vm-tools](https://github.com/vmware/open-vm-tools), when the appliance is installed on a VMware hypervisor platform. ```bash # Update the APT package index. sudo apt update # Install open VMware tools. sudo apt install -y open-vm-tools Miscellaneous tools sudo apt install -y vim nano cron dns-utils snmp Docker installation All InfraSonar components run as Docker containers and are orchestrated using docker-compose. The official Docker engine installation instructions can be found here . sudo apt update sudo apt install -y \\ ca-certificates \\ curl \\ gnupg \\ lsb-release sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin sudo groupadd docker sudo usermod -aG docker $USER sudo systemctl enable docker.service sudo systemctl enable containerd.service Unattended updates As we want the InfraSonar appliance to be zero maintenance, we configure unattended updates and allow the appliance to reboot when necessary at 2:00 CET. Ubuntu unattended upgrades installation # Install the unattended-upgrades package. sudo apt install -y unattended-upgrades # Verify using the following systemctl command. sudo systemctl status unattended-upgrades # To set automatic updates, we are going to install the update-notifier-common package. sudo apt install -y update-notifier-common Ubuntu unattended upgrades configuration Change the file /etc/apt/apt.conf.d/50unattended-upgrades , so it reflects these changes: .... Unattended-Upgrade::Allowed-Origins { \"${distro_id}:${distro_codename}\"; \"${distro_id}:${distro_codename}-security\"; // Extended Security Maintenance; doesn't necessarily exist for // every release and this system may not have it installed, but if // available, the policy for updates is such that unattended-upgrades // should also install from here by default. \"${distro_id}ESMApps:${distro_codename}-apps-security\"; \"${distro_id}ESM:${distro_codename}-infra-security\"; \"${distro_id}:${distro_codename}-updates\"; // \"${distro_id}:${distro_codename}-proposed\"; // \"${distro_id}:${distro_codename}-backports\"; \"Docker:${distro_codename}\"; }; .... // Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade. Unattended-Upgrade::Automatic-Reboot \"true\"; // Automatically reboot even if there are users currently logged in // when Unattended-Upgrade::Automatic-Reboot is set to true. Unattended-Upgrade::Automatic-Reboot-WithUsers \"true\"; // If automatic reboot is enabled and needed, reboot at the specific // time instead of immediately. // Default: \"now\". Unattended-Upgrade::Automatic-Reboot-Time \"02:00\"; .... Enable daily unattended upgrades echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | sudo tee -a debconf-set-selections sudo dpkg-reconfigure -f noninteractive unattended-upgrades You can verify that automatic updates are turned on, with this command: sudo debconf-get-selections | grep -i enable_auto_updates Note debconf-get-selections requires debconf-utils to be installed ( sudo apt-get install debconf-utils ). We opt not to install this on production appliances, as we want to keep them as clean as possible. Logging Unattended Upgrades Log. The unattended-upgrades.log is a log file where you can view all actions done by the unattended upgrade system. You can view the file with, for example, the tail command: tail -n 100 /var/log/unattended-upgrades/unattended-upgrades.log SSH configuration Edit the file /etc/ssh/sshd_config to harden SSH access: /etc/ssh/sshd_config ... # Logging SyslogFacility AUTHPRIV # LogLevel INFO ... # Authentication: LoginGraceTime 10m PermitRootLogin no #StrictModes yes MaxAuthTries 3 MaxSessions 1 ... AllowAgentForwarding no AllowTcpForwarding no #GatewayPorts no X11Forwarding no Restart the SSH service to load the changes made. sudo service ssh restart SSH hardening options The above change implements these hardening options: Block clients for 10 minutes after 3 failed login attempts. Disallow root from logging in. Disable connection multiplexing, which can be used to bypass authentication. Disable user environment forwarding. SNMPD To monitor the Linux operating system, install the snmpd daemon: sudo apt install -y snmpd As we use the default community string public and only require the snmpd daemon to listen on localhost , no further configuration is required. # Read-only access to everyone to the systemonly view rocommunity public default rocommunity6 public default -V systemonly # SNMPv3 doesn't use communities, but users with (optionally) an tmate tmate is installed to offer remote support on request. sudo apt install -y tmate sudo configuration We opt to allow command to be executed using sudo without asking for a password. Edit the sudo config by starting the editor sudo visudo Make the following modification: # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) NOPASSWD:ALL InfraSonar InfraSonar is deployed on the appliance using Docker. We opt to use /etc/infrasonar as the main directory. sudo mkdir /etc/infrasonar Next step is to setup the Docker compose file in /etc/infrasonar/docker-compose.yml . This file is outlined here . On the downloadable appliance we provide the docker-compose.yml file at the following location /etc/infrasonar/docker-compose.yml.example . Appliance init Prior to creating a template the following steps need to be performed: Run the first boot script. Avoid duplicate SSH host keys. Avoid duplicate machine ID's. First boot script The following script is used to run at first boot and sets a random schedule for a daily InfraSonor update. /home/sysadmin/init #!/usr/bin/env bash # InfraSonar appliance init script. # This script is only run once on the first boot of the appliance. # Remove the init crontab. crontab -l | grep -v '/home/sysadmin/init' | crontab - # Scheduling docker crontab for: $hour:$minute\". hour = $ [ $RANDOM % 10 + 7 ] # Random hour between 7 and 16 minute = $ [ $RANDOM % 59 + 1 ] # Random minute between 1 and 59 ( crontab -l ; echo \" $minute $hour * * * docker compose -f /etc/infrasonar/docker-compose.yml pull && docker compose -f /etc/infrasonar/docker-compose.yml up -d\" ) | crontab - # Fix removed SSH host keys # Note: this requires the use of sudo without password sudo dpkg-reconfigure openssh-server sudo service ssh restart # Remove this init script. rm /home/sysadmin/init Add the script to the crontab to run as first boot: chmod +x /home/sysadmin/init ( crontab -l ; echo \"@reboot /home/sysadmin/init\" ) | crontab - Avoid duplicate SSH host keys To avoid lingering duplicate SSH host keys, we remove them before converting the appliance into a template. sudo rm /etc/ssh/ssh_host_* Avoid duplicate machine ID's See also this VMware knowledge base article. Before cloning, run these commands inside the Linux Guest OS: First login first boot Change hostname #!/bin/bash hostnamectl set-hostname \"blue\" echo $? hostnamectl set-hostname \"\" echo $? sudo hostnamectl set-hostname \"blue\" sudo sed -i 's/infrasonar/blue/g' /etc/hosts https://www.cyberciti.biz/faq/ubuntu-20-04-lts-change-hostname-permanently/ sudo hostnamectl set-hostname ubuntu-2004-nixcraft TODOR # Expire the sysadmin password enforcing the user to change the password at logon passwd -e sysadmin Cleanup Remove the history history -c Shutdown sudo shutdown -h now Export the appliance: cd C:\\Program Files\\VMware\\VMware OVF Tool ovftool \"vi://administrator@vsphere.local@vcenter.lab.test-technology.nl:443 \\ /Datacenter/vm/infrasonar-appliance\" \\ \"c:\\Documents and Settings\\sysadmin\\infrasonar-appliance.ova\" Enter login information for source vi://vcenter.lab.test-technology.nl/ Username: administrator%40vsphere.local Password: ******** Create a template Note The step below describe our lab configuration, adapt to your own needs. Open virtual center (https://vcenter.lab.test-technology.nl) Browse to the vm: infrasonar-appliance Right click the host and select Clone -> Clone to Template Name the template: infrasonar-appliance-template Select a location: vcenter.lab.test-technology \\ Datacenter Select a compute resource: Datacenter \\ esxi01.test-technology.nl Select storage: truenas","title":"Appliance"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#appliance","text":"This section outlines how to install the Linux appliance from scratch.","title":"Appliance"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#installation","text":"Ubuntu Server 22.04 LTS is used as the basis for the InfraSonar appliance. Create a new virtual machine using these specifications: Compatibility : Compatible with: ESXi 6.5 and later VM version 13 Guest OS Family : Linux Guest OS Version : Ubuntu Linux (64-bit) CPU : 1 CPU Memory : 2 GB memory Disk : 16 GB HDD Name : infrasonar-appliance","title":"Installation"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#installation-steps","text":"Boot from the Ubuntu Server 22.04.1 ISO and then follow these steps: Select your language: English . Keyboard configuration: Layout: English (US) . Variant: English (US) . Choose the type of install: Ubuntu server (minimized) Network configuration: DHCP. ( Note it can take some time for an IP address to get assigned ) Proxy address: enter a proxy address if your environment uses a proxy, otherwise leave empty. Mirror address: keep as it is , unless you know what you are doing . Guided storage configuration: Select: Use an entire disk . Deselect: Set up this disk as an LVM group . Storage configuration: Review the file system summary and select: Done . Confirm destructive action, by clicking: Continue . Profile setup: Your name: sysadmin . Your server's name: infrasonar-appliance . Pick a username: sysdmin . Choose a password: ... Confirm your password: ... SSH Setup: Select: Install OpenSSH Server . Import SSH identity: No . Featured Server Snaps: do not select any server snaps. If the installation is ready, select: Reboot now . Note Do not forget to unmount the ISO.","title":"Installation steps"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#post-installation-steps","text":"Login to the appliance using SSH to perform the post installation steps. ssh sysadmin@<server-ip>","title":"Post installation steps"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#upgrade","text":"```bash update and upgrade sudo apt update sudo apt upgrade sudo reboot ### VMware tools It is recommended to install [open-vm-tools](https://github.com/vmware/open-vm-tools), when the appliance is installed on a VMware hypervisor platform. ```bash # Update the APT package index. sudo apt update # Install open VMware tools. sudo apt install -y open-vm-tools","title":"Upgrade"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#miscellaneous-tools","text":"sudo apt install -y vim nano cron dns-utils snmp","title":"Miscellaneous tools"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#docker-installation","text":"All InfraSonar components run as Docker containers and are orchestrated using docker-compose. The official Docker engine installation instructions can be found here . sudo apt update sudo apt install -y \\ ca-certificates \\ curl \\ gnupg \\ lsb-release sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin sudo groupadd docker sudo usermod -aG docker $USER sudo systemctl enable docker.service sudo systemctl enable containerd.service","title":"Docker installation"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#unattended-updates","text":"As we want the InfraSonar appliance to be zero maintenance, we configure unattended updates and allow the appliance to reboot when necessary at 2:00 CET. Ubuntu unattended upgrades installation # Install the unattended-upgrades package. sudo apt install -y unattended-upgrades # Verify using the following systemctl command. sudo systemctl status unattended-upgrades # To set automatic updates, we are going to install the update-notifier-common package. sudo apt install -y update-notifier-common Ubuntu unattended upgrades configuration Change the file /etc/apt/apt.conf.d/50unattended-upgrades , so it reflects these changes: .... Unattended-Upgrade::Allowed-Origins { \"${distro_id}:${distro_codename}\"; \"${distro_id}:${distro_codename}-security\"; // Extended Security Maintenance; doesn't necessarily exist for // every release and this system may not have it installed, but if // available, the policy for updates is such that unattended-upgrades // should also install from here by default. \"${distro_id}ESMApps:${distro_codename}-apps-security\"; \"${distro_id}ESM:${distro_codename}-infra-security\"; \"${distro_id}:${distro_codename}-updates\"; // \"${distro_id}:${distro_codename}-proposed\"; // \"${distro_id}:${distro_codename}-backports\"; \"Docker:${distro_codename}\"; }; .... // Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade. Unattended-Upgrade::Automatic-Reboot \"true\"; // Automatically reboot even if there are users currently logged in // when Unattended-Upgrade::Automatic-Reboot is set to true. Unattended-Upgrade::Automatic-Reboot-WithUsers \"true\"; // If automatic reboot is enabled and needed, reboot at the specific // time instead of immediately. // Default: \"now\". Unattended-Upgrade::Automatic-Reboot-Time \"02:00\"; .... Enable daily unattended upgrades echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | sudo tee -a debconf-set-selections sudo dpkg-reconfigure -f noninteractive unattended-upgrades You can verify that automatic updates are turned on, with this command: sudo debconf-get-selections | grep -i enable_auto_updates Note debconf-get-selections requires debconf-utils to be installed ( sudo apt-get install debconf-utils ). We opt not to install this on production appliances, as we want to keep them as clean as possible. Logging Unattended Upgrades Log. The unattended-upgrades.log is a log file where you can view all actions done by the unattended upgrade system. You can view the file with, for example, the tail command: tail -n 100 /var/log/unattended-upgrades/unattended-upgrades.log","title":"Unattended updates"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#ssh-configuration","text":"Edit the file /etc/ssh/sshd_config to harden SSH access: /etc/ssh/sshd_config ... # Logging SyslogFacility AUTHPRIV # LogLevel INFO ... # Authentication: LoginGraceTime 10m PermitRootLogin no #StrictModes yes MaxAuthTries 3 MaxSessions 1 ... AllowAgentForwarding no AllowTcpForwarding no #GatewayPorts no X11Forwarding no Restart the SSH service to load the changes made. sudo service ssh restart SSH hardening options The above change implements these hardening options: Block clients for 10 minutes after 3 failed login attempts. Disallow root from logging in. Disable connection multiplexing, which can be used to bypass authentication. Disable user environment forwarding.","title":"SSH configuration"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#snmpd","text":"To monitor the Linux operating system, install the snmpd daemon: sudo apt install -y snmpd As we use the default community string public and only require the snmpd daemon to listen on localhost , no further configuration is required. # Read-only access to everyone to the systemonly view rocommunity public default rocommunity6 public default -V systemonly # SNMPv3 doesn't use communities, but users with (optionally) an","title":"SNMPD"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#tmate","text":"tmate is installed to offer remote support on request. sudo apt install -y tmate","title":"tmate"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#sudo-configuration","text":"We opt to allow command to be executed using sudo without asking for a password. Edit the sudo config by starting the editor sudo visudo Make the following modification: # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) NOPASSWD:ALL","title":"sudo configuration"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#infrasonar","text":"InfraSonar is deployed on the appliance using Docker. We opt to use /etc/infrasonar as the main directory. sudo mkdir /etc/infrasonar Next step is to setup the Docker compose file in /etc/infrasonar/docker-compose.yml . This file is outlined here . On the downloadable appliance we provide the docker-compose.yml file at the following location /etc/infrasonar/docker-compose.yml.example .","title":"InfraSonar"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#appliance-init","text":"Prior to creating a template the following steps need to be performed: Run the first boot script. Avoid duplicate SSH host keys. Avoid duplicate machine ID's.","title":"Appliance init"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#first-boot-script","text":"The following script is used to run at first boot and sets a random schedule for a daily InfraSonor update. /home/sysadmin/init #!/usr/bin/env bash # InfraSonar appliance init script. # This script is only run once on the first boot of the appliance. # Remove the init crontab. crontab -l | grep -v '/home/sysadmin/init' | crontab - # Scheduling docker crontab for: $hour:$minute\". hour = $ [ $RANDOM % 10 + 7 ] # Random hour between 7 and 16 minute = $ [ $RANDOM % 59 + 1 ] # Random minute between 1 and 59 ( crontab -l ; echo \" $minute $hour * * * docker compose -f /etc/infrasonar/docker-compose.yml pull && docker compose -f /etc/infrasonar/docker-compose.yml up -d\" ) | crontab - # Fix removed SSH host keys # Note: this requires the use of sudo without password sudo dpkg-reconfigure openssh-server sudo service ssh restart # Remove this init script. rm /home/sysadmin/init Add the script to the crontab to run as first boot: chmod +x /home/sysadmin/init ( crontab -l ; echo \"@reboot /home/sysadmin/init\" ) | crontab -","title":"First boot script"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#avoid-duplicate-ssh-host-keys","text":"To avoid lingering duplicate SSH host keys, we remove them before converting the appliance into a template. sudo rm /etc/ssh/ssh_host_*","title":"Avoid duplicate SSH host keys"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#avoid-duplicate-machine-ids","text":"See also this VMware knowledge base article. Before cloning, run these commands inside the Linux Guest OS:","title":"Avoid duplicate machine ID's"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#first-login","text":"","title":"First login"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#first-boot","text":"","title":"first boot"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#change-hostname","text":"#!/bin/bash hostnamectl set-hostname \"blue\" echo $? hostnamectl set-hostname \"\" echo $? sudo hostnamectl set-hostname \"blue\" sudo sed -i 's/infrasonar/blue/g' /etc/hosts https://www.cyberciti.biz/faq/ubuntu-20-04-lts-change-hostname-permanently/ sudo hostnamectl set-hostname ubuntu-2004-nixcraft TODOR # Expire the sysadmin password enforcing the user to change the password at logon passwd -e sysadmin","title":"Change hostname"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#cleanup","text":"Remove the history history -c","title":"Cleanup"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#shutdown","text":"sudo shutdown -h now","title":"Shutdown"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#export-the-appliance","text":"cd C:\\Program Files\\VMware\\VMware OVF Tool ovftool \"vi://administrator@vsphere.local@vcenter.lab.test-technology.nl:443 \\ /Datacenter/vm/infrasonar-appliance\" \\ \"c:\\Documents and Settings\\sysadmin\\infrasonar-appliance.ova\" Enter login information for source vi://vcenter.lab.test-technology.nl/ Username: administrator%40vsphere.local Password: ********","title":"Export the appliance:"},{"location":"documentation/collectors/probes/appliance/appliance_installation/#create-a-template","text":"Note The step below describe our lab configuration, adapt to your own needs. Open virtual center (https://vcenter.lab.test-technology.nl) Browse to the vm: infrasonar-appliance Right click the host and select Clone -> Clone to Template Name the template: infrasonar-appliance-template Select a location: vcenter.lab.test-technology \\ Datacenter Select a compute resource: Datacenter \\ esxi01.test-technology.nl Select storage: truenas","title":"Create a template"},{"location":"documentation/collectors/probes/appliance/appliance_operational/","text":"Appliance maintenance As the InfraSonar appliance updates itself it requires almost no maintenance. Manual update If you want to update your InfraSonar components manually you can do so using the following commands: # Look for newer images and pull these docker compose -f /etc/infrasonar/docker-compose.yml pull # Reload any changed images docker compose -f /etc/infrasonar/docker-compose.yml up -d Restarting InfraSonar If you want ro restart all InfraSonan containers you can do so using the following command: docker compose -f /etc/infrasonar/docker-compose.yml restart Logging For troubleshooting purposes you can change the loglevel in the /etc/infrasonar/docker-compose.yml Supported log levels: debug info warning error critical /etc/infrasonar/docker-compose.yml x-infrasonar-template : &infrasonar network_mode : host restart : always logging : options : max-size : 5m volumes : - ./data:/data/ services : agentcore : << : *infrasonar image : ghcr.io/infrasonar/agentcore environment : TOKEN : \"<your-token>\" LOG_LEVEL : \"debug\" LOG_COLORIZED : \"1\" pingprobe : << : *infrasonar image : ghcr.io/infrasonar/ping-probe environment : LOG_LEVEL : \"debug\" LOG_COLORIZED : \"1\" Note You need to restart you containers for changed log setting to become active.","title":"Appliance maintenance"},{"location":"documentation/collectors/probes/appliance/appliance_operational/#appliance-maintenance","text":"As the InfraSonar appliance updates itself it requires almost no maintenance.","title":"Appliance maintenance"},{"location":"documentation/collectors/probes/appliance/appliance_operational/#manual-update","text":"If you want to update your InfraSonar components manually you can do so using the following commands: # Look for newer images and pull these docker compose -f /etc/infrasonar/docker-compose.yml pull # Reload any changed images docker compose -f /etc/infrasonar/docker-compose.yml up -d","title":"Manual update"},{"location":"documentation/collectors/probes/appliance/appliance_operational/#restarting-infrasonar","text":"If you want ro restart all InfraSonan containers you can do so using the following command: docker compose -f /etc/infrasonar/docker-compose.yml restart","title":"Restarting InfraSonar"},{"location":"documentation/collectors/probes/appliance/appliance_operational/#logging","text":"For troubleshooting purposes you can change the loglevel in the /etc/infrasonar/docker-compose.yml Supported log levels: debug info warning error critical /etc/infrasonar/docker-compose.yml x-infrasonar-template : &infrasonar network_mode : host restart : always logging : options : max-size : 5m volumes : - ./data:/data/ services : agentcore : << : *infrasonar image : ghcr.io/infrasonar/agentcore environment : TOKEN : \"<your-token>\" LOG_LEVEL : \"debug\" LOG_COLORIZED : \"1\" pingprobe : << : *infrasonar image : ghcr.io/infrasonar/ping-probe environment : LOG_LEVEL : \"debug\" LOG_COLORIZED : \"1\" Note You need to restart you containers for changed log setting to become active.","title":"Logging"},{"location":"documentation/collectors/probes/appliance/credentials/","text":"Credentials Some InfraSonar probes require credentials to authenticate its queries. A good example is the WMI-probe that requires Windows domain credentials to perform WMI queries. Credentials are stored securely on the appliance at the monitored infrastructure and will only be used within the boundaries of the appliance. # WARNING: InfraSonar will make `password` and `secret` values unreadable but # this must not be regarded as true encryption as the encryption key is # publically available. # # Example configuration for `myprobe` collector: # myprobe : config : username : alice password : \"secret password\" assets : - id : 12345 config : username : bob password : \"my secret\" When Microsoft Active directory accounts are used the username can be either in domain format domain\\infrasonar_service_account or use the UPN format: infrasonar_service_account@domain.something FAQ is it possible to copy credentials? TODO","title":"Credentials"},{"location":"documentation/collectors/probes/appliance/credentials/#credentials","text":"Some InfraSonar probes require credentials to authenticate its queries. A good example is the WMI-probe that requires Windows domain credentials to perform WMI queries. Credentials are stored securely on the appliance at the monitored infrastructure and will only be used within the boundaries of the appliance. # WARNING: InfraSonar will make `password` and `secret` values unreadable but # this must not be regarded as true encryption as the encryption key is # publically available. # # Example configuration for `myprobe` collector: # myprobe : config : username : alice password : \"secret password\" assets : - id : 12345 config : username : bob password : \"my secret\" When Microsoft Active directory accounts are used the username can be either in domain format domain\\infrasonar_service_account or use the UPN format: infrasonar_service_account@domain.something","title":"Credentials"},{"location":"documentation/collectors/probes/appliance/credentials/#faq","text":"","title":"FAQ"},{"location":"documentation/collectors/probes/appliance/credentials/#is-it-possible-to-copy-credentials","text":"TODO","title":"is it possible to copy credentials?"},{"location":"documentation/collectors/services/","text":"Services Services are a new concept in private beta at the moment. A service collector is used to monitor a global service such as, for example, the status of Microsoft 365, AWS health, Google Cloud status, etc. The collected service status is reported back to all interested containers.","title":"Services"},{"location":"documentation/collectors/services/#services","text":"Services are a new concept in private beta at the moment. A service collector is used to monitor a global service such as, for example, the status of Microsoft 365, AWS health, Google Cloud status, etc. The collected service status is reported back to all interested containers.","title":"Services"},{"location":"documentation/collectors/services/last_seen/","text":"Last Seen","title":"Last Seen"},{"location":"documentation/collectors/services/last_seen/#last-seen","text":"","title":"Last Seen"},{"location":"documentation/guides/migration/","text":"Migration scenarios There are scenarios where a monitored environment needs to be moved to a container belonging to another organization. An example of such a scenario is when a monitored environment will be serviced by another managed services partner. This document outlines our preferred migration approach to ensure uninterrupted monitoring. Migration steps Migrating a monitored environment consists of two steps, which can be performed independently. Monitoring infrastructure transition. Hierarchy transition. However, the actual first step is to contact InfraSonar support to assist with the transition. InfraSonar support ensures a hassle-free transition by aligning all parties involved. Monitoring infrastructure transition This step involves transiting of the InfraSonar implementation inside the monitored environment; in most cases, this is the monitoring appliance . As this appliance is potentially used to provide other services within the monitored environment, we advise starting with setting up a new appliance (with the Agent-core and probes) and transitioning the monitored host to this new Agent-core. This process is similar to decommissioning an Agent-core. We do not recommend a \"rip and replace\" scenario, as this is not beneficial for the monitored environment. If the leaving and receiving parties are discussing terms and conditions, we recommend the following first: Deploy a new Agent-core infrastructure. Perform a hierarchy transition. Move the monitored hosts to the new Agent-core infrastructure. Remove the \"old\" Agent-cores from InfraSonar. Decommission and remove leaving party appliance(s). These steps can be performed without any access to the appliance(s) of the leaving party. Suppose the leaving party demands the appliance to be removed prior to the hierarchy transition. In that case, InfraSonar monitoring will most likely be disturbed when the orphaned hosts are transitioned to the new Agent-core(s). We strongly encourage a gradual and joint approach, as this ensures uninterrupted monitoring services of the monitored environment. Hierarchy transition A hierarchy transition is the move of a monitored environment from a container of the leaving party to a container of the receiving party. This is an administrative action performed inside the InfraSonar cloud platform. This step can only be performed by InfraSonar support and requires written and signed consent by the owner or its representative of the monitored environment. This consent should be sent via email to support@infrasonar.com . InfraSonar support will contact the parties involved to align the timeline for this transition to ensure optimal service for the monitored party. Warning Before a hierarchy transition, the leaving party should verify if the notes section does not contain references that should not be transitioned. During the hierarchy transition , the following irreversible actions will be performed: All custom conditions and labels will be removed, as they are the property of the leaving party. All alarms will be removed, as they might contain the usernames of the leaving party. Historical alerts will be removed, as they contain usernames and references to customizations owned by the leaving party. All Channels configuration will be removed. If you have questions or remarks concerning this section, don't hesitate to contact InfraSonar support.","title":"Migration"},{"location":"documentation/guides/migration/#migration-scenarios","text":"There are scenarios where a monitored environment needs to be moved to a container belonging to another organization. An example of such a scenario is when a monitored environment will be serviced by another managed services partner. This document outlines our preferred migration approach to ensure uninterrupted monitoring.","title":"Migration scenarios"},{"location":"documentation/guides/migration/#migration-steps","text":"Migrating a monitored environment consists of two steps, which can be performed independently. Monitoring infrastructure transition. Hierarchy transition. However, the actual first step is to contact InfraSonar support to assist with the transition. InfraSonar support ensures a hassle-free transition by aligning all parties involved.","title":"Migration steps"},{"location":"documentation/guides/migration/#monitoring-infrastructure-transition","text":"This step involves transiting of the InfraSonar implementation inside the monitored environment; in most cases, this is the monitoring appliance . As this appliance is potentially used to provide other services within the monitored environment, we advise starting with setting up a new appliance (with the Agent-core and probes) and transitioning the monitored host to this new Agent-core. This process is similar to decommissioning an Agent-core. We do not recommend a \"rip and replace\" scenario, as this is not beneficial for the monitored environment. If the leaving and receiving parties are discussing terms and conditions, we recommend the following first: Deploy a new Agent-core infrastructure. Perform a hierarchy transition. Move the monitored hosts to the new Agent-core infrastructure. Remove the \"old\" Agent-cores from InfraSonar. Decommission and remove leaving party appliance(s). These steps can be performed without any access to the appliance(s) of the leaving party. Suppose the leaving party demands the appliance to be removed prior to the hierarchy transition. In that case, InfraSonar monitoring will most likely be disturbed when the orphaned hosts are transitioned to the new Agent-core(s). We strongly encourage a gradual and joint approach, as this ensures uninterrupted monitoring services of the monitored environment.","title":"Monitoring infrastructure transition"},{"location":"documentation/guides/migration/#hierarchy-transition","text":"A hierarchy transition is the move of a monitored environment from a container of the leaving party to a container of the receiving party. This is an administrative action performed inside the InfraSonar cloud platform. This step can only be performed by InfraSonar support and requires written and signed consent by the owner or its representative of the monitored environment. This consent should be sent via email to support@infrasonar.com . InfraSonar support will contact the parties involved to align the timeline for this transition to ensure optimal service for the monitored party. Warning Before a hierarchy transition, the leaving party should verify if the notes section does not contain references that should not be transitioned. During the hierarchy transition , the following irreversible actions will be performed: All custom conditions and labels will be removed, as they are the property of the leaving party. All alarms will be removed, as they might contain the usernames of the leaving party. Historical alerts will be removed, as they contain usernames and references to customizations owned by the leaving party. All Channels configuration will be removed. If you have questions or remarks concerning this section, don't hesitate to contact InfraSonar support.","title":"Hierarchy transition"},{"location":"documentation/guides/remote_support/","text":"Remote support tmate We opt to use tmate to provide remote support as it is easy to use, fully open source, and allows TeamViewer-like access to the terminal. Installation Tmate comes preinstalled on our appliances, but if you have set up your environment manually, you might need to install tmate first. On Debian / Ubuntu systems the installation is straightforward: sudo apt-get install tmate For other distributions, follow the guides provided at the tmate website Usage Just type tmate while connected via ssh or in the console of your virtual appliance. You will be greeted with a screen like this: Tip: if you wish to use tmate only for remote access, run: tmate -F [ 0 /0 ] To see the following messages again, run in a tmate session: tmate show-messages Press <q> or <ctrl-c> to continue --------------------------------------------------------------------- Connecting to ssh.tmate.io... Note: clear your terminal before sharing readonly access web session read only: https://tmate.io/t/ro-generated_ro_id ssh session read only: ssh ro-generated_ro_id@lon1.tmate.io web session: https://tmate.io/t/generated_id ssh session: ssh generated_id@lon1.tmate.io Send our support engineer this information via a secure channel and ensure access is only used by our support engineer by observing the screen. If in doubt, exit the session using the exit command or by pressing ctrl-d","title":"Remote support"},{"location":"documentation/guides/remote_support/#remote-support","text":"","title":"Remote support"},{"location":"documentation/guides/remote_support/#tmate","text":"We opt to use tmate to provide remote support as it is easy to use, fully open source, and allows TeamViewer-like access to the terminal.","title":"tmate"},{"location":"documentation/guides/remote_support/#installation","text":"Tmate comes preinstalled on our appliances, but if you have set up your environment manually, you might need to install tmate first. On Debian / Ubuntu systems the installation is straightforward: sudo apt-get install tmate For other distributions, follow the guides provided at the tmate website","title":"Installation"},{"location":"documentation/guides/remote_support/#usage","text":"Just type tmate while connected via ssh or in the console of your virtual appliance. You will be greeted with a screen like this: Tip: if you wish to use tmate only for remote access, run: tmate -F [ 0 /0 ] To see the following messages again, run in a tmate session: tmate show-messages Press <q> or <ctrl-c> to continue --------------------------------------------------------------------- Connecting to ssh.tmate.io... Note: clear your terminal before sharing readonly access web session read only: https://tmate.io/t/ro-generated_ro_id ssh session read only: ssh ro-generated_ro_id@lon1.tmate.io web session: https://tmate.io/t/generated_id ssh session: ssh generated_id@lon1.tmate.io Send our support engineer this information via a secure channel and ensure access is only used by our support engineer by observing the screen. If in doubt, exit the session using the exit command or by pressing ctrl-d","title":"Usage"},{"location":"documentation/introduction/contact_us/","text":"Contact us Contact details support@infrasonar.com +31 85 876 8733 Availability We are a European company based in the Netherlands. Our general availability is from Monday to Friday between 08:00 and 17:00 (CET) 1 . Services Implementation services Implementing a monitoring solution can be a challenging task. Our implementation consultants have a lot of experience in not only implementing InfraSonar but also on helping your organization into accepting and eventually embracing a new way of working. Support Support is only a phone-call, slack message or email away. Custom development A InfraSonar is an open platform adding custom probes, agents and or services to our platform is easily done. Feel free to contact us to discuss your monitoring needs. Analysis support Analyzing monitoring data and combining metrics to create custom dashboards to offer an in-depth view of your monitored infrastructure is one off InfraSonors unique features. If you have any specific requirements we can jointly figure out what would we the best way to setup InfraSonar dashboards. Different times are possible by appointment. \u21a9","title":"Contact us"},{"location":"documentation/introduction/contact_us/#contact-us","text":"","title":"Contact us"},{"location":"documentation/introduction/contact_us/#contact-details","text":"support@infrasonar.com +31 85 876 8733","title":"Contact details"},{"location":"documentation/introduction/contact_us/#availability","text":"We are a European company based in the Netherlands. Our general availability is from Monday to Friday between 08:00 and 17:00 (CET) 1 .","title":"Availability"},{"location":"documentation/introduction/contact_us/#services","text":"Implementation services Implementing a monitoring solution can be a challenging task. Our implementation consultants have a lot of experience in not only implementing InfraSonar but also on helping your organization into accepting and eventually embracing a new way of working. Support Support is only a phone-call, slack message or email away. Custom development A InfraSonar is an open platform adding custom probes, agents and or services to our platform is easily done. Feel free to contact us to discuss your monitoring needs. Analysis support Analyzing monitoring data and combining metrics to create custom dashboards to offer an in-depth view of your monitored infrastructure is one off InfraSonors unique features. If you have any specific requirements we can jointly figure out what would we the best way to setup InfraSonar dashboards. Different times are possible by appointment. \u21a9","title":"Services"},{"location":"documentation/introduction/getting_started/","text":"Getting started with InfraSonar Familiarize We recommend setting up a small-scale testing environment and using this documentation to guide you on your journey to become acquainted with InfraSonar and its terminology. Implementation steps Implementing a basic InfraSonar configuration is easy because InfraSonar can be deployed agent-less and thus leaves no footprint on the monitored infrastructure. Create an environment The first step is to create an environment for your assets (hosts). Deploy the InfraSonar appliance Deploy and setup the InfraSonar appliance in your environment. Configure probes Setting up (default) credentials is the only configuration required in most cases. Add assets Add assets using the web application. Implementation support Feel free to reach out to us for support when implementing/evaluating InfraSonar. Our implementation Consultants have years of experience and are keen to show you around and get the best out of our platform.","title":"Getting started"},{"location":"documentation/introduction/getting_started/#getting-started-with-infrasonar","text":"","title":"Getting started with InfraSonar"},{"location":"documentation/introduction/getting_started/#familiarize","text":"We recommend setting up a small-scale testing environment and using this documentation to guide you on your journey to become acquainted with InfraSonar and its terminology.","title":"Familiarize"},{"location":"documentation/introduction/getting_started/#implementation-steps","text":"Implementing a basic InfraSonar configuration is easy because InfraSonar can be deployed agent-less and thus leaves no footprint on the monitored infrastructure. Create an environment The first step is to create an environment for your assets (hosts). Deploy the InfraSonar appliance Deploy and setup the InfraSonar appliance in your environment. Configure probes Setting up (default) credentials is the only configuration required in most cases. Add assets Add assets using the web application.","title":"Implementation steps"},{"location":"documentation/introduction/getting_started/#implementation-support","text":"Feel free to reach out to us for support when implementing/evaluating InfraSonar. Our implementation Consultants have years of experience and are keen to show you around and get the best out of our platform.","title":"Implementation support"},{"location":"documentation/introduction/platform/","text":"Platform This section provides an overview of the InfraSonar monitoring platform. Architectural overview An architectural overview of the InfraSonar platform InfraSonar can be broken down in three area's: Collectors; InfraSonar cloud; InfraSonar application. Collectors Within InfraSonar, we identify three concepts for collecting data: Agents Agents run autonomously on an endpoint and send data straight to the InfraSonar platform. Probes Probes query an endpoint using a specific protocol. Services Services monitor an endpoint and report the status to multiple containers. E.g. Microsoft 365 Service Health Status InfraSonar cloud The InfraSonar cloud platform is hosted on the Google Cloud Platform . Data from a monitored environment is received and processed in the InfraSonar cloud platform on what we call the Message-hubs. These Message-hubs evaluate the data against configured conditions and store received time series data in SiriDB . Received state data is kept in memory by the Message-hubs. InfraSonar application The InfraSonar application is a web based user interface which accessible using any modern web browser. The application can send messages to end-users using email or Dutycalls. See our application section in the documentation for more information","title":"Platform"},{"location":"documentation/introduction/platform/#platform","text":"This section provides an overview of the InfraSonar monitoring platform.","title":"Platform"},{"location":"documentation/introduction/platform/#architectural-overview","text":"An architectural overview of the InfraSonar platform InfraSonar can be broken down in three area's: Collectors; InfraSonar cloud; InfraSonar application.","title":"Architectural overview"},{"location":"documentation/introduction/platform/#collectors","text":"Within InfraSonar, we identify three concepts for collecting data: Agents Agents run autonomously on an endpoint and send data straight to the InfraSonar platform. Probes Probes query an endpoint using a specific protocol. Services Services monitor an endpoint and report the status to multiple containers. E.g. Microsoft 365 Service Health Status","title":"Collectors"},{"location":"documentation/introduction/platform/#infrasonar-cloud","text":"The InfraSonar cloud platform is hosted on the Google Cloud Platform . Data from a monitored environment is received and processed in the InfraSonar cloud platform on what we call the Message-hubs. These Message-hubs evaluate the data against configured conditions and store received time series data in SiriDB . Received state data is kept in memory by the Message-hubs.","title":"InfraSonar cloud"},{"location":"documentation/introduction/platform/#infrasonar-application","text":"The InfraSonar application is a web based user interface which accessible using any modern web browser. The application can send messages to end-users using email or Dutycalls. See our application section in the documentation for more information","title":"InfraSonar application"},{"location":"documentation/introduction/terminology/","text":"Terminology Term Description Agent-core Central component in a monitored infrastructure that acts as a relay between probes and the InfraSonar cloud. Agents A standalone InfraSonar component that can send monitoring data to InfraSonar via the API API The API allows users to perform automated access using a personal access token. Appliance A dedicated (virtual) Linux appliance for InfraSonar. Asset A monitored network component in an environment. Container Used to organize environments and authorization in those environments. Frontend These are the webservers hosting the UI for end users to access InfraSonar. Messagehub State is stored here in memory, and logic is performed when new monitoring data arrives. SiriDB The database used for storing timeseries data with a long term retention. Probes These perform the actual measurement and are tailored per monitored component. Environment A business or an IT infrastructure monitored using InfraSonar.","title":"Terminology"},{"location":"documentation/introduction/terminology/#terminology","text":"Term Description Agent-core Central component in a monitored infrastructure that acts as a relay between probes and the InfraSonar cloud. Agents A standalone InfraSonar component that can send monitoring data to InfraSonar via the API API The API allows users to perform automated access using a personal access token. Appliance A dedicated (virtual) Linux appliance for InfraSonar. Asset A monitored network component in an environment. Container Used to organize environments and authorization in those environments. Frontend These are the webservers hosting the UI for end users to access InfraSonar. Messagehub State is stored here in memory, and logic is performed when new monitoring data arrives. SiriDB The database used for storing timeseries data with a long term retention. Probes These perform the actual measurement and are tailored per monitored component. Environment A business or an IT infrastructure monitored using InfraSonar.","title":"Terminology"},{"location":"documentation/introduction/what_is_Infra_Sonar/","text":"What is InfraSonar InfraSonar is the brainchild of two IT infrastructure specialists who joined forces with an IT service provider to create an easy-to-maintain, uniform monitoring platform. Using open standards from vendors, the InfraSonar monitoring appliance securely monitors your IT infrastructure. InfraSonar comes out of the box with many predefined conditions based on years of experience and best practices. This predefined set of conditions and agent-less monitoring capabilities make for an easy and non-intrusive rollout with minimum effort. Single source of truth InfraSonar's detailed data collection allows it to serve as your organization's single \"source of truth.\" InfraSonar capabilities State monitoring This allows us to monitor whether the status is still in the desired state, detect state changes and even detect missing items such as volumes, services, and software. Performance monitoring Monitors the current state and notifies when a threshold is reached. Performance data is stored in our time series database SiriDB for analysis over time. Analysis Performance data and hit alerts (open & closed) are used for analysis over time. API Utilizing the InfraSonar API allows for easy integration with automation platforms, such as Ansible and Salt .","title":"What is InfraSonar"},{"location":"documentation/introduction/what_is_Infra_Sonar/#what-is-infrasonar","text":"InfraSonar is the brainchild of two IT infrastructure specialists who joined forces with an IT service provider to create an easy-to-maintain, uniform monitoring platform. Using open standards from vendors, the InfraSonar monitoring appliance securely monitors your IT infrastructure. InfraSonar comes out of the box with many predefined conditions based on years of experience and best practices. This predefined set of conditions and agent-less monitoring capabilities make for an easy and non-intrusive rollout with minimum effort. Single source of truth InfraSonar's detailed data collection allows it to serve as your organization's single \"source of truth.\"","title":"What is InfraSonar"},{"location":"documentation/introduction/what_is_Infra_Sonar/#infrasonar-capabilities","text":"State monitoring This allows us to monitor whether the status is still in the desired state, detect state changes and even detect missing items such as volumes, services, and software. Performance monitoring Monitors the current state and notifies when a threshold is reached. Performance data is stored in our time series database SiriDB for analysis over time. Analysis Performance data and hit alerts (open & closed) are used for analysis over time. API Utilizing the InfraSonar API allows for easy integration with automation platforms, such as Ansible and Salt .","title":"InfraSonar capabilities"},{"location":"documentation/privacy-security/privacy/","text":"Privacy Protecting the privacy of the InfraSonar Platform and its customers is a top priority. This page describes what we do and what you as a user can do to guarantee this privacy as well as possible. Data control Customer data is your data, not InfraSonar\u2019s. We only process your data according to your agreement(s). It is, therefore, also possible to manage and delete all user-related information. Data Access and Restrictions Only a minimum number of InfraSonar employees have access to user data to ensure user privacy. We recommend following the same policy in your InfraSonar environments. Only give users access to the resources they need. Data collection and use We are transparent about data collection and use. We are committed to transparency, compliance with regulations like the GDPR, and privacy best practices. That is why we only collect data necessary for the platform's functioning. It is up to the user to determine which monitoring data needs to be collected. In addition, we never sell customer data or service data to third parties. Data retention InfraSonar has the following different retention periods for its data. Configuration data Configuration data such as labels, conditions and authorizations are stored while configured. When a configuration change is made, we don't retain any history in our logging and backups. Time series data Time series data is stored in SiriDB, part of the InfraSonar cloud platform. For actively monitored assets/hosts we store performance data with a retention period of 66 weeks (15 months). Time series that have not received any data for three weeks are purged from the database, as these are stale metrics. Closed alerts Closed alerts have a retention period of 8 weeks. State data State data is kept in memory and is considered volatile. Backup retention SiriDB backups have a four day retention period. Configuration data backups have an eight weeks retention period. Data localization All data collected by InfraSonar is stored in the European Union in accordance with the GDPR.","title":"Privacy"},{"location":"documentation/privacy-security/privacy/#privacy","text":"Protecting the privacy of the InfraSonar Platform and its customers is a top priority. This page describes what we do and what you as a user can do to guarantee this privacy as well as possible.","title":"Privacy"},{"location":"documentation/privacy-security/privacy/#data-control","text":"Customer data is your data, not InfraSonar\u2019s. We only process your data according to your agreement(s). It is, therefore, also possible to manage and delete all user-related information.","title":"Data control"},{"location":"documentation/privacy-security/privacy/#data-access-and-restrictions","text":"Only a minimum number of InfraSonar employees have access to user data to ensure user privacy. We recommend following the same policy in your InfraSonar environments. Only give users access to the resources they need.","title":"Data Access and Restrictions"},{"location":"documentation/privacy-security/privacy/#data-collection-and-use","text":"We are transparent about data collection and use. We are committed to transparency, compliance with regulations like the GDPR, and privacy best practices. That is why we only collect data necessary for the platform's functioning. It is up to the user to determine which monitoring data needs to be collected. In addition, we never sell customer data or service data to third parties.","title":"Data collection and use"},{"location":"documentation/privacy-security/privacy/#data-retention","text":"InfraSonar has the following different retention periods for its data.","title":"Data retention"},{"location":"documentation/privacy-security/privacy/#configuration-data","text":"Configuration data such as labels, conditions and authorizations are stored while configured. When a configuration change is made, we don't retain any history in our logging and backups.","title":"Configuration data"},{"location":"documentation/privacy-security/privacy/#time-series-data","text":"Time series data is stored in SiriDB, part of the InfraSonar cloud platform. For actively monitored assets/hosts we store performance data with a retention period of 66 weeks (15 months). Time series that have not received any data for three weeks are purged from the database, as these are stale metrics.","title":"Time series data"},{"location":"documentation/privacy-security/privacy/#closed-alerts","text":"Closed alerts have a retention period of 8 weeks.","title":"Closed alerts"},{"location":"documentation/privacy-security/privacy/#state-data","text":"State data is kept in memory and is considered volatile.","title":"State data"},{"location":"documentation/privacy-security/privacy/#backup-retention","text":"SiriDB backups have a four day retention period. Configuration data backups have an eight weeks retention period.","title":"Backup retention"},{"location":"documentation/privacy-security/privacy/#data-localization","text":"All data collected by InfraSonar is stored in the European Union in accordance with the GDPR.","title":"Data localization"},{"location":"documentation/privacy-security/security_considerations/","text":"Security considerations InfraSonar is an infrastructure monitoring platform as a service. This document outlines some security considerations to take into account when deploying InfraSonar. Our focus and efforts are aimed at retrieving monitoring data, and sending the collected data securely to the InfraSonar cloud platform for further analysis. Note InfraSonar is not an IT automation tool and cannot make changes to a monitored environment. However, some InfraSonar implementations use the InfraSonar API to integrate with an on-premises automation solution such as Ansible, ensuring a single point of truth for configuration management. Context To properly read this security considerations page, it is essential to keep the following context in mind: InfraSonar monitoring data is collected through: Probes running in a Docker container on the monitoring appliance . Custom collectors are sending data via the InfraSonar API . Collected data is sent to the InfraSonar platform for further analysis and user consumption in the InfraSonar frontend. The platform guide explains this architecture further. InfraSonar design principles Our development team adheres to these principles: Use least privilege accounts to access monitoring data when possible. Use vendor-documented standards such as API or management protocols to query data. When credentials are required, these should be stored encrypted on the monitoring appliance. The customer or managed service provider controls access to InfraSonar data. Avoid third-party libraries when possible. Set up security scanners in our version control system for all projects. Security-related issues take precedence over all other matters. The three states of data InfraSonar processes massive amounts of monitoring data stored for historical analysis, such as trending. We strive to treat all collected data as if it were sensitive data. InfraSonar data can be in one of 3 so-called states. Data at rest Data currently not being accessed, which is stored on a physical or logical medium. InfraSonar stores data in it\u2019s cloud platform on AES256 encrypted disks. The appliance itself has no disk encryption but uses file-based encryption where possible. Data in transit Data that \u201ctravels\u201d between devices. The most straightforward example is emails that are in transit. All data sent between InfraSonar services is SSL encrypted. Data collected by probes is potentially unencrypted, as not all technologies used to collect monitoring data use encryption. SNMP v2c is an example where data is sent without any encryption. Data in use Data actively in use by one or more applications for analysis or for access/consumption by end-users. When data is in use, it needs to be in a readable format; this is especially true for data consumed by end-users. Automated data processing takes place in the datacenters, which have several certifications related to security measurements. These include, but are not limited to: ISO/IEC 27001 ISO/IEC 27017 ISO/IEC 27018 SOC 2 SOC 3 The InfraSonar appliance has no special security measures other than those of the environment in which the appliance is used to protect data. Data classification We use the following data classification for InfraSonar and InfraSonar related data: Restricted Configuration data stored on the monitoring appliance, as this contains (encrypted) credentials. Log data stored on the appliance, as this potentially contains user ids. InfraSonar accounts lists. Sensitive Time series data and performance metrics collected on monitored assets / hosts. State data. InfraSonar platform source code. CRM data. Contracts. Internal InfraSonar back office, such as invoices. InfraSonar support incidents. InfraSonar Slack and email communication. Public InfraSonar open source code: SiriDB - Time series database used in InfraSonar. ThingsDB - NoSQL database used in InfraSonar. InfraSonar probes. InfraSonar documentation. Monitoring appliance The monitoring appliance on which the InfraSonar probes and InfraSonar Agent-core are deployed requires extra attention, as many vendors do not support a 'least privilege' approach to collecting monitoring data. As such, the probes often require the use of highly privileged accounts and sometimes even root or administrator accounts. Our recommendations: Set up SSH Passwordless Authentication. Disable User SSH Passwordless Connection Requests. Disable SSH Root Logins. Use SSH Protocol 2. Set SSH Connection Timeout Idle Value. Limit SSH Access to Certain Users. Configure a Limit for Password Attempts. Update the underlying Linux operating system frequently. Perform a daily pull command for new InfraSonar containers. Use the latest tag for InfraSonar containers unless otherwise specified by InfraSonar support. If your company requires version pinning, please let us know so we can explicitly notify you when we release probe updates. Frequently update the password used by InfraSonar probes. Use disk encryption when possible.","title":"Security"},{"location":"documentation/privacy-security/security_considerations/#security-considerations","text":"InfraSonar is an infrastructure monitoring platform as a service. This document outlines some security considerations to take into account when deploying InfraSonar. Our focus and efforts are aimed at retrieving monitoring data, and sending the collected data securely to the InfraSonar cloud platform for further analysis. Note InfraSonar is not an IT automation tool and cannot make changes to a monitored environment. However, some InfraSonar implementations use the InfraSonar API to integrate with an on-premises automation solution such as Ansible, ensuring a single point of truth for configuration management.","title":"Security considerations"},{"location":"documentation/privacy-security/security_considerations/#context","text":"To properly read this security considerations page, it is essential to keep the following context in mind: InfraSonar monitoring data is collected through: Probes running in a Docker container on the monitoring appliance . Custom collectors are sending data via the InfraSonar API . Collected data is sent to the InfraSonar platform for further analysis and user consumption in the InfraSonar frontend. The platform guide explains this architecture further.","title":"Context"},{"location":"documentation/privacy-security/security_considerations/#infrasonar-design-principles","text":"Our development team adheres to these principles: Use least privilege accounts to access monitoring data when possible. Use vendor-documented standards such as API or management protocols to query data. When credentials are required, these should be stored encrypted on the monitoring appliance. The customer or managed service provider controls access to InfraSonar data. Avoid third-party libraries when possible. Set up security scanners in our version control system for all projects. Security-related issues take precedence over all other matters.","title":"InfraSonar design principles"},{"location":"documentation/privacy-security/security_considerations/#the-three-states-of-data","text":"InfraSonar processes massive amounts of monitoring data stored for historical analysis, such as trending. We strive to treat all collected data as if it were sensitive data. InfraSonar data can be in one of 3 so-called states. Data at rest Data currently not being accessed, which is stored on a physical or logical medium. InfraSonar stores data in it\u2019s cloud platform on AES256 encrypted disks. The appliance itself has no disk encryption but uses file-based encryption where possible. Data in transit Data that \u201ctravels\u201d between devices. The most straightforward example is emails that are in transit. All data sent between InfraSonar services is SSL encrypted. Data collected by probes is potentially unencrypted, as not all technologies used to collect monitoring data use encryption. SNMP v2c is an example where data is sent without any encryption. Data in use Data actively in use by one or more applications for analysis or for access/consumption by end-users. When data is in use, it needs to be in a readable format; this is especially true for data consumed by end-users. Automated data processing takes place in the datacenters, which have several certifications related to security measurements. These include, but are not limited to: ISO/IEC 27001 ISO/IEC 27017 ISO/IEC 27018 SOC 2 SOC 3 The InfraSonar appliance has no special security measures other than those of the environment in which the appliance is used to protect data.","title":"The three states of data"},{"location":"documentation/privacy-security/security_considerations/#data-classification","text":"We use the following data classification for InfraSonar and InfraSonar related data: Restricted Configuration data stored on the monitoring appliance, as this contains (encrypted) credentials. Log data stored on the appliance, as this potentially contains user ids. InfraSonar accounts lists. Sensitive Time series data and performance metrics collected on monitored assets / hosts. State data. InfraSonar platform source code. CRM data. Contracts. Internal InfraSonar back office, such as invoices. InfraSonar support incidents. InfraSonar Slack and email communication. Public InfraSonar open source code: SiriDB - Time series database used in InfraSonar. ThingsDB - NoSQL database used in InfraSonar. InfraSonar probes. InfraSonar documentation.","title":"Data classification"},{"location":"documentation/privacy-security/security_considerations/#monitoring-appliance","text":"The monitoring appliance on which the InfraSonar probes and InfraSonar Agent-core are deployed requires extra attention, as many vendors do not support a 'least privilege' approach to collecting monitoring data. As such, the probes often require the use of highly privileged accounts and sometimes even root or administrator accounts. Our recommendations: Set up SSH Passwordless Authentication. Disable User SSH Passwordless Connection Requests. Disable SSH Root Logins. Use SSH Protocol 2. Set SSH Connection Timeout Idle Value. Limit SSH Access to Certain Users. Configure a Limit for Password Attempts. Update the underlying Linux operating system frequently. Perform a daily pull command for new InfraSonar containers. Use the latest tag for InfraSonar containers unless otherwise specified by InfraSonar support. If your company requires version pinning, please let us know so we can explicitly notify you when we release probe updates. Frequently update the password used by InfraSonar probes. Use disk encryption when possible.","title":"Monitoring appliance"},{"location":"integrations/","text":"Overview All kinds of applications are or can be integrated with InfraSonar. This way we can offer your organization as much functionality as possible without you having to stop using your favorite applications. Here's how to integrate your favorite application(s) with InfraSonar. DutyCalls is a notification routing tool made to make events more visible to its audience. Using DutyCalls in conjunction with InfraSonar offers a great solution to route alerts to the on-call staff. ConnectWise Manage is a PSA solution for MSP business. Our integration offers easy creation of ConnectWise Manage tickets from InfraSonar alerts.","title":"Overview"},{"location":"integrations/#overview","text":"All kinds of applications are or can be integrated with InfraSonar. This way we can offer your organization as much functionality as possible without you having to stop using your favorite applications. Here's how to integrate your favorite application(s) with InfraSonar. DutyCalls is a notification routing tool made to make events more visible to its audience. Using DutyCalls in conjunction with InfraSonar offers a great solution to route alerts to the on-call staff. ConnectWise Manage is a PSA solution for MSP business. Our integration offers easy creation of ConnectWise Manage tickets from InfraSonar alerts.","title":"Overview"},{"location":"integrations/connectwise_manage/","text":"ConnectWise InfraSonar has a specific API endpoint to integrate with ConnectWise Manage. This integration allows an InfraSonar environment to be \"mapped\" to a ConnectWise Manage company, thus allowing the automatic creation of ConnectWise Manage tickets from InfraSonar alerts. If you want to use this integration, please get in touch with InfraSonar support for assistance.","title":"ConnectWise Manage"},{"location":"integrations/connectwise_manage/#connectwise","text":"InfraSonar has a specific API endpoint to integrate with ConnectWise Manage. This integration allows an InfraSonar environment to be \"mapped\" to a ConnectWise Manage company, thus allowing the automatic creation of ConnectWise Manage tickets from InfraSonar alerts. If you want to use this integration, please get in touch with InfraSonar support for assistance.","title":"ConnectWise"},{"location":"integrations/dutycalls/dutycalls-best-practices/","text":"DutyCalls We assume you have set up the DutyCalls integration as described here InfraSonar configuration Using the InfraSonar channel configuration, you can configure and finetune which alerts are passed on the DutyCalls. Configuration is possible on these three levels: Severity , allows you to specify from which severity level an alert is passed to DutyCalls. Conditions , allows you to configure which conditions are allowed or are rejected to pass on to DutyCalls. Hosts allows you to configure for which hosts you want to receive DutyCalls notifications. It is also possible to suppress specific conditions from sending an alert to DutyCalls. Best practice. Only send alerts with the severity level alert or higher. Use reject rules but sparsely. Use configure specific hosts only when absolutely required. Setup your team Lead by example DutyCalls is especially useful for self-organizing teams. Add team members Let your team members log on to DutyCalls to ensure the platform recognizes them. Invite your team members to your workspace. Manage exceptions DutyCalls uses manager alerts to manage exceptions if the regular operation does not go as expected. A DutyCalls manager can set up Manager alerts per workspace or per channel; the best practice is to set these up per workspace and only deviate if necessary. Alert Default behavior Unacknowledged tickets Notifies if a ticket is not acknowledged in 1 hour Acknowledged tickets Notifies if an acknowledged is not modified in 1 hour Open tickets Notifies when a ticket is open for more then 2 hours. Another critical alert to configure is the minimum number of active subscribers, this must be done per channel. In most scenarios, you would want at least one subscriber per channel, but for high-profile environments, it might be better to up the number to ensure swift follow-up. Subscriber notifications DutyCalls can notify via email or in-app notifications. SMS and phone notifications are available using an optional license. Best practice. Using phone notifications ensures the best response from engineers as in-app or SMS notifications tend to get unnoticed.","title":"Best practices"},{"location":"integrations/dutycalls/dutycalls-best-practices/#dutycalls","text":"We assume you have set up the DutyCalls integration as described here","title":"DutyCalls"},{"location":"integrations/dutycalls/dutycalls-best-practices/#infrasonar-configuration","text":"Using the InfraSonar channel configuration, you can configure and finetune which alerts are passed on the DutyCalls. Configuration is possible on these three levels: Severity , allows you to specify from which severity level an alert is passed to DutyCalls. Conditions , allows you to configure which conditions are allowed or are rejected to pass on to DutyCalls. Hosts allows you to configure for which hosts you want to receive DutyCalls notifications. It is also possible to suppress specific conditions from sending an alert to DutyCalls. Best practice. Only send alerts with the severity level alert or higher. Use reject rules but sparsely. Use configure specific hosts only when absolutely required.","title":"InfraSonar configuration"},{"location":"integrations/dutycalls/dutycalls-best-practices/#setup-your-team","text":"Lead by example DutyCalls is especially useful for self-organizing teams.","title":"Setup your team"},{"location":"integrations/dutycalls/dutycalls-best-practices/#add-team-members","text":"Let your team members log on to DutyCalls to ensure the platform recognizes them. Invite your team members to your workspace.","title":"Add team members"},{"location":"integrations/dutycalls/dutycalls-best-practices/#manage-exceptions","text":"DutyCalls uses manager alerts to manage exceptions if the regular operation does not go as expected. A DutyCalls manager can set up Manager alerts per workspace or per channel; the best practice is to set these up per workspace and only deviate if necessary. Alert Default behavior Unacknowledged tickets Notifies if a ticket is not acknowledged in 1 hour Acknowledged tickets Notifies if an acknowledged is not modified in 1 hour Open tickets Notifies when a ticket is open for more then 2 hours. Another critical alert to configure is the minimum number of active subscribers, this must be done per channel. In most scenarios, you would want at least one subscriber per channel, but for high-profile environments, it might be better to up the number to ensure swift follow-up.","title":"Manage exceptions"},{"location":"integrations/dutycalls/dutycalls-best-practices/#subscriber-notifications","text":"DutyCalls can notify via email or in-app notifications. SMS and phone notifications are available using an optional license. Best practice. Using phone notifications ensures the best response from engineers as in-app or SMS notifications tend to get unnoticed.","title":"Subscriber notifications"},{"location":"integrations/dutycalls/dutycalls-getting-started/","text":"DutyCalls Do you want to stay informed about the latest InfraSonar alerts directly in DutyCalls? Make use of the ready-made DutyCalls integration. This guide helps you to to get started with DutyCalls. DutyCalls configuration Implementing DutyCalls is a four step approach. flowchart LR A((Create DutyCalls <br> account))-->B B((Create DutyCalls <br> workspace))-->C C((Create DutyCalls <br> source))-->D((Create DutyCalls <br> Channel)) Create a DutyCalls account Creating a DutyCalls account is the first step. The DutyCalls sign-up documentation provides additional information on account creation. Create a DutyCalls workspace A DutyCalls workspace is usually a representation of a company or department. Steps for creating a workspace: Enter the workspace name Set the correct timezone Provide an optional icon for your workspace ( Only icons of the PNG format are accepted and the maximum dimensions are 128 x 128 pixels. The width and height must also be equal to each other. ) Create a DutyCalls source For InfraSonar we use DutyCalls custom API mapping to format the data toward a compatible DutyCalls data source InfraSonar specific steps: Open the previously created workspace Select Services from the right hand menu Click the Add service button Provide a name for the service e.g. InfraSonar and click next Select yes when asked if you want to use a predefined template and select the InfraSonar template Click Add to continue Create a DutyCalls channel A DutyCalls channel must be linked to the source created in the previous step. Browse to the previously created service Click the Add channel button Provide a name for your channel, we suggest to keep the channel name and environment name the same. Setting up a channel per environment is our best practice. Choose the manager for this channel, the manager get's notified if something is amiss within the channel Select the previously created InfraSonar service Set the minimum number of active subscribed to your organizations needs, when this is your first setup you might want to set this to 1 Click Add Observe the channel and note the No. Active Subscribers is 0/1 , click subscribe to retrieve notifications for this channel DutyCalls has now been setup, next step is to configure InfraSonar to integrate with DutyCalls. InfraSonar configuration To complete the setup and receive alerts in DutyCalls, some additional configuration has to be done in InfraSonar. This step requires the DutyCalls Service credentials. Retrieve DutyCalls Service credentials Open DutyCalls Select Services from the left hand menu Click the Setup icon from the service you have setup for InfraSonar Click Send security code ; this wil send a code to the email address you are logged on with in DutyCalls. Enter the received security code Make note od the username and password Source configuration The first step is to add the source you just created to the desired InfraSonar container. Select the container for which you would like to configure DutyCalls. Click the DutyCalls icon in the left hand menu, this should open the DutyCalls configuration page Click on the Configure source button. Enter the previously retrieved username as Consumer key and the password as Consumer secret and click on the Save button. Channel configuration The second step is to add the channel you created to the container you selected in the previous step. Select the Channels option from the left-hand menu in InfraSonar Click the Add channel button to add a DutyCalls channel Provide the correct Channel name as previously created in DutyCalls Enter an optional description Select the correct DutyCalls source Optionally set condition and host filters, to filter the alerts that will be forwarded to DutyCalls. The configuration has now been completed. Alerts related to the configured InfraSonar container will be posted in the configured DutyCalls channel.","title":"Getting started"},{"location":"integrations/dutycalls/dutycalls-getting-started/#dutycalls","text":"Do you want to stay informed about the latest InfraSonar alerts directly in DutyCalls? Make use of the ready-made DutyCalls integration. This guide helps you to to get started with DutyCalls.","title":"DutyCalls"},{"location":"integrations/dutycalls/dutycalls-getting-started/#dutycalls-configuration","text":"Implementing DutyCalls is a four step approach. flowchart LR A((Create DutyCalls <br> account))-->B B((Create DutyCalls <br> workspace))-->C C((Create DutyCalls <br> source))-->D((Create DutyCalls <br> Channel))","title":"DutyCalls configuration"},{"location":"integrations/dutycalls/dutycalls-getting-started/#create-a-dutycalls-account","text":"Creating a DutyCalls account is the first step. The DutyCalls sign-up documentation provides additional information on account creation.","title":"Create a DutyCalls account"},{"location":"integrations/dutycalls/dutycalls-getting-started/#create-a-dutycalls-workspace","text":"A DutyCalls workspace is usually a representation of a company or department. Steps for creating a workspace: Enter the workspace name Set the correct timezone Provide an optional icon for your workspace ( Only icons of the PNG format are accepted and the maximum dimensions are 128 x 128 pixels. The width and height must also be equal to each other. )","title":"Create a DutyCalls workspace"},{"location":"integrations/dutycalls/dutycalls-getting-started/#create-a-dutycalls-source","text":"For InfraSonar we use DutyCalls custom API mapping to format the data toward a compatible DutyCalls data source InfraSonar specific steps: Open the previously created workspace Select Services from the right hand menu Click the Add service button Provide a name for the service e.g. InfraSonar and click next Select yes when asked if you want to use a predefined template and select the InfraSonar template Click Add to continue","title":"Create a DutyCalls source"},{"location":"integrations/dutycalls/dutycalls-getting-started/#create-a-dutycalls-channel","text":"A DutyCalls channel must be linked to the source created in the previous step. Browse to the previously created service Click the Add channel button Provide a name for your channel, we suggest to keep the channel name and environment name the same. Setting up a channel per environment is our best practice. Choose the manager for this channel, the manager get's notified if something is amiss within the channel Select the previously created InfraSonar service Set the minimum number of active subscribed to your organizations needs, when this is your first setup you might want to set this to 1 Click Add Observe the channel and note the No. Active Subscribers is 0/1 , click subscribe to retrieve notifications for this channel DutyCalls has now been setup, next step is to configure InfraSonar to integrate with DutyCalls.","title":"Create a DutyCalls channel"},{"location":"integrations/dutycalls/dutycalls-getting-started/#infrasonar-configuration","text":"To complete the setup and receive alerts in DutyCalls, some additional configuration has to be done in InfraSonar. This step requires the DutyCalls Service credentials.","title":"InfraSonar configuration"},{"location":"integrations/dutycalls/dutycalls-getting-started/#retrieve-dutycalls-service-credentials","text":"Open DutyCalls Select Services from the left hand menu Click the Setup icon from the service you have setup for InfraSonar Click Send security code ; this wil send a code to the email address you are logged on with in DutyCalls. Enter the received security code Make note od the username and password","title":"Retrieve DutyCalls Service credentials"},{"location":"integrations/dutycalls/dutycalls-getting-started/#source-configuration","text":"The first step is to add the source you just created to the desired InfraSonar container. Select the container for which you would like to configure DutyCalls. Click the DutyCalls icon in the left hand menu, this should open the DutyCalls configuration page Click on the Configure source button. Enter the previously retrieved username as Consumer key and the password as Consumer secret and click on the Save button.","title":"Source configuration"},{"location":"integrations/dutycalls/dutycalls-getting-started/#channel-configuration","text":"The second step is to add the channel you created to the container you selected in the previous step. Select the Channels option from the left-hand menu in InfraSonar Click the Add channel button to add a DutyCalls channel Provide the correct Channel name as previously created in DutyCalls Enter an optional description Select the correct DutyCalls source Optionally set condition and host filters, to filter the alerts that will be forwarded to DutyCalls. The configuration has now been completed. Alerts related to the configured InfraSonar container will be posted in the configured DutyCalls channel.","title":"Channel configuration"}]}